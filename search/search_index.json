{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Contents \u00b6 The links listed below should be followed in the order they appear on the page from top to bottom. Use the \u2190 Previous and Next \u2192 buttons on the top menu bar to navigate. Introduction \u00b6 Introduction Software and Microcontroller Preparation Order Parts \u00b6 Bill of Materials Fabricate the Printed Circuit Boards (PCBs) 3D Print the Display Parts Assemble and Test Components \u00b6 Actuator Assembly Digit PCB Assembly Deploy Digit Project Digit PCB Test Conductor PCB Assembly Deploy Conductor Project Conductor PCB Test Power Management PCB Assembly Power Management PCB Test Buck Module Wiring UART and Relay Wiring Display Face and PCBs Assembly with Integration Testing Backplate and Stand Assembly Segment Assembly and Installation","title":"Contents"},{"location":"#contents","text":"The links listed below should be followed in the order they appear on the page from top to bottom. Use the \u2190 Previous and Next \u2192 buttons on the top menu bar to navigate.","title":"Contents"},{"location":"#introduction","text":"Introduction Software and Microcontroller Preparation","title":"Introduction"},{"location":"#order_parts","text":"Bill of Materials Fabricate the Printed Circuit Boards (PCBs) 3D Print the Display Parts","title":"Order Parts"},{"location":"#assemble_and_test_components","text":"Actuator Assembly Digit PCB Assembly Deploy Digit Project Digit PCB Test Conductor PCB Assembly Deploy Conductor Project Conductor PCB Test Power Management PCB Assembly Power Management PCB Test Buck Module Wiring UART and Relay Wiring Display Face and PCBs Assembly with Integration Testing Backplate and Stand Assembly Segment Assembly and Installation","title":"Assemble and Test Components"},{"location":"intro/","text":"Kinetic Display \u00b6 gobbyo | jbeman@hotmail.com Introduction \u00b6 The Kinetic Display is an innovative and engaging way to showcase the current time, date, indoor temperature and humidity, and outdoor temperature and humidity. Watch the feature summary video below to see it in action. This robotic seven-segment clock-like display consists of 4 digits and 2 colons, totaling 30 actuators that extend and retract segments. Each segment lights up when extended and turns off when retracted, creating a satisfying clacking sound with every movement, adding a unique auditory experience. Feature Summary Designed for durability, the display is built to last for years when assembled correctly by following the detailed documentation. Below is an overview of the iterative design process that led to the creation of a robust, reliable, and cost-effective display, fully 3D-printable on a 256mm x 256mm x 256mm build plate. Actuator Prototype The actuators are the heart of the display, and getting their design right was critical. Early prototypes revealed issues such as gear tooth breakage due to improper sizing, material selection, and abrupt stops during operation. Adjustments to gear dimensions and the use of heavy-duty 103 motors significantly improved performance, enabling smooth operation with lower voltage requirements. Segment Prototype Multiple iterations of the segment design ensured the robustness of the segment head and its attachment to the rack gear. Experiments also determined the best cushioning material to absorb the impact of constant actuator movement. Digit Prototype The first digit prototype provided valuable insights into PCB design, software requirements, and the optimal dimensions for positioning the seven actuators within a single digit. First Prototype The prototype below has been running continuously since April 2024, demonstrating the reliability and durability of the design.","title":"Kinetic Display"},{"location":"intro/#kinetic_display","text":"gobbyo | jbeman@hotmail.com","title":"Kinetic Display"},{"location":"intro/#introduction","text":"The Kinetic Display is an innovative and engaging way to showcase the current time, date, indoor temperature and humidity, and outdoor temperature and humidity. Watch the feature summary video below to see it in action. This robotic seven-segment clock-like display consists of 4 digits and 2 colons, totaling 30 actuators that extend and retract segments. Each segment lights up when extended and turns off when retracted, creating a satisfying clacking sound with every movement, adding a unique auditory experience. Feature Summary Designed for durability, the display is built to last for years when assembled correctly by following the detailed documentation. Below is an overview of the iterative design process that led to the creation of a robust, reliable, and cost-effective display, fully 3D-printable on a 256mm x 256mm x 256mm build plate. Actuator Prototype The actuators are the heart of the display, and getting their design right was critical. Early prototypes revealed issues such as gear tooth breakage due to improper sizing, material selection, and abrupt stops during operation. Adjustments to gear dimensions and the use of heavy-duty 103 motors significantly improved performance, enabling smooth operation with lower voltage requirements. Segment Prototype Multiple iterations of the segment design ensured the robustness of the segment head and its attachment to the rack gear. Experiments also determined the best cushioning material to absorb the impact of constant actuator movement. Digit Prototype The first digit prototype provided valuable insights into PCB design, software requirements, and the optimal dimensions for positioning the seven actuators within a single digit. First Prototype The prototype below has been running continuously since April 2024, demonstrating the reliability and durability of the design.","title":"Introduction"},{"location":"prerequisitesoftware/","text":"Software and Microcontroller Preparation \u00b6 If you have any problems with this documentation or the code, please create a new issue on the Kinetic-Display GitHub site. Prerequisites \u00b6 Read and bookmark the instructions to install MicroPython onto your Raspberry Pi Pico . Install Visual Studio Code . With VS Code installed and open, click on the extensions icon on the Activity bar and install the following extensions from Marketplace : Python by Microsoft. MicroPico by paulober. Download the flash_nuke UF2 file . Clear your Raspberry Pi Pico before flashing a new build: Plug a USB cable into your Raspberry Pi Pico's USB port. Press and hold the BOOTSEL button on your Raspberry Pi Pico while plugging your USB cable into your computer. Verify an RPI-RP2 storage device appears. Drag and drop the flash_nuke.uf2 file into the RPI-RP2 storage. Download the MicroPython UF2 file for the Raspberry Pi Pico and Raspberry Pi Pico W . Verify MicroPython on your Raspberry Pi Pico \u00b6 Open Visual Studio Code. On the top menu, select the (A) ellipsis ... (if present), then (B) Terminal -> New Terminal . In the terminal pane, select the terminal menu (A) followed by the MicroPico vREPL sub-menu (B) . Plug your Raspberry Pi Pico into the USB port, and the (A) Status bar will show your Pico as connected. Verify your Pico's onboard LED turns on and off by typing the following code in the (B) Terminal pane (screen capture above). Copy/paste each line separately: from machine import Pin p = Pin(25, Pin.OUT) p.on() p.off() Fork and Clone the Repository \u00b6 Install Git for Windows. Open a browser and follow the link to the Kinetic-Display repository. Create a fork from the kinetic-display repository. Run this step if you have never used or run PowerShell on your computer: Open a new PowerShell terminal by clicking on the Windows icon in the bottom taskbar and searching for \"Windows PowerShell,\" then run the application as administrator. See (A) in the screenshot below. (B) Type Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope CurrentUser in the PowerShell terminal and press Enter. (C) Verify the command by typing Get-ExecutionPolicy -List and ensure the CurrentUser is set to Unrestricted . If you did not need to run the previous step, then open a new PowerShell terminal by clicking on the Windows icon in the bottom taskbar and searching for \"Windows PowerShell,\" then run the application. See (A) in the screenshot below. Change the directory to kinetic-display\\micropython\\pico in your cloned fork. See (B) in the previous screenshot. Run the command ./deploy.ps1 <directorypath> where <directorypath> is replaced with a quoted path to a folder, for example, ./deploy.ps1 \"c:\\deploy\" . See (A) in the screenshot below. Warning The folder you provide for <directorypath> will be deleted along with all its contents when you run the deploy.ps1 script. Be sure to save or rename the folder if you want to preserve any changes you made. You'll get the following example output when successful. Also, see (B) in the previous screenshot. Verify the conductor and digit folders exist under the folder you provided in the parameter for the ./deploy.ps1 . You'll use the code in the conductor and digit folders to test and load onto your Raspberry Pi 2040 Picos and Pico W. Directory: C:\\deploy Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 1/31/2025 8:30 PM conductor d----- 1/31/2025 8:30 PM digit","title":"Software and Microcontroller Preparation"},{"location":"prerequisitesoftware/#software_and_microcontroller_preparation","text":"If you have any problems with this documentation or the code, please create a new issue on the Kinetic-Display GitHub site.","title":"Software and Microcontroller Preparation"},{"location":"prerequisitesoftware/#prerequisites","text":"Read and bookmark the instructions to install MicroPython onto your Raspberry Pi Pico . Install Visual Studio Code . With VS Code installed and open, click on the extensions icon on the Activity bar and install the following extensions from Marketplace : Python by Microsoft. MicroPico by paulober. Download the flash_nuke UF2 file . Clear your Raspberry Pi Pico before flashing a new build: Plug a USB cable into your Raspberry Pi Pico's USB port. Press and hold the BOOTSEL button on your Raspberry Pi Pico while plugging your USB cable into your computer. Verify an RPI-RP2 storage device appears. Drag and drop the flash_nuke.uf2 file into the RPI-RP2 storage. Download the MicroPython UF2 file for the Raspberry Pi Pico and Raspberry Pi Pico W .","title":"Prerequisites"},{"location":"prerequisitesoftware/#verify_micropython_on_your_raspberry_pi_pico","text":"Open Visual Studio Code. On the top menu, select the (A) ellipsis ... (if present), then (B) Terminal -> New Terminal . In the terminal pane, select the terminal menu (A) followed by the MicroPico vREPL sub-menu (B) . Plug your Raspberry Pi Pico into the USB port, and the (A) Status bar will show your Pico as connected. Verify your Pico's onboard LED turns on and off by typing the following code in the (B) Terminal pane (screen capture above). Copy/paste each line separately: from machine import Pin p = Pin(25, Pin.OUT) p.on() p.off()","title":"Verify MicroPython on your Raspberry Pi Pico"},{"location":"prerequisitesoftware/#fork_and_clone_the_repository","text":"Install Git for Windows. Open a browser and follow the link to the Kinetic-Display repository. Create a fork from the kinetic-display repository. Run this step if you have never used or run PowerShell on your computer: Open a new PowerShell terminal by clicking on the Windows icon in the bottom taskbar and searching for \"Windows PowerShell,\" then run the application as administrator. See (A) in the screenshot below. (B) Type Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope CurrentUser in the PowerShell terminal and press Enter. (C) Verify the command by typing Get-ExecutionPolicy -List and ensure the CurrentUser is set to Unrestricted . If you did not need to run the previous step, then open a new PowerShell terminal by clicking on the Windows icon in the bottom taskbar and searching for \"Windows PowerShell,\" then run the application. See (A) in the screenshot below. Change the directory to kinetic-display\\micropython\\pico in your cloned fork. See (B) in the previous screenshot. Run the command ./deploy.ps1 <directorypath> where <directorypath> is replaced with a quoted path to a folder, for example, ./deploy.ps1 \"c:\\deploy\" . See (A) in the screenshot below. Warning The folder you provide for <directorypath> will be deleted along with all its contents when you run the deploy.ps1 script. Be sure to save or rename the folder if you want to preserve any changes you made. You'll get the following example output when successful. Also, see (B) in the previous screenshot. Verify the conductor and digit folders exist under the folder you provided in the parameter for the ./deploy.ps1 . You'll use the code in the conductor and digit folders to test and load onto your Raspberry Pi 2040 Picos and Pico W. Directory: C:\\deploy Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 1/31/2025 8:30 PM conductor d----- 1/31/2025 8:30 PM digit","title":"Fork and Clone the Repository"},{"location":"assembly/actuatorassembly/","text":"Actuator Assembly \u00b6 This guide ensures the actuators function reliably and integrate seamlessly into the display system. There are 30 actuators in the display, 7 per digit and 2 for the colons (4 digits x 7 segments + 2 colons = 30 total actuators). The actuator assembly includes installing the shaft gear onto the DC brushed motor, preparing and adding wires to the motor, assembling the motor mount, pinion gear, and shaft, then adding the DC brushed motor to the assembled motor mount. The picture below shows a fully assembled actuator. Prerequisites \u00b6 Nylon pinion gear 30, digit-gear30.stl Black Matte PLA shaft gear 10, digit-gear10.stl White Matte PLA motor mount, digit-motor-mount.stl Tip Ensure all 3D-printed parts are free of defects and printed with the recommended settings for optimal fit and durability. Table of components Quantity Component Image 30 130 Strong Magnetic Toy Motor 150 cm 28 AWG Stranded Wire (white) 150 cm 28 AWG Stranded Wire (black) 60 DuPont 2.54mm Pitch Female Connector Pin 30 DuPont 2.54mm Pitch Terminal Connector Single Row Housing 2 Pin 10 Jumbo Metal Paperclip (smooth) Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Large regular tipped screwdriver Yes Super glue Yes 22-34 AWG Wire Stripper and Cutter Yes Pin Crimp Tool for 2.54mm Dupont Connectors Yes Heavy Duty Wire Cutter Pliers Yes Heavy Duty Cross Locking or Clamping Tweezers Yes 10cm zinc strip No Label Maker (optional for labeling wires) Warning Always work in a well-ventilated area when soldering or using super glue to avoid inhaling fumes. Shaft Gear \u00b6 In this section, you'll glue the shaft gear onto the motor shaft to prevent slippage. The shaft gear must be made from rigid filament like PLA or ABS. Shaft Gear Installation Steps \u00b6 The tools and parts needed include: a regular tipped screwdriver, super glue, digit-gear10.stl , and a DC brushed toy motor. Apply Glue : Add a drop of super glue to the shaft gear. Ensure the gear is 10mm high with a 5mm hole. Avoid excess glue to prevent it from seeping into the motor shaft. Attach the Gear : Position the DC motor vertically so the bottom of the shaft rests on a hard surface. Use the screwdriver to press the gear 5mm down onto the shaft. Ensure the gear is aligned and does not wobble. Repeat : Follow these steps for the remaining 29 motors. Allow the glue to cure for at least 10 minutes before proceeding. Wires \u00b6 The white 28 AWG wire provides clockwise (CW) motion to extend the segment, while the black wire provides counterclockwise (CCW) motion to retract it. Wire Cutting and Soldering Steps \u00b6 Cut Wires : Cut 9 white and 9 black wires to 6cm for actuators labeled \"C\", \"D\", and \"UC\" (upper colon). Cut 21 white and 21 black wires to 4cm for the remaining actuators. Use a ruler for precise measurements. Strip Wires : Strip 3mm of insulation from one end of each wire. Avoid nicking the wire strands. Prepare Terminals : Position the motor with the shaft pointing away and terminals facing up. Heat the soldering iron to 350\u00b0C and tin each terminal with a small amount of solder. Solder Wires : Solder the white wire to the left terminal and the black wire to the right terminal. Ensure the solder joints are clean and secure. Tip Use a helping hand tool to hold the motor steady while soldering. Note Label the black-wire side of the 6cm actuators (\"C\", \"D\", and \"UC\"). No labels are needed for the 4cm actuators. Dupont Connections \u00b6 Strip Wires : Strip 3mm of insulation from the free end of each wire. Crimp Connectors : Attach female Dupont connectors to each wire. Attach Housing : Slide the wires into the Dupont connector housing until the pins lock in place. Repeat : Complete this process for all motors. Ensure labeled actuators are correctly marked. Tip Test each connection from the Dupont connector to the soldered wire on the motor with a multimeter to ensure continuity before proceeding. Motor Mount \u00b6 Properly assembling the motor mount is critical to avoid issues like jamming or sticking. The motor mount consists of: (A) Motor mount ( digit-motor-mount.stl ) (B) Pinion reduction gear ( digit-gear30.stl ) (C) Pinion gear shaft (cut from a jumbo paperclip) Discard the red support section. Motor Mount Assembly Steps \u00b6 Cut Shaft : Cut straight sections from a jumbo paperclip into 2cm pieces. Use heavy-duty wire cutter pliers for clean cuts. Insert Shaft : Insert the 2cm shaft into the motor mount until it protrudes 1mm into the pinion gear space. Ensure the shaft is straight. Attach Pinion Gear : Align the pinion gear hole with the shaft and slide it into the motor mount. Verify the gear rotates freely. Melt Collar : Heat the soldering iron to 250\u00b0C. Use a zinc strip to melt and flatten the collar onto the motor mount. Work carefully to avoid damaging the mount. Verify Fit : Ensure the shaft rotates freely in the pinion gear. Reprint the gear if necessary to avoid jamming. Lubricate lightly if needed. Install Motor : Insert the prepared motor into the mount with the shaft pointing left and terminals downward. Secure the motor firmly. Repeat : Assemble the remaining 29 motors. Perform a final inspection to ensure all assemblies are consistent. Warning Avoid overtightening or forcing components, as this may cause damage or misalignment.","title":"Actuators"},{"location":"assembly/actuatorassembly/#actuator_assembly","text":"This guide ensures the actuators function reliably and integrate seamlessly into the display system. There are 30 actuators in the display, 7 per digit and 2 for the colons (4 digits x 7 segments + 2 colons = 30 total actuators). The actuator assembly includes installing the shaft gear onto the DC brushed motor, preparing and adding wires to the motor, assembling the motor mount, pinion gear, and shaft, then adding the DC brushed motor to the assembled motor mount. The picture below shows a fully assembled actuator.","title":"Actuator Assembly"},{"location":"assembly/actuatorassembly/#prerequisites","text":"Nylon pinion gear 30, digit-gear30.stl Black Matte PLA shaft gear 10, digit-gear10.stl White Matte PLA motor mount, digit-motor-mount.stl Tip Ensure all 3D-printed parts are free of defects and printed with the recommended settings for optimal fit and durability. Table of components Quantity Component Image 30 130 Strong Magnetic Toy Motor 150 cm 28 AWG Stranded Wire (white) 150 cm 28 AWG Stranded Wire (black) 60 DuPont 2.54mm Pitch Female Connector Pin 30 DuPont 2.54mm Pitch Terminal Connector Single Row Housing 2 Pin 10 Jumbo Metal Paperclip (smooth) Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Large regular tipped screwdriver Yes Super glue Yes 22-34 AWG Wire Stripper and Cutter Yes Pin Crimp Tool for 2.54mm Dupont Connectors Yes Heavy Duty Wire Cutter Pliers Yes Heavy Duty Cross Locking or Clamping Tweezers Yes 10cm zinc strip No Label Maker (optional for labeling wires) Warning Always work in a well-ventilated area when soldering or using super glue to avoid inhaling fumes.","title":"Prerequisites"},{"location":"assembly/actuatorassembly/#shaft_gear","text":"In this section, you'll glue the shaft gear onto the motor shaft to prevent slippage. The shaft gear must be made from rigid filament like PLA or ABS.","title":"Shaft Gear"},{"location":"assembly/actuatorassembly/#shaft_gear_installation_steps","text":"The tools and parts needed include: a regular tipped screwdriver, super glue, digit-gear10.stl , and a DC brushed toy motor. Apply Glue : Add a drop of super glue to the shaft gear. Ensure the gear is 10mm high with a 5mm hole. Avoid excess glue to prevent it from seeping into the motor shaft. Attach the Gear : Position the DC motor vertically so the bottom of the shaft rests on a hard surface. Use the screwdriver to press the gear 5mm down onto the shaft. Ensure the gear is aligned and does not wobble. Repeat : Follow these steps for the remaining 29 motors. Allow the glue to cure for at least 10 minutes before proceeding.","title":"Shaft Gear Installation Steps"},{"location":"assembly/actuatorassembly/#wires","text":"The white 28 AWG wire provides clockwise (CW) motion to extend the segment, while the black wire provides counterclockwise (CCW) motion to retract it.","title":"Wires"},{"location":"assembly/actuatorassembly/#wire_cutting_and_soldering_steps","text":"Cut Wires : Cut 9 white and 9 black wires to 6cm for actuators labeled \"C\", \"D\", and \"UC\" (upper colon). Cut 21 white and 21 black wires to 4cm for the remaining actuators. Use a ruler for precise measurements. Strip Wires : Strip 3mm of insulation from one end of each wire. Avoid nicking the wire strands. Prepare Terminals : Position the motor with the shaft pointing away and terminals facing up. Heat the soldering iron to 350\u00b0C and tin each terminal with a small amount of solder. Solder Wires : Solder the white wire to the left terminal and the black wire to the right terminal. Ensure the solder joints are clean and secure. Tip Use a helping hand tool to hold the motor steady while soldering. Note Label the black-wire side of the 6cm actuators (\"C\", \"D\", and \"UC\"). No labels are needed for the 4cm actuators.","title":"Wire Cutting and Soldering Steps"},{"location":"assembly/actuatorassembly/#dupont_connections","text":"Strip Wires : Strip 3mm of insulation from the free end of each wire. Crimp Connectors : Attach female Dupont connectors to each wire. Attach Housing : Slide the wires into the Dupont connector housing until the pins lock in place. Repeat : Complete this process for all motors. Ensure labeled actuators are correctly marked. Tip Test each connection from the Dupont connector to the soldered wire on the motor with a multimeter to ensure continuity before proceeding.","title":"Dupont Connections"},{"location":"assembly/actuatorassembly/#motor_mount","text":"Properly assembling the motor mount is critical to avoid issues like jamming or sticking. The motor mount consists of: (A) Motor mount ( digit-motor-mount.stl ) (B) Pinion reduction gear ( digit-gear30.stl ) (C) Pinion gear shaft (cut from a jumbo paperclip) Discard the red support section.","title":"Motor Mount"},{"location":"assembly/actuatorassembly/#motor_mount_assembly_steps","text":"Cut Shaft : Cut straight sections from a jumbo paperclip into 2cm pieces. Use heavy-duty wire cutter pliers for clean cuts. Insert Shaft : Insert the 2cm shaft into the motor mount until it protrudes 1mm into the pinion gear space. Ensure the shaft is straight. Attach Pinion Gear : Align the pinion gear hole with the shaft and slide it into the motor mount. Verify the gear rotates freely. Melt Collar : Heat the soldering iron to 250\u00b0C. Use a zinc strip to melt and flatten the collar onto the motor mount. Work carefully to avoid damaging the mount. Verify Fit : Ensure the shaft rotates freely in the pinion gear. Reprint the gear if necessary to avoid jamming. Lubricate lightly if needed. Install Motor : Insert the prepared motor into the mount with the shaft pointing left and terminals downward. Secure the motor firmly. Repeat : Assemble the remaining 29 motors. Perform a final inspection to ensure all assemblies are consistent. Warning Avoid overtightening or forcing components, as this may cause damage or misalignment.","title":"Motor Mount Assembly Steps"},{"location":"assembly/backplateassembly/","text":"Backplate and Stand Assembly \u00b6 This guide details installing the backplate onto the display face, installing the DHT22 sensor, connecting the motor wires to the motor pins, and installing the stand and power manager onto the display face. Below is the back of the display when the backplates and stand are assembled. Prerequisites \u00b6 Completed all the guides previous to this assembly guide, which include the digit PCBs, conductor and digit 1 PCB, power management PCB, and mounting the buck modules. digit-back-plate.stl digit2-back-plate.stl digit1-back-plate.stl Digit Backplate Assembly \u00b6 The picture below shows the digit 0 and 3 backplates in an upright position. Note the segment characters, A through G , engraved onto the backplate. The round port holes allow the motor's rack gear to protrude into the face of the display. The rectangular holes allow the motor's white and black wires to plug into their respective CW and CCW pins on the PCB. digit-back-plate.stl The picture below shows the digit 2 backplate. Digit 2 backplate is nearly the same as the backplates for digits 0 and 3 except for the stand mount hole as highlighted by the white box. digit2-back-plate.stl Each motor is mounted to the backplate using three M1.7x8mm screws. Use a small philips tip screwdriver to install the motors. A larger philips tip screwdriver is prone to overtighten and may cause the head of the screw to shear off. The picture below shows the order the actuator motors should be installed. Repeat the install for digits 2 and 3. Conductor and Digit One Backplate Assembly \u00b6 The picture below shows the conductor and digit one backplate in an upright position. The backplate has engraved segment characters A through G and colons U and L . The large rectangular hole above the U label is where the on/off switch is mounted. Also note the top edge of the backplate has a slot for the LDR to fit into. digit1-back-plate.stl The picture below shows the order the actuator motors should be installed. Install the Backplates onto the Face \u00b6 With the digit face pointing down, place the backplates into the slots on the back of the digit face. Each backplate is mounted to the face using M2x15mm screws. Use a medium sized philips tip screwdriver to install the backplates. The picture below shows the installation of the backplates onto the face. Using needlenose pliers, connect each of the motor's Dupont connector to their respective CW (white wire) and CCW (black wire) pins on the PCB. Trim the 3 wires that come with the DHT22 to a suitable length, then connect the Dupont connections to the appropriate sensor pins. Verify the wires connecting the + Data - pins on the PCB are connected to the sensor's + Data - pins. Using an M1.7x6mm self tapping screw, mount the DHT22 as shown in the picture below. Install the Stand onto the Face \u00b6 Place the notches in the stand into the groove on the face as shown in the picture below. Be sure not to pinch any of the power management wires while mounting the stand. Following the picture below, (A) attach the stand's vertical holder to the digit 2 backplate with an M1.7x8mm self tapping screw. (B) Attach the stand's side mounting tabs with M2x15mm self tapping screws. Set the digit upright on the stand. See be picture at the beginning of this guide to verify the completed assembly of the backplates and stand.","title":"Backplate and Stand Assembly"},{"location":"assembly/backplateassembly/#backplate_and_stand_assembly","text":"This guide details installing the backplate onto the display face, installing the DHT22 sensor, connecting the motor wires to the motor pins, and installing the stand and power manager onto the display face. Below is the back of the display when the backplates and stand are assembled.","title":"Backplate and Stand Assembly"},{"location":"assembly/backplateassembly/#prerequisites","text":"Completed all the guides previous to this assembly guide, which include the digit PCBs, conductor and digit 1 PCB, power management PCB, and mounting the buck modules. digit-back-plate.stl digit2-back-plate.stl digit1-back-plate.stl","title":"Prerequisites"},{"location":"assembly/backplateassembly/#digit_backplate_assembly","text":"The picture below shows the digit 0 and 3 backplates in an upright position. Note the segment characters, A through G , engraved onto the backplate. The round port holes allow the motor's rack gear to protrude into the face of the display. The rectangular holes allow the motor's white and black wires to plug into their respective CW and CCW pins on the PCB. digit-back-plate.stl The picture below shows the digit 2 backplate. Digit 2 backplate is nearly the same as the backplates for digits 0 and 3 except for the stand mount hole as highlighted by the white box. digit2-back-plate.stl Each motor is mounted to the backplate using three M1.7x8mm screws. Use a small philips tip screwdriver to install the motors. A larger philips tip screwdriver is prone to overtighten and may cause the head of the screw to shear off. The picture below shows the order the actuator motors should be installed. Repeat the install for digits 2 and 3.","title":"Digit Backplate Assembly"},{"location":"assembly/backplateassembly/#conductor_and_digit_one_backplate_assembly","text":"The picture below shows the conductor and digit one backplate in an upright position. The backplate has engraved segment characters A through G and colons U and L . The large rectangular hole above the U label is where the on/off switch is mounted. Also note the top edge of the backplate has a slot for the LDR to fit into. digit1-back-plate.stl The picture below shows the order the actuator motors should be installed.","title":"Conductor and Digit One Backplate Assembly"},{"location":"assembly/backplateassembly/#install_the_backplates_onto_the_face","text":"With the digit face pointing down, place the backplates into the slots on the back of the digit face. Each backplate is mounted to the face using M2x15mm screws. Use a medium sized philips tip screwdriver to install the backplates. The picture below shows the installation of the backplates onto the face. Using needlenose pliers, connect each of the motor's Dupont connector to their respective CW (white wire) and CCW (black wire) pins on the PCB. Trim the 3 wires that come with the DHT22 to a suitable length, then connect the Dupont connections to the appropriate sensor pins. Verify the wires connecting the + Data - pins on the PCB are connected to the sensor's + Data - pins. Using an M1.7x6mm self tapping screw, mount the DHT22 as shown in the picture below.","title":"Install the Backplates onto the Face"},{"location":"assembly/backplateassembly/#install_the_stand_onto_the_face","text":"Place the notches in the stand into the groove on the face as shown in the picture below. Be sure not to pinch any of the power management wires while mounting the stand. Following the picture below, (A) attach the stand's vertical holder to the digit 2 backplate with an M1.7x8mm self tapping screw. (B) Attach the stand's side mounting tabs with M2x15mm self tapping screws. Set the digit upright on the stand. See be picture at the beginning of this guide to verify the completed assembly of the backplates and stand.","title":"Install the Stand onto the Face"},{"location":"assembly/buckmodulesandwiring/","text":"Buck Module Wiring \u00b6 Buck converters are essential for converting 12V DC to 5V DC because they efficiently step down the voltage while minimizing energy loss. Unlike linear regulators, which dissipate excess voltage as heat, buck converters use high-frequency switching and inductors to transfer energy more efficiently. This makes them ideal for powering sensitive electronics like microcontrollers and LEDs, as they provide stable output voltage, reduce heat generation, and improve overall system reliability. This guide provides detailed instructions for assembling and wiring DC to DC variable buck converter modules in a Kinetic Display system. It includes a list of required components and tools, step-by-step guidance for wiring and securing the modules, and calibration instructions to ensure proper voltage output. Correct Wiring : Proper routing and connection of wires are critical to ensure the display functions correctly. Incorrect wire lengths or connections can lead to assembly issues or electrical faults. Voltage Calibration : The buck converters step down the input voltage from 12V to a stable 5.0-5.1V output. Calibration ensures the modules provide the correct voltage to prevent damage to connected components or malfunctions. Safety Measures : Follow anti-static precautions and use proper tools to avoid damaging sensitive electronics during assembly. This guide is essential for ensuring the reliability and safety of the Kinetic Display system. Prerequisites \u00b6 3D print the Digit and controller TPU gaskets. 3D print the Display stand. Table of components Quantity Component Image 5 DC to DC variable buck converter module 1 12V 5A Power Supply, AC DC Converter 100-220V to 12 Volt 5 Amp Transformer 5.5x2.1mm Plug 10M White 28 AWG Gauge Flexible Silicone Rubber Electric Wire 10M Black 28 AWG Gauge Flexible Silicone Rubber Electric Wire 50cm (optional) 28 AWG Gauge heat shrink 10 M1.7x6mm Cross Round Head with Washer Self Tapping Screw 304 Stainless Steel Screws Table of tools Required Tool Image Yes Multimeter Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Wire stripper No Label maker PCB and Stand Layout \u00b6 This section ensures wiring for the PCBs is oriented for the mounting of the buck modules and wiring. Remove the Raspberry Pi Pico and Pico W 2040 from the PCBs. These will be added later when it is safe to do so. Lay the PCBs face up with Digit 0 on the far right and Digit 3 on the far left. Position the stand below the PCBs so the barrel jack is between the controller/Digit 1 PCB and Digit 2 PCB. Place the TPU gaskets on the PCBs. Note that the wiring lays over the gaskets. Wiring the Buck Modules \u00b6 This section details wiring the buck converter modules to the PCBs. Be sure to follow the instructions to get the wire lengths correct. Incorrect lengths may result in wires being too short or too long, preventing the display face from fitting correctly. Each buck module has an In + and In - on one side for the 12V input, and an Out + and Out - on the opposite side for the converted 5V output. This section also covers how to calibrate the variable buck module to provide 5.0V to 5.1V output. The picture below is the wiring diagram for the buck converter modules: The picture below shows the completed wiring of the buck converter modules. The order of installation is 1, 2, 3 on the right, followed by 4 and 5 on the left: Warning Use anti-static mats, an ESD wristband, and a grounding wire for the remainder of the Kinetic Display electronics assembly. Digits and Controller \u00b6 Following the picture below, place a buck converter module for Digit 0 on the rightmost support on the display stand. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. (A) Route the two wires from the 5V terminal block connector on the Digit 0 PCB. (B) Slide two 3cm sections of heat shrink on the two wires but DO NOT APPLY HEAT, then (C) continue routing the wire around the relay, under the power management PCB and through the port on the PCB stand. (D) Finish unwinding the wire when you reach the end of the buck module as shown in the picture. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector. (A) Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5V terminal block connector and the black wire onto the - . Following the picture below, turn the Digit 0 buck module over to its backside and solder the white wire onto the Out + pad and the black wire onto the Out - pad. Following the picture below, turn the Digit 0 buck module 180 degrees while having its backside facing up. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. Solder the white wire onto the buck module's In + pad and the black wire onto the In - pad. Turn the Digit 0 buck module over and secure it with M1.7x6mm self tapping screws onto the rightmost module supports on the display stand. Route the Digit 0 white and black wire to the power management PCB C-12V-1 terminal block connector, provide about 10mm extra length in the wire before cutting them. Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the C-12V-1 and the black wire onto the - . Following the picture below, place a buck converter module for Digit 1 to the left of the Digit 0 module. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. Starting with the Digit 1 PCB, (A) Route the two wires from the 5V terminal block connector. (B) Slide one 3cm section of heat shrink on the two wires but DO NOT APPLY HEAT, then (C) continue routing the wire around the relay, under the power management PCB and through the port on the PCB stand. (D) Finish unwinding the wire when you reach the end of the second buck module as shown in the picture. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector (A) . Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5V terminal block connector and the black wire onto the - . Following the picture below, turn the Digit 1 buck module over to its backside and solder the white wire onto the Out + pad and the black wire onto the Out - pad. Follow the previous steps 3-5 for the Digit 1 buck module then connect the 12V black and white wire into the next available block terminals on C-12V-1 . See the picture below for the assembled Digit 1 buck module. Place a buck converter module for the Colon/controller to the left of the Digit 1 module. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. On the backside of the Colon/controller buck module, (A) solder the white wire onto the Out + pad and the black wire onto the Out - pad. Route the wire around the power management relay and (B) to the 5V terminal block connector. Clip the white and black wires, strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5V terminal block connector and the black wire onto the - . Calibrate the Buck Module Voltage, Part 1 \u00b6 Follow using the picture above and start with the Digit 0 buck module furthest right. (A) Disconnect the black and white wire from the 5V terminal block and connect the probes from the multimeter set to measure DC voltage. (B) Plug the 12V power supply into the power management PCB barrel jack. (C) Turn the screw on the top of the potentiometer on the Digit 0 buck module counterclockwise until (D) the voltage measures between 5.0 and 5.1 volts. Note you'll have to turn the screw on the top of the potentiometer several times counterclockwise before the voltage begins to drop. Repeat the steps above to calibrate Digit 1 and the Conductor buck modules to 5V. Wire Remaining Buck Modules \u00b6 Following the picture below, place a buck converter module for Digit 3 to the far left mounting location. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. (A) Unroll the two wires starting at the 5V terminal block connector on Digit 3 PCB. (B) Slide one 3cm section of heat shrink on the two wires but DO NOT APPLY HEAT, then (C) route the wire around the relay, under the power management PCB, and through the port on the PCB stand. (D) Finish unwinding the wire when you reach the end of the buck module as shown in the picture. Strip 3mm of insulation then solder the white wire to the buck module Out + pad and the black wire to the Out - pad. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector (A) . Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5V terminal block connector and the black wire onto the - . Following the diagram below, (A) solder the white wire onto the buck module's In + pad and the black wire onto the In - pad. Secure the module with two M1.7x6mm self tapping screws. (B) Route the Digit 0 white and black wire to the power management PCB C-12V-1 terminal block connector, provide about 10mm extra length in the wire before cutting them. Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the C-12V-1 and the black wire onto the - . Following the picture below, place a buck converter module for Digit 2 to the right of Digit 3. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. Starting with the Digit 2 PCB, (A) unroll the two wires starting at the 5V terminal block connector. (B) route the wire around the relay, under the power management PCB, and through the port on the PCB stand. (C) Finish unwinding the wire when you reach the end of the buck module as shown in the picture. Strip 3mm of insulation then solder the white wire to the buck module Out + pad and the black wire to the Out - pad. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector (A) . Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5V terminal block connector and the black wire onto the - . Following the diagram below, (A) solder the white wire onto the buck module's In + pad and the black wire onto the In - pad. Secure the module with two M1.7x6mm self tapping screws. (B) Route the Digit 0 white and black wire to the power management PCB C-12V-1 terminal block connector, provide about 10mm extra length in the wire before cutting them. Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the C-12V-1 and the black wire onto the - . Position the heat shrink as per the picture of the completed wiring of the buck converter modules at the beginning of this document. Apply heat from your heat gun to complete the assembly of all the heat shrink. Calibrate the Buck Module Voltage, Part 2 \u00b6 Following the picture below with the Digit 3 buck module, (A) disconnect the black and white wire from the 5V terminal block, and connect the probes from the multimeter set to measure DC voltage. (B) Plug the 12V power supply into the power management PCB barrel jack. (C) Turn the screw on the top of the potentiometer on the Digit 3 buck module counterclockwise until (D) the voltage measures between 5.0 and 5.1 volts. Note you'll have to turn the screw on the top of the potentiometer several times counterclockwise before the voltage begins to drop. Repeat the steps above to calibrate Digit 2 buck module to 5V.","title":"Buck Module Wiring"},{"location":"assembly/buckmodulesandwiring/#buck_module_wiring","text":"Buck converters are essential for converting 12V DC to 5V DC because they efficiently step down the voltage while minimizing energy loss. Unlike linear regulators, which dissipate excess voltage as heat, buck converters use high-frequency switching and inductors to transfer energy more efficiently. This makes them ideal for powering sensitive electronics like microcontrollers and LEDs, as they provide stable output voltage, reduce heat generation, and improve overall system reliability. This guide provides detailed instructions for assembling and wiring DC to DC variable buck converter modules in a Kinetic Display system. It includes a list of required components and tools, step-by-step guidance for wiring and securing the modules, and calibration instructions to ensure proper voltage output. Correct Wiring : Proper routing and connection of wires are critical to ensure the display functions correctly. Incorrect wire lengths or connections can lead to assembly issues or electrical faults. Voltage Calibration : The buck converters step down the input voltage from 12V to a stable 5.0-5.1V output. Calibration ensures the modules provide the correct voltage to prevent damage to connected components or malfunctions. Safety Measures : Follow anti-static precautions and use proper tools to avoid damaging sensitive electronics during assembly. This guide is essential for ensuring the reliability and safety of the Kinetic Display system.","title":"Buck Module Wiring"},{"location":"assembly/buckmodulesandwiring/#prerequisites","text":"3D print the Digit and controller TPU gaskets. 3D print the Display stand. Table of components Quantity Component Image 5 DC to DC variable buck converter module 1 12V 5A Power Supply, AC DC Converter 100-220V to 12 Volt 5 Amp Transformer 5.5x2.1mm Plug 10M White 28 AWG Gauge Flexible Silicone Rubber Electric Wire 10M Black 28 AWG Gauge Flexible Silicone Rubber Electric Wire 50cm (optional) 28 AWG Gauge heat shrink 10 M1.7x6mm Cross Round Head with Washer Self Tapping Screw 304 Stainless Steel Screws Table of tools Required Tool Image Yes Multimeter Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Wire stripper No Label maker","title":"Prerequisites"},{"location":"assembly/buckmodulesandwiring/#pcb_and_stand_layout","text":"This section ensures wiring for the PCBs is oriented for the mounting of the buck modules and wiring. Remove the Raspberry Pi Pico and Pico W 2040 from the PCBs. These will be added later when it is safe to do so. Lay the PCBs face up with Digit 0 on the far right and Digit 3 on the far left. Position the stand below the PCBs so the barrel jack is between the controller/Digit 1 PCB and Digit 2 PCB. Place the TPU gaskets on the PCBs. Note that the wiring lays over the gaskets.","title":"PCB and Stand Layout"},{"location":"assembly/buckmodulesandwiring/#wiring_the_buck_modules","text":"This section details wiring the buck converter modules to the PCBs. Be sure to follow the instructions to get the wire lengths correct. Incorrect lengths may result in wires being too short or too long, preventing the display face from fitting correctly. Each buck module has an In + and In - on one side for the 12V input, and an Out + and Out - on the opposite side for the converted 5V output. This section also covers how to calibrate the variable buck module to provide 5.0V to 5.1V output. The picture below is the wiring diagram for the buck converter modules: The picture below shows the completed wiring of the buck converter modules. The order of installation is 1, 2, 3 on the right, followed by 4 and 5 on the left: Warning Use anti-static mats, an ESD wristband, and a grounding wire for the remainder of the Kinetic Display electronics assembly.","title":"Wiring the Buck Modules"},{"location":"assembly/buckmodulesandwiring/#digits_and_controller","text":"Following the picture below, place a buck converter module for Digit 0 on the rightmost support on the display stand. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. (A) Route the two wires from the 5V terminal block connector on the Digit 0 PCB. (B) Slide two 3cm sections of heat shrink on the two wires but DO NOT APPLY HEAT, then (C) continue routing the wire around the relay, under the power management PCB and through the port on the PCB stand. (D) Finish unwinding the wire when you reach the end of the buck module as shown in the picture. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector. (A) Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5V terminal block connector and the black wire onto the - . Following the picture below, turn the Digit 0 buck module over to its backside and solder the white wire onto the Out + pad and the black wire onto the Out - pad. Following the picture below, turn the Digit 0 buck module 180 degrees while having its backside facing up. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. Solder the white wire onto the buck module's In + pad and the black wire onto the In - pad. Turn the Digit 0 buck module over and secure it with M1.7x6mm self tapping screws onto the rightmost module supports on the display stand. Route the Digit 0 white and black wire to the power management PCB C-12V-1 terminal block connector, provide about 10mm extra length in the wire before cutting them. Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the C-12V-1 and the black wire onto the - . Following the picture below, place a buck converter module for Digit 1 to the left of the Digit 0 module. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. Starting with the Digit 1 PCB, (A) Route the two wires from the 5V terminal block connector. (B) Slide one 3cm section of heat shrink on the two wires but DO NOT APPLY HEAT, then (C) continue routing the wire around the relay, under the power management PCB and through the port on the PCB stand. (D) Finish unwinding the wire when you reach the end of the second buck module as shown in the picture. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector (A) . Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5V terminal block connector and the black wire onto the - . Following the picture below, turn the Digit 1 buck module over to its backside and solder the white wire onto the Out + pad and the black wire onto the Out - pad. Follow the previous steps 3-5 for the Digit 1 buck module then connect the 12V black and white wire into the next available block terminals on C-12V-1 . See the picture below for the assembled Digit 1 buck module. Place a buck converter module for the Colon/controller to the left of the Digit 1 module. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. On the backside of the Colon/controller buck module, (A) solder the white wire onto the Out + pad and the black wire onto the Out - pad. Route the wire around the power management relay and (B) to the 5V terminal block connector. Clip the white and black wires, strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5V terminal block connector and the black wire onto the - .","title":"Digits and Controller"},{"location":"assembly/buckmodulesandwiring/#calibrate_the_buck_module_voltage_part_1","text":"Follow using the picture above and start with the Digit 0 buck module furthest right. (A) Disconnect the black and white wire from the 5V terminal block and connect the probes from the multimeter set to measure DC voltage. (B) Plug the 12V power supply into the power management PCB barrel jack. (C) Turn the screw on the top of the potentiometer on the Digit 0 buck module counterclockwise until (D) the voltage measures between 5.0 and 5.1 volts. Note you'll have to turn the screw on the top of the potentiometer several times counterclockwise before the voltage begins to drop. Repeat the steps above to calibrate Digit 1 and the Conductor buck modules to 5V.","title":"Calibrate the Buck Module Voltage, Part 1"},{"location":"assembly/buckmodulesandwiring/#wire_remaining_buck_modules","text":"Following the picture below, place a buck converter module for Digit 3 to the far left mounting location. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. (A) Unroll the two wires starting at the 5V terminal block connector on Digit 3 PCB. (B) Slide one 3cm section of heat shrink on the two wires but DO NOT APPLY HEAT, then (C) route the wire around the relay, under the power management PCB, and through the port on the PCB stand. (D) Finish unwinding the wire when you reach the end of the buck module as shown in the picture. Strip 3mm of insulation then solder the white wire to the buck module Out + pad and the black wire to the Out - pad. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector (A) . Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5V terminal block connector and the black wire onto the - . Following the diagram below, (A) solder the white wire onto the buck module's In + pad and the black wire onto the In - pad. Secure the module with two M1.7x6mm self tapping screws. (B) Route the Digit 0 white and black wire to the power management PCB C-12V-1 terminal block connector, provide about 10mm extra length in the wire before cutting them. Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the C-12V-1 and the black wire onto the - . Following the picture below, place a buck converter module for Digit 2 to the right of Digit 3. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. Starting with the Digit 2 PCB, (A) unroll the two wires starting at the 5V terminal block connector. (B) route the wire around the relay, under the power management PCB, and through the port on the PCB stand. (C) Finish unwinding the wire when you reach the end of the buck module as shown in the picture. Strip 3mm of insulation then solder the white wire to the buck module Out + pad and the black wire to the Out - pad. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector (A) . Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5V terminal block connector and the black wire onto the - . Following the diagram below, (A) solder the white wire onto the buck module's In + pad and the black wire onto the In - pad. Secure the module with two M1.7x6mm self tapping screws. (B) Route the Digit 0 white and black wire to the power management PCB C-12V-1 terminal block connector, provide about 10mm extra length in the wire before cutting them. Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the C-12V-1 and the black wire onto the - . Position the heat shrink as per the picture of the completed wiring of the buck converter modules at the beginning of this document. Apply heat from your heat gun to complete the assembly of all the heat shrink.","title":"Wire Remaining Buck Modules"},{"location":"assembly/buckmodulesandwiring/#calibrate_the_buck_module_voltage_part_2","text":"Following the picture below with the Digit 3 buck module, (A) disconnect the black and white wire from the 5V terminal block, and connect the probes from the multimeter set to measure DC voltage. (B) Plug the 12V power supply into the power management PCB barrel jack. (C) Turn the screw on the top of the potentiometer on the Digit 3 buck module counterclockwise until (D) the voltage measures between 5.0 and 5.1 volts. Note you'll have to turn the screw on the top of the potentiometer several times counterclockwise before the voltage begins to drop. Repeat the steps above to calibrate Digit 2 buck module to 5V.","title":"Calibrate the Buck Module Voltage, Part 2"},{"location":"assembly/controllerpcbassembly/","text":"Conductor and Digit 1 PCB Assembly \u00b6 Digit 1 and the colons are on a single PCB. Digit 1, powered by a Raspberry Pi Pico 2040, is identical to digits 0, 2, and 3 except it is contained on a single PCB with the conductor. The Raspberry Pi Pico W 2040 (conductor) operates the colons and serves as the central command and control for the display, performing the following functions: Sends commands to digits as to what to display (e.g., 0-9, A-F). Sends commands for the brightness of the digits. When in Admin mode, transmits its own Wi-Fi service to wirelessly change the display settings from a cell phone or computer. Manages the scheduler, which is the mechanism for displaying time, date, external temperature and humidity, and interior temperature and humidity. When connected to a Wi-Fi network, obtains its public-facing IP address, looks up the time zone it is located in, and sets the display to the local time. When connected to a Wi-Fi network, obtains the closest weather station and, depending on the scheduler, may display the external temperature and humidity. Manages the low power consumption mode by turning off the power to digits 0-3. When awakened, it turns on the power to digits 0-3. Front face of the conductor PCB fully assembled: Back side of the conductor PCB fully assembled: Prerequisites \u00b6 Fabrication of the conductor and digit one PCB . 3D print of the upper and lower colons. Table of components Quantity Component Image 5 16 pin IC socket 5 L293D stepper motor driver 4 20 pin female header connector 1 20 pin single row breakaway male connector 1 Vertical Slide Switch Micro High Knob 3 Pin 2 Position 1P2T SPDT Panel Mount 6 2 Pin PCB Mount Screw Terminal Block Connector Straight Pin 2 0.1\u03bc farad ceramic capacitor 2 1\u03bc farad electrolytic capacitor 1 5mm 0.5 \u03a9 ohm Photoresistor Resistor 5516 GL5516 1 S8550 TO-92 TH PNP Transistor 1 2N2222 TO-92 TH NPN Transistor 2 10K ohm 0805 Resistor 1/4w Metal Film Fixed Resistor 28 5mm Flat top LED, anode long lead (your choice of color) 2 3mm Flat top LED, anode long lead (your choice of color) 1 Raspberry Pi Pico 2040 with Headers 1 Raspberry Pi Pico W 2040 with Headers 1 Conductor PCB See next section Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Isopropyl Alcohol Yes Cotton Facial Pads Assemble Digit One \u00b6 This section will guide you through following the relevant instructions from the Digit 0, 2, & 3 PCB assembly to assemble Digit 1 on the conductor PCB. On the front face of the conductor PCB, add the 16 pin headers as previously completed for the digit PCBs. Note the highlighted sections in the picture below where you'll add an additional 16 pin header to the conductor PCB. Don't forget to snip all the pins flush on the back side of the conductor PCB, resolder each snipped pin to a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol. On the front face of the conductor PCB, add the 28 5mm LEDs as previously completed for the digit PCBs. Be sure to insert the LED anode (long pin) into the through hole marked with a + . Do not solder the 5mm LED into the Top-LED1 or LWR-LED1 location on the conductor PCB. Instructions later in this tutorial will detail how to install the 3mm LEDs into the Top-LED1 and LWR-LED1 locations. Finish soldering the 28 5mm LEDs by snipping all the pins flush on the back side of the conductor PCB, resolder each snipped pin into a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol. On the back of the conductor PCB, add the motor pins . Note the highlighted sections in the picture below where there are two additional motor pins (pairs) you'll need to add for the colons, and an additional 3-pin connector for the Digital Humidity and Temperature (DHT) sensor. Don't forget to snip all the pins flush on the back side of the conductor PCB, resolder each snipped pin to a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol. Colon Segments LEDs \u00b6 In addition to the soldering equipment you needed when previously mounting the 5mm flat top LEDs, you'll need the two 3D printed colon segments, labeled (A) in the picture below, as fabricated in the 3D print the display parts document. Following label (B) in the picture above, insert the 3mm flat top LEDs into Top-LED1 and LWR-LED1 on the front face of the conductor PCB. Follow the same 5mm LED install process and be sure to insert the long lead anode of the LED into the + through hole. Following the picture below, slide the colon segments over the 3mm LED. Note the lower base of the LED lense may need to be lightly sanded with 300 grid sandpaper if it does not easily slide into the colon segment. On the back side of the conductor PCB, align the colon segment so its square base is positioned into the square hole of the PCB. Solder the 3mm LEDs into place. Optionally you can use a metric ruler to verify the LEDs protrude perpendicular from the PCB and are 14mm from the PCB to the top of the lens of the LED. This optional step insures the proper length of the 3mm LEDs. PNP and NPN transistors \u00b6 Following the picture below, solder the s8550D PNP transistor into the through hole (mis-) labelled Q3 2N8550 on the front face of the conductor PCB. When inserting the transistor's pins into the through holes, be sure to orient the transistors so the flat face matches the silk screen on the PCB as held by the tweezers in the picture. Following the picture below, solder the 2N2222A PNP transistor into the though hole labelled Q2 2N2222 on the front face of the conductor PCB. Headers for the Pico and PicoW \u00b6 On the back side of the PCB, place the four 20 pin headers into the through holes for RASP1 and RASP2 . Carefully turn over the PCB while keeping the 20 pin headers in the through holes. Level the PCB and adjust the two 20 pin headers so they are perpendicular to the PCB. To keep the headers perpendicular to the PCB, you can provide a temporary solder onto a pin or use a jig. Solder the pins once in place. Snip all the pins flush, resolder each to a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol. Surface mount resistors \u00b6 On the back side of the PCB, solder the two 10k\u03a9 resistors onto the pads marked R2 10k and R3 10k located between the top and bottom rows of the 20-pin headers. Soldering surface mount components require a slightly different skill than through hole soldering as you'll need to use tweezers to center the resistor over the pads and apply a minimal amount of solder. Install Six, two pin (2P) Terminal Block Connectors \u00b6 There are five 2P terminal block connectors on the front face of the PCB, and one on the back side. The picture below shows a completed install of the terminal block connectors on the front face of the conductor PCB. Note the arrows pointing in the direction of the terminal block connector where the wires are inserted into the ports. To follow the steps below, you'll position the front face of the conductor PCB up, then work your way from the bottom left corner (1) , to the bottom right corner (5) . Follow the picture below and insert the 2P terminal block connector into the 5v-D1 through holes with the connector facing LEFT, then solder it into place. Follow the picture below and insert the 2P terminal block connector into the U7, Tx-1 Rx-1 through holes with the connector facing LEFT, then solder it into place. Follow the picture below and insert the 2P terminal block connector into the U7, GPIO19 Tx-0 through holes with the connector facing LEFT, then solder it into place. Follow the picture below and insert the 2P terminal block connector into the UART1, Tx-0 Rx-0 through holes with the connector facing RIGHT, then solder it into place. Follow the picture below, insert the 2P terminal block connector into the 5v-D0 through holes with the connector facing LEFT, then solder it into place. Position the back of the PCB up and insert the 2P terminal block connector into the 5v-OUT through holes with the connector facing RIGHT, then solder it into place. Electrolytic and Ceramic Capacitors \u00b6 On the front of the conductor PCB, align the electrolytic capacitor - sign opposite the + printed on the PCB for capacitor c01 and c1 , see the picture below. Insert the pins into the through holes, then turn the conductor PCB over to the back side and solder the capacitors. On the front of the conductor PCB, insert the ceramic capacitor pins into the through holes titled c02 and c2 . Ceramic capacitors are non-polarized and can be inserted in either direction. Turn the conductor PCB over to the back and solder the capacitors. Mount the Motor Drivers \u00b6 On the front face of the conductor PCB, mount the L293D 16-pin IC Stepper Motor Drivers as previously completed for the digit PCBs. Vertical Slide SPDT Switch \u00b6 On the back of the conductor PCB, insert the SPDT vertical slide switch pins into the ON/OFF through holes found on the top right hand corner, then solder into place. Light Dependent Resistor (LDR) \u00b6 Following the picture below and from the back of the conductor PCB, place the two LDR pins into the R1 through holes. Bend the pins of the LDR upward so the head of the LDR fits tightly on the top of conductor PCB. Solder the LDR in place once properly positioned. Congratulations, you've completed assembling the controller and digit 1 PCB! Conductor and Digit 1 Schematic \u00b6 The schematic in this section (below) represents the Colons & Display Microcontroller portion of the circuit for the conductor and digit 1 PCB. This circuit is designed to control the colons of the display, acting as the central hub for communication, power management, and environmental data (interior and outdoor) integration. The Raspberry Pi Pico W 2040 orchestrates all operations, while the supporting components ensure stable and efficient functionality. Below is an explanation of the various components, their purpose, and how the circuitry functions: Key Components and Their Purpose \u00b6 Raspberry Pi Pico W 2040 (Microcontroller) : Purpose : Acts as the central processing unit for the display. It controls the colons and communicates with the digits. Functions : Sends commands to the digits (e.g., what to display, brightness levels). Manages `Wi-Fi connectivity for remote control and time synchronization. Handles scheduling for displaying time, date, and environmental data. Controls power-saving modes by turning off unused digits. 4-Pin UART and Low Power mode pin connector (U7) : Purpose : Provides communication between the microcontroller and the digits via UART (Universal Asynchronous Receiver-Transmitter). Pins : Tx-0 , Rx-0 , Tx-1 , Rx-1 : Used for transmitting and receiving data to/from the digits. GPIO19 : is used to turn on and off the power to the digits. L293D Motor Driver IC (U5) : Purpose : Drives the colon motors (top and lower colons) to control their movement. Functionality : Allows the microcontroller to control the colon motors for precise positioning. Pins : ENABLE1 and ENABLE2 : Controls the motor speed. INPUT1 , INPUT2 , INPUT3 , INPUT4 : Control the CW and CCW direction of the motors. OUTPUT1 , OUTPUT2 , OUTPUT3 , OUTPUT4 : Provide the output signals to the motors. 2-Pin Terminal Block Connectors : Purpose : Provide connections for external components like power, UART communication, and sensors. Examples : 5V-D1 , 5V-D0 : Power connections for the digits. UART1 , Tx-0 , Rx-0 : UART communication lines. 5V-OUT : Power output for external components. PNP and NPN Transistors (S8550 and 2N2222) : Purpose : Act as a switch for powering the DHT22 sensor. S8550 (PNP) : Used for switching power on or off to the DHT22 sensor 2N2222 (NPN) : Used to drive the base of the S8550 to manage power to the DHT22 sensor. Light Dependent Resistor (LDR) : Purpose : Measures ambient light levels to adjust the brightness of the display dynamically. Placement : Connected to R1 and works with the microcontroller to sense light intensity. Electrolytic and Ceramic Capacitors (C01, C1, C02, C2) : Purpose : Provide power filtering and decoupling to ensure stable operation of the microcontroller. Electrolytic Capacitors : Polarized, used for smoothing power supply fluctuations. Ceramic Capacitors : Non-polarized, used for high-frequency noise filtering. Vertical Slide SPDT Switch (SW1) : Purpose : Acts as an on/off switch for the entire circuit where off may be Low Power or Admin mode. When the switch is on and the 12v power supply is plugged in, the display will run using its saved settings which includes the SSID and password to the wifi network. When the switch is turned off, the disconnected 12v power supply is then connected and plugged into wall power, the Pico W provides its own wifi and web service allowing you to direcctly connect to its web page and remotely change the display settings. When the switch is changed to the off position while the display is actively running, then the display will retract all the segments and enter low power mode. Placement : Controls its internal wifi service and the flow of power to the display. Resistors (R2, R3) : Purpose : Limit current and set voltage levels in the circuit. R2 and R3 (10k\u03a9) : Pull-up or pull-down resistors for stabilizing signals. LEDs (TOP-LED1, LWR-LED1) : Purpose : Indicate the status of the colons. Placement : Positioned on the PCB to align with the colon segments. DHT22 Sensor Connector : Purpose : Provides a connection for the Digital Humidity and Temperature (DHT) sensor. Functionality : Allows the microcontroller to read environmental data for display. How the Circuitry Works \u00b6 Power Supply : Power is supplied by buck converters through the 5V-OUT and 5V-D1/D0 terminal blocks. Capacitors (C01, C1, C02, C2) stabilize the power supply and filter noise for the microcontrollers. Microcontroller Control : The Raspberry Pi Pico W 2040 serves as the brain of the circuit, controlling all components. It communicates with the digits via UART (U7) and controls the colon motors through the L293D motor driver (U5). Colon Motor Control : The L293D motor driver receives control signals from the microcontroller to drive the colon motors. The ENABLE and INPUT pins determine the speed and direction of the motors. Display Brightness Adjustment : The LDR (R1) measures ambient light levels and sends the data to the microcontroller. The microcontroller adjusts the brightness of the LEDs accordingly. Wi-Fi and Scheduler : The Raspberry Pi Pico W 2040 connects to a Wi-Fi network to synchronize time and fetch weather data. The scheduler manages the display of time, date, and environmental data. Low Power Mode : The microcontroller uses the S8550 and 2N2222 transistors to switch off power to the DHT22 when not in use. User Interaction : The SPDT switch (SW1) allows the user to turn the circuit on or off (low power or Admin mode). The LEDs provide visual feedback for the status of the colons.","title":"Conductor PCB"},{"location":"assembly/controllerpcbassembly/#conductor_and_digit_1_pcb_assembly","text":"Digit 1 and the colons are on a single PCB. Digit 1, powered by a Raspberry Pi Pico 2040, is identical to digits 0, 2, and 3 except it is contained on a single PCB with the conductor. The Raspberry Pi Pico W 2040 (conductor) operates the colons and serves as the central command and control for the display, performing the following functions: Sends commands to digits as to what to display (e.g., 0-9, A-F). Sends commands for the brightness of the digits. When in Admin mode, transmits its own Wi-Fi service to wirelessly change the display settings from a cell phone or computer. Manages the scheduler, which is the mechanism for displaying time, date, external temperature and humidity, and interior temperature and humidity. When connected to a Wi-Fi network, obtains its public-facing IP address, looks up the time zone it is located in, and sets the display to the local time. When connected to a Wi-Fi network, obtains the closest weather station and, depending on the scheduler, may display the external temperature and humidity. Manages the low power consumption mode by turning off the power to digits 0-3. When awakened, it turns on the power to digits 0-3. Front face of the conductor PCB fully assembled: Back side of the conductor PCB fully assembled:","title":"Conductor and Digit 1 PCB Assembly"},{"location":"assembly/controllerpcbassembly/#prerequisites","text":"Fabrication of the conductor and digit one PCB . 3D print of the upper and lower colons. Table of components Quantity Component Image 5 16 pin IC socket 5 L293D stepper motor driver 4 20 pin female header connector 1 20 pin single row breakaway male connector 1 Vertical Slide Switch Micro High Knob 3 Pin 2 Position 1P2T SPDT Panel Mount 6 2 Pin PCB Mount Screw Terminal Block Connector Straight Pin 2 0.1\u03bc farad ceramic capacitor 2 1\u03bc farad electrolytic capacitor 1 5mm 0.5 \u03a9 ohm Photoresistor Resistor 5516 GL5516 1 S8550 TO-92 TH PNP Transistor 1 2N2222 TO-92 TH NPN Transistor 2 10K ohm 0805 Resistor 1/4w Metal Film Fixed Resistor 28 5mm Flat top LED, anode long lead (your choice of color) 2 3mm Flat top LED, anode long lead (your choice of color) 1 Raspberry Pi Pico 2040 with Headers 1 Raspberry Pi Pico W 2040 with Headers 1 Conductor PCB See next section Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Isopropyl Alcohol Yes Cotton Facial Pads","title":"Prerequisites"},{"location":"assembly/controllerpcbassembly/#assemble_digit_one","text":"This section will guide you through following the relevant instructions from the Digit 0, 2, & 3 PCB assembly to assemble Digit 1 on the conductor PCB. On the front face of the conductor PCB, add the 16 pin headers as previously completed for the digit PCBs. Note the highlighted sections in the picture below where you'll add an additional 16 pin header to the conductor PCB. Don't forget to snip all the pins flush on the back side of the conductor PCB, resolder each snipped pin to a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol. On the front face of the conductor PCB, add the 28 5mm LEDs as previously completed for the digit PCBs. Be sure to insert the LED anode (long pin) into the through hole marked with a + . Do not solder the 5mm LED into the Top-LED1 or LWR-LED1 location on the conductor PCB. Instructions later in this tutorial will detail how to install the 3mm LEDs into the Top-LED1 and LWR-LED1 locations. Finish soldering the 28 5mm LEDs by snipping all the pins flush on the back side of the conductor PCB, resolder each snipped pin into a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol. On the back of the conductor PCB, add the motor pins . Note the highlighted sections in the picture below where there are two additional motor pins (pairs) you'll need to add for the colons, and an additional 3-pin connector for the Digital Humidity and Temperature (DHT) sensor. Don't forget to snip all the pins flush on the back side of the conductor PCB, resolder each snipped pin to a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol.","title":"Assemble Digit One"},{"location":"assembly/controllerpcbassembly/#colon_segments_leds","text":"In addition to the soldering equipment you needed when previously mounting the 5mm flat top LEDs, you'll need the two 3D printed colon segments, labeled (A) in the picture below, as fabricated in the 3D print the display parts document. Following label (B) in the picture above, insert the 3mm flat top LEDs into Top-LED1 and LWR-LED1 on the front face of the conductor PCB. Follow the same 5mm LED install process and be sure to insert the long lead anode of the LED into the + through hole. Following the picture below, slide the colon segments over the 3mm LED. Note the lower base of the LED lense may need to be lightly sanded with 300 grid sandpaper if it does not easily slide into the colon segment. On the back side of the conductor PCB, align the colon segment so its square base is positioned into the square hole of the PCB. Solder the 3mm LEDs into place. Optionally you can use a metric ruler to verify the LEDs protrude perpendicular from the PCB and are 14mm from the PCB to the top of the lens of the LED. This optional step insures the proper length of the 3mm LEDs.","title":"Colon Segments LEDs"},{"location":"assembly/controllerpcbassembly/#pnp_and_npn_transistors","text":"Following the picture below, solder the s8550D PNP transistor into the through hole (mis-) labelled Q3 2N8550 on the front face of the conductor PCB. When inserting the transistor's pins into the through holes, be sure to orient the transistors so the flat face matches the silk screen on the PCB as held by the tweezers in the picture. Following the picture below, solder the 2N2222A PNP transistor into the though hole labelled Q2 2N2222 on the front face of the conductor PCB.","title":"PNP and NPN transistors"},{"location":"assembly/controllerpcbassembly/#headers_for_the_pico_and_picow","text":"On the back side of the PCB, place the four 20 pin headers into the through holes for RASP1 and RASP2 . Carefully turn over the PCB while keeping the 20 pin headers in the through holes. Level the PCB and adjust the two 20 pin headers so they are perpendicular to the PCB. To keep the headers perpendicular to the PCB, you can provide a temporary solder onto a pin or use a jig. Solder the pins once in place. Snip all the pins flush, resolder each to a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol.","title":"Headers for the Pico and PicoW"},{"location":"assembly/controllerpcbassembly/#surface_mount_resistors","text":"On the back side of the PCB, solder the two 10k\u03a9 resistors onto the pads marked R2 10k and R3 10k located between the top and bottom rows of the 20-pin headers. Soldering surface mount components require a slightly different skill than through hole soldering as you'll need to use tweezers to center the resistor over the pads and apply a minimal amount of solder.","title":"Surface mount resistors"},{"location":"assembly/controllerpcbassembly/#install_six_two_pin_2p_terminal_block_connectors","text":"There are five 2P terminal block connectors on the front face of the PCB, and one on the back side. The picture below shows a completed install of the terminal block connectors on the front face of the conductor PCB. Note the arrows pointing in the direction of the terminal block connector where the wires are inserted into the ports. To follow the steps below, you'll position the front face of the conductor PCB up, then work your way from the bottom left corner (1) , to the bottom right corner (5) . Follow the picture below and insert the 2P terminal block connector into the 5v-D1 through holes with the connector facing LEFT, then solder it into place. Follow the picture below and insert the 2P terminal block connector into the U7, Tx-1 Rx-1 through holes with the connector facing LEFT, then solder it into place. Follow the picture below and insert the 2P terminal block connector into the U7, GPIO19 Tx-0 through holes with the connector facing LEFT, then solder it into place. Follow the picture below and insert the 2P terminal block connector into the UART1, Tx-0 Rx-0 through holes with the connector facing RIGHT, then solder it into place. Follow the picture below, insert the 2P terminal block connector into the 5v-D0 through holes with the connector facing LEFT, then solder it into place. Position the back of the PCB up and insert the 2P terminal block connector into the 5v-OUT through holes with the connector facing RIGHT, then solder it into place.","title":"Install Six, two pin (2P) Terminal Block Connectors"},{"location":"assembly/controllerpcbassembly/#electrolytic_and_ceramic_capacitors","text":"On the front of the conductor PCB, align the electrolytic capacitor - sign opposite the + printed on the PCB for capacitor c01 and c1 , see the picture below. Insert the pins into the through holes, then turn the conductor PCB over to the back side and solder the capacitors. On the front of the conductor PCB, insert the ceramic capacitor pins into the through holes titled c02 and c2 . Ceramic capacitors are non-polarized and can be inserted in either direction. Turn the conductor PCB over to the back and solder the capacitors.","title":"Electrolytic and Ceramic Capacitors"},{"location":"assembly/controllerpcbassembly/#mount_the_motor_drivers","text":"On the front face of the conductor PCB, mount the L293D 16-pin IC Stepper Motor Drivers as previously completed for the digit PCBs.","title":"Mount the Motor Drivers"},{"location":"assembly/controllerpcbassembly/#vertical_slide_spdt_switch","text":"On the back of the conductor PCB, insert the SPDT vertical slide switch pins into the ON/OFF through holes found on the top right hand corner, then solder into place.","title":"Vertical Slide SPDT Switch"},{"location":"assembly/controllerpcbassembly/#light_dependent_resistor_ldr","text":"Following the picture below and from the back of the conductor PCB, place the two LDR pins into the R1 through holes. Bend the pins of the LDR upward so the head of the LDR fits tightly on the top of conductor PCB. Solder the LDR in place once properly positioned. Congratulations, you've completed assembling the controller and digit 1 PCB!","title":"Light Dependent Resistor (LDR)"},{"location":"assembly/controllerpcbassembly/#conductor_and_digit_1_schematic","text":"The schematic in this section (below) represents the Colons & Display Microcontroller portion of the circuit for the conductor and digit 1 PCB. This circuit is designed to control the colons of the display, acting as the central hub for communication, power management, and environmental data (interior and outdoor) integration. The Raspberry Pi Pico W 2040 orchestrates all operations, while the supporting components ensure stable and efficient functionality. Below is an explanation of the various components, their purpose, and how the circuitry functions:","title":"Conductor and Digit 1 Schematic"},{"location":"assembly/controllerpcbassembly/#key_components_and_their_purpose","text":"Raspberry Pi Pico W 2040 (Microcontroller) : Purpose : Acts as the central processing unit for the display. It controls the colons and communicates with the digits. Functions : Sends commands to the digits (e.g., what to display, brightness levels). Manages `Wi-Fi connectivity for remote control and time synchronization. Handles scheduling for displaying time, date, and environmental data. Controls power-saving modes by turning off unused digits. 4-Pin UART and Low Power mode pin connector (U7) : Purpose : Provides communication between the microcontroller and the digits via UART (Universal Asynchronous Receiver-Transmitter). Pins : Tx-0 , Rx-0 , Tx-1 , Rx-1 : Used for transmitting and receiving data to/from the digits. GPIO19 : is used to turn on and off the power to the digits. L293D Motor Driver IC (U5) : Purpose : Drives the colon motors (top and lower colons) to control their movement. Functionality : Allows the microcontroller to control the colon motors for precise positioning. Pins : ENABLE1 and ENABLE2 : Controls the motor speed. INPUT1 , INPUT2 , INPUT3 , INPUT4 : Control the CW and CCW direction of the motors. OUTPUT1 , OUTPUT2 , OUTPUT3 , OUTPUT4 : Provide the output signals to the motors. 2-Pin Terminal Block Connectors : Purpose : Provide connections for external components like power, UART communication, and sensors. Examples : 5V-D1 , 5V-D0 : Power connections for the digits. UART1 , Tx-0 , Rx-0 : UART communication lines. 5V-OUT : Power output for external components. PNP and NPN Transistors (S8550 and 2N2222) : Purpose : Act as a switch for powering the DHT22 sensor. S8550 (PNP) : Used for switching power on or off to the DHT22 sensor 2N2222 (NPN) : Used to drive the base of the S8550 to manage power to the DHT22 sensor. Light Dependent Resistor (LDR) : Purpose : Measures ambient light levels to adjust the brightness of the display dynamically. Placement : Connected to R1 and works with the microcontroller to sense light intensity. Electrolytic and Ceramic Capacitors (C01, C1, C02, C2) : Purpose : Provide power filtering and decoupling to ensure stable operation of the microcontroller. Electrolytic Capacitors : Polarized, used for smoothing power supply fluctuations. Ceramic Capacitors : Non-polarized, used for high-frequency noise filtering. Vertical Slide SPDT Switch (SW1) : Purpose : Acts as an on/off switch for the entire circuit where off may be Low Power or Admin mode. When the switch is on and the 12v power supply is plugged in, the display will run using its saved settings which includes the SSID and password to the wifi network. When the switch is turned off, the disconnected 12v power supply is then connected and plugged into wall power, the Pico W provides its own wifi and web service allowing you to direcctly connect to its web page and remotely change the display settings. When the switch is changed to the off position while the display is actively running, then the display will retract all the segments and enter low power mode. Placement : Controls its internal wifi service and the flow of power to the display. Resistors (R2, R3) : Purpose : Limit current and set voltage levels in the circuit. R2 and R3 (10k\u03a9) : Pull-up or pull-down resistors for stabilizing signals. LEDs (TOP-LED1, LWR-LED1) : Purpose : Indicate the status of the colons. Placement : Positioned on the PCB to align with the colon segments. DHT22 Sensor Connector : Purpose : Provides a connection for the Digital Humidity and Temperature (DHT) sensor. Functionality : Allows the microcontroller to read environmental data for display.","title":"Key Components and Their Purpose"},{"location":"assembly/controllerpcbassembly/#how_the_circuitry_works","text":"Power Supply : Power is supplied by buck converters through the 5V-OUT and 5V-D1/D0 terminal blocks. Capacitors (C01, C1, C02, C2) stabilize the power supply and filter noise for the microcontrollers. Microcontroller Control : The Raspberry Pi Pico W 2040 serves as the brain of the circuit, controlling all components. It communicates with the digits via UART (U7) and controls the colon motors through the L293D motor driver (U5). Colon Motor Control : The L293D motor driver receives control signals from the microcontroller to drive the colon motors. The ENABLE and INPUT pins determine the speed and direction of the motors. Display Brightness Adjustment : The LDR (R1) measures ambient light levels and sends the data to the microcontroller. The microcontroller adjusts the brightness of the LEDs accordingly. Wi-Fi and Scheduler : The Raspberry Pi Pico W 2040 connects to a Wi-Fi network to synchronize time and fetch weather data. The scheduler manages the display of time, date, and environmental data. Low Power Mode : The microcontroller uses the S8550 and 2N2222 transistors to switch off power to the DHT22 when not in use. User Interaction : The SPDT switch (SW1) allows the user to turn the circuit on or off (low power or Admin mode). The LEDs provide visual feedback for the status of the colons.","title":"How the Circuitry Works"},{"location":"assembly/controllerpcbtest/","text":"Conductor PCB Test \u00b6 Run the tests in this section after assembling the conductor PCB to ensure all the components on the PCB are soldered and functional. Any defective electronic component on the conductor PCB will need to be replaced before completing the project. Prerequisites \u00b6 Completed Conductor and Digit 1 PCB ready for actuators . Computer and microcontroller with the prerequisite software . Deployed the Conductor Project to the Conductor PCB . Completed the digit PCB test for digit 1 on the conductor PCB. Test the LED and Motor Segments \u00b6 From Visual Studio Code: (A) Select the File -> Open Folder menu. (B) Select the conductor folder. (C) Click the Select Folder button. On the Conductor and Digit 1 PCB: (A) Plug the USB cable from your computer into the USB port on the Raspberry Pi Pico W 2040. (B) Connect a motor actuator to the TOP-LED1 with the white wire Dupont connector plugged into the CW pin and the black wire plugged into the CCW pin. From Visual Studio Code: (A) Select the digit_colon.py file. (B) Select MicroPico vREPL from the terminal pane menu. From the Visual Studio Code status bar: (A) Verify the Raspberry Pi Pico W is connected. (B) Click the Run button to start the conductor PCB test application. The console test application shows various options that relate to the top or bottom colon: The TOP-LED1 is 0, and the LWR-LED1 is 1. Extend TOP-LED1 by typing e0 in the console. Following the picture below: The TOP-LED1 LED lights up, and the motor briefly turns on. From the terminal session, type r0 to retract the TOP-LED1 . Repeat steps 5 and 6 for COLON-LWR . Unplug the USB from the Raspberry Pi Pico W 2040 upon completion. Test the Light Detection \u00b6 On the Conductor and Digit 1 PCB: Plug the USB cable from your computer into the USB port on the Raspberry Pi Pico W 2040. From Visual Studio Code: (A) Select the file photoresistor.py . (B) Click the Run button in the status bar. The terminal pane will print the light level, ranging between 0 and 9, depending on the brightness of the light detected by the LDR. Unplug the USB from the Raspberry Pi Pico W 2040 upon completion. Test the Humidity and Temperature \u00b6 On the Conductor and Digit 1 PCB: (A) Plug the USB cable from your computer into the USB port on the Raspberry Pi Pico W 2040. (B) Connect the DHT22 sensor by ensuring the - Data + pins in the DHT1 silk screen align with the + out - pins on the DHT22 sensor. From Visual Studio Code: (A) Select the file dhttest.py . (B) Click the Run button in the status bar. Verify the output in the terminal shows the temperature and humidity readings. Unplug the USB from the Raspberry Pi Pico W 2040 upon completion.","title":"Conductor PCB Test"},{"location":"assembly/controllerpcbtest/#conductor_pcb_test","text":"Run the tests in this section after assembling the conductor PCB to ensure all the components on the PCB are soldered and functional. Any defective electronic component on the conductor PCB will need to be replaced before completing the project.","title":"Conductor PCB Test"},{"location":"assembly/controllerpcbtest/#prerequisites","text":"Completed Conductor and Digit 1 PCB ready for actuators . Computer and microcontroller with the prerequisite software . Deployed the Conductor Project to the Conductor PCB . Completed the digit PCB test for digit 1 on the conductor PCB.","title":"Prerequisites"},{"location":"assembly/controllerpcbtest/#test_the_led_and_motor_segments","text":"From Visual Studio Code: (A) Select the File -> Open Folder menu. (B) Select the conductor folder. (C) Click the Select Folder button. On the Conductor and Digit 1 PCB: (A) Plug the USB cable from your computer into the USB port on the Raspberry Pi Pico W 2040. (B) Connect a motor actuator to the TOP-LED1 with the white wire Dupont connector plugged into the CW pin and the black wire plugged into the CCW pin. From Visual Studio Code: (A) Select the digit_colon.py file. (B) Select MicroPico vREPL from the terminal pane menu. From the Visual Studio Code status bar: (A) Verify the Raspberry Pi Pico W is connected. (B) Click the Run button to start the conductor PCB test application. The console test application shows various options that relate to the top or bottom colon: The TOP-LED1 is 0, and the LWR-LED1 is 1. Extend TOP-LED1 by typing e0 in the console. Following the picture below: The TOP-LED1 LED lights up, and the motor briefly turns on. From the terminal session, type r0 to retract the TOP-LED1 . Repeat steps 5 and 6 for COLON-LWR . Unplug the USB from the Raspberry Pi Pico W 2040 upon completion.","title":"Test the LED and Motor Segments"},{"location":"assembly/controllerpcbtest/#test_the_light_detection","text":"On the Conductor and Digit 1 PCB: Plug the USB cable from your computer into the USB port on the Raspberry Pi Pico W 2040. From Visual Studio Code: (A) Select the file photoresistor.py . (B) Click the Run button in the status bar. The terminal pane will print the light level, ranging between 0 and 9, depending on the brightness of the light detected by the LDR. Unplug the USB from the Raspberry Pi Pico W 2040 upon completion.","title":"Test the Light Detection"},{"location":"assembly/controllerpcbtest/#test_the_humidity_and_temperature","text":"On the Conductor and Digit 1 PCB: (A) Plug the USB cable from your computer into the USB port on the Raspberry Pi Pico W 2040. (B) Connect the DHT22 sensor by ensuring the - Data + pins in the DHT1 silk screen align with the + out - pins on the DHT22 sensor. From Visual Studio Code: (A) Select the file dhttest.py . (B) Click the Run button in the status bar. Verify the output in the terminal shows the temperature and humidity readings. Unplug the USB from the Raspberry Pi Pico W 2040 upon completion.","title":"Test the Humidity and Temperature"},{"location":"assembly/deploycontrollerproject/","text":"Deploy the Conductor Project to the Conductor PCB \u00b6 In this section, you will upload code to your Raspberry Pi Pico W 2040 from your computer. Prerequisites \u00b6 Completed the assembly and soldering of the conductor PCB . Created a fork of the Kinetic-Display GitHub repository. See Software and Microcontroller Preparation . Deployed the digit and controller directories. Also, see Software and Microcontroller Preparation . Configure and Deploy the Conductor Project \u00b6 Connect your computer to the conductor PCB Pico W 2040 as described in Verify Micropython on your Raspberry Pi Pico . Open VS Code and follow the steps below: (A) Select File -> Open Folder... . (B) Navigate to the deploy/conductor folder you deployed during step 4 in the section Fork and Clone the Repository . (C) Click the \"Select Folder\" button. Open the main.py file and make the following changes: (A) Comment out the call to the loop() function. (B) Uncomment the manual() function. (C) Rename the main.py file to _main.py . Don't forget to save the file after making these changes. Create a new terminal in VS Code: (A) Click the ellipsis ( ... ) in the terminal pane. (B) Select Terminal -> New Terminal from the submenu. Connect your computer's USB port to the Raspberry Pi Pico W 2040 as shown below: In the terminal pane: (A) Select the drop-down menu. (B) Click the MicroPico vREPL submenu item. Upload the project to the Pico: (A) Click All Commands on the status bar . (B) In the Command text field, type \" Upload \" after \" > MicroPico: \". (C) Select the dropdown MicroPico: Upload project to Pico . Congratulations on successfully uploading the code to the conductor's Raspberry Pi Pico W!","title":"Deploy Conductor Project"},{"location":"assembly/deploycontrollerproject/#deploy_the_conductor_project_to_the_conductor_pcb","text":"In this section, you will upload code to your Raspberry Pi Pico W 2040 from your computer.","title":"Deploy the Conductor Project to the Conductor PCB"},{"location":"assembly/deploycontrollerproject/#prerequisites","text":"Completed the assembly and soldering of the conductor PCB . Created a fork of the Kinetic-Display GitHub repository. See Software and Microcontroller Preparation . Deployed the digit and controller directories. Also, see Software and Microcontroller Preparation .","title":"Prerequisites"},{"location":"assembly/deploycontrollerproject/#configure_and_deploy_the_conductor_project","text":"Connect your computer to the conductor PCB Pico W 2040 as described in Verify Micropython on your Raspberry Pi Pico . Open VS Code and follow the steps below: (A) Select File -> Open Folder... . (B) Navigate to the deploy/conductor folder you deployed during step 4 in the section Fork and Clone the Repository . (C) Click the \"Select Folder\" button. Open the main.py file and make the following changes: (A) Comment out the call to the loop() function. (B) Uncomment the manual() function. (C) Rename the main.py file to _main.py . Don't forget to save the file after making these changes. Create a new terminal in VS Code: (A) Click the ellipsis ( ... ) in the terminal pane. (B) Select Terminal -> New Terminal from the submenu. Connect your computer's USB port to the Raspberry Pi Pico W 2040 as shown below: In the terminal pane: (A) Select the drop-down menu. (B) Click the MicroPico vREPL submenu item. Upload the project to the Pico: (A) Click All Commands on the status bar . (B) In the Command text field, type \" Upload \" after \" > MicroPico: \". (C) Select the dropdown MicroPico: Upload project to Pico . Congratulations on successfully uploading the code to the conductor's Raspberry Pi Pico W!","title":"Configure and Deploy the Conductor Project"},{"location":"assembly/deploydigitproject/","text":"Deploy the Digit Project to the Digit PCB \u00b6 This section guides you through uploading code to your Raspberry Pi Pico 2040 for the digit PCB. Prerequisites \u00b6 Completed the assembly and soldering of the Digit PCB Created a fork of the Kinetic-Display GitHub repository (see Software and Microcontroller Preparation ) Deployed the digit directory (see Software and Microcontroller Preparation ) Configure and Deploy the Digit Project \u00b6 Connect the Digit PCB : Connect your computer to the digit PCB's Raspberry Pi Pico as described in Verify Micropython on your Raspberry Pi Pico . Open the Deploy Folder : In VS Code, select (A) File -> Open Folder... . (B) Navigate to the deploy/digit folder you deployed during step 4 in Fork and Clone the Repository . (C) Click the \"Select Folder\" button. Update the digit.json File : In the Explorer pane, click the Explorer icon ( A ) in the left Activity bar . Open the digit.json file ( B ) and change the \"digit\": value ( C ) to match the PCB's labeled number (0-3). Save the file after making changes. !!! warning Ensure the digit value in the digit.json file matches the PCB's labeled value to avoid incorrect behavior. Create a New Terminal : (A) Click the ellipsis ( ... ) in the terminal pane. (B) Select Terminal -> New Terminal from the submenu. Select the MicroPico vREPL : Connect your computer's USB port to the digit PCB's Raspberry Pi Pico. In the terminal pane, (A) select the drop-down menu and (B) click the MicroPico vREPL submenu item. Upload the Project : Click All Commands ( A ) on the status bar . In the Command text field ( B ), type \" Upload \" after \" > MicroPico: \". Select the dropdown option MicroPico: Upload project to Pico . Congratulations on successfully uploading the code to the digit PCB's Raspberry Pi Pico!","title":"Deploy Digit Project"},{"location":"assembly/deploydigitproject/#deploy_the_digit_project_to_the_digit_pcb","text":"This section guides you through uploading code to your Raspberry Pi Pico 2040 for the digit PCB.","title":"Deploy the Digit Project to the Digit PCB"},{"location":"assembly/deploydigitproject/#prerequisites","text":"Completed the assembly and soldering of the Digit PCB Created a fork of the Kinetic-Display GitHub repository (see Software and Microcontroller Preparation ) Deployed the digit directory (see Software and Microcontroller Preparation )","title":"Prerequisites"},{"location":"assembly/deploydigitproject/#configure_and_deploy_the_digit_project","text":"Connect the Digit PCB : Connect your computer to the digit PCB's Raspberry Pi Pico as described in Verify Micropython on your Raspberry Pi Pico . Open the Deploy Folder : In VS Code, select (A) File -> Open Folder... . (B) Navigate to the deploy/digit folder you deployed during step 4 in Fork and Clone the Repository . (C) Click the \"Select Folder\" button. Update the digit.json File : In the Explorer pane, click the Explorer icon ( A ) in the left Activity bar . Open the digit.json file ( B ) and change the \"digit\": value ( C ) to match the PCB's labeled number (0-3). Save the file after making changes. !!! warning Ensure the digit value in the digit.json file matches the PCB's labeled value to avoid incorrect behavior. Create a New Terminal : (A) Click the ellipsis ( ... ) in the terminal pane. (B) Select Terminal -> New Terminal from the submenu. Select the MicroPico vREPL : Connect your computer's USB port to the digit PCB's Raspberry Pi Pico. In the terminal pane, (A) select the drop-down menu and (B) click the MicroPico vREPL submenu item. Upload the Project : Click All Commands ( A ) on the status bar . In the Command text field ( B ), type \" Upload \" after \" > MicroPico: \". Select the dropdown option MicroPico: Upload project to Pico . Congratulations on successfully uploading the code to the digit PCB's Raspberry Pi Pico!","title":"Configure and Deploy the Digit Project"},{"location":"assembly/digitpcbassembly/","text":"Digit PCB Assembly \u00b6 The display has 4 digits, numbered from right to left (0-3) when viewed from the front. The digit PCBs are for digits 0, 2, and 3, while the controller PCB (digit 1) includes the colons. The digit PCBs are the foundation of the display and serve several important functions: Mechanical Backstop : Provides a sturdy backstop for the actuator's segment when retracting into the display. Uniform Lighting : Ensures consistent light dispersion for each segment, creating a uniform glow without hotspots. Efficient Circuitry : Reduces wiring complexity, connects components efficiently, and ensures reliable, cost-effective, and consistent quality. This guide details the assembly of the digit PCBs. Below are images of the fully assembled PCBs covered in this section. Front face fully assembled. Back side fully assembled. Prerequisites \u00b6 Fabrication of the digit PCBs Table of components and tools Table of components Quantity Component Image 4 16 pin IC socket 4 L293D stepper motor driver 2 20 pin female header connector 1 20 pin single row breakaway male connector 2 2 Pin PCB Mount Screw Terminal Block Connector Straight Pin 1 0.1\u03bc farad ceramic capacitor 1 1\u03bc farad electrolytic capacitor 28 5mm Flat top LED, anode long lead (any color) 1 Raspberry Pi Pico 2040 with Headers 3 Digit PCBs See labelling the digit PCBs Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Isopropyl Alcohol Yes Cotton Facial Pads No Label maker Label the Digit PCB \u00b6 Label the Front Side : Using a label maker or tape and pen, create labels for \"0\", \"2\", and \"3\". Attach the labels to the front-facing side of each digit PCB as shown below. Note that digit 0 (C) in the image is a completed PCB ready for mounting. Label the Back Side : Attach the same labels to the back-facing side of each digit PCB as shown below. Add the 16 Pin Headers \u00b6 Insert the Header : From the front side of the PCB, align the notch on the 16-pin header with the silk screen outline. Insert the header into the through holes. Solder the Pins : Turn the PCB over and solder all 16 pins. Repeat for all 4 headers. Trim and Smooth : From the back, snip the soldered pins flush, then touch up with solder to create smooth rounded beads. Clean the Flux : Use a cotton pad dabbed with isopropyl alcohol to remove flux residue. Add the 28 LEDs \u00b6 Note Test your LEDs on a breadboard before soldering to ensure consistent color and brightness. Use a digital camera to detect variations. Insert LEDs : Start with segment \"A\". Insert the LED's long lead (anode) into the \"+\" through hole. Repeat for all LEDs in segment \"A\". Solder and Trim : Turn the PCB over, solder the LED pins, and snip off the excess. Smooth the clipped pins with solder. Clean the Flux : Remove flux residue with a cotton pad and isopropyl alcohol. Repeat for All Segments : Complete the process for segments B through G. The image below shows all LEDs soldered in place. Add the Motor Pins \u00b6 Break Out Pins : Use needle nose pliers to break out 7 pairs of 2.54mm male breakaway pins. Insert Pins : Place the short end of each pin pair into the actuator segment through holes (seg-A to seg-G) on the back of the PCB. Solder and Trim : Solder the pins on the front side, snip them flush, and smooth with solder. Clean the Flux : Remove flux residue with isopropyl alcohol. Mount the Motor Drivers \u00b6 Align the Driver : Orient the motor driver so the notch aligns with the 16-pin header. Insert Carefully : Insert the motor driver into the header, ensuring no pins are bent. Repeat the install for the remaining motor drivers. Add the PCB Mount, Two pin (2P) Terminal Block Connectors \u00b6 On the front of the digit PCB, insert the PCB two pin terminal block connector into the 5v through holes so the face of the connector (where the wires are inserted) points toward the LEDs on the PCB. Solder the terminal block connector pins on the back of the digit PCB. On the front of the digit PCB position the 2 pin terminal block connector facing away from the LEDs. For PCBs labelled \"2\" & \"3\" , insert the connector pins into the UART Tx-1/Rx-1 through holes. For the digit PCB labelled \"0\" , insert the connector into the Tx-0/Rx-0 through holes. On the back of the digit PCB, solder the remaining connector pins, cut the pins flush, resolder to a smooth bead, then remove the flux wth a cotton dabbed with isopropyl alcohol. Add the Electrolytic and Ceramic Capacitors \u00b6 On the front of the digit PCB, align the electrolytic capacitor - sign opposite the + printed on the PCB for capacitor c1 , see the picture below. Insert the pins into the through holes, then turn the digit PCB over to the back side and solder the capacitor. On the front of the digit PCB, insert the ceramic capacitor pins into the through holes titled c2 . Turn the digit PCB over to the back and solder the capacitor. Note Ceramic capacitors do not have polarity and can be inserted in any direction. 1. On the back of the digit PCB, cut the pins flush, resolder to a smooth bead, then remove the flux with a cotton dabbed with isopropyl alcohol. Add the 20 pin Headers and Install the Microcontroller \u00b6 On the back side of the PCB, place the two 20 pin headers into the through holes for RASP1 . Carefully turn over the PCB while keeping the 20 pin headers in the through holes. Level the PCB and adjust the two 20 pin headers so they are perpendicular to the PCB. Solder the pins once in place. Snip all 40 of the pins flush, resolder each to a smooth bead, then remove the flux with a cotton dabbed with isopropyl alcohol. Orient the Raspberry Pi Pico 2040 microcontroller so the USB port is facing in the same direction as the PCB silk screen, then gently mount the microcontroller onto the header. Congratulations for assembling a digit PCB! Be sure to test the digit PCB before assembling the next one. Digit Schematics \u00b6 The schematic diagrams in this section represent the Digit Motor Controller and Digits Microcontroller circuits: Motor Controller Circuit drives the actuator motors for each segment (A-G) to physically move the segments into position, turns on the segment LEDs when extended, and turns off the segment LEDs when retracted. Microcontroller Circuit controls the LEDs for segment illumination (brightness) and communicates with the main controller (Raspberry Pi Pico W 2040) to receive display commands. Together, these circuits enable the digit PCBs to display numbers and characters as part of the larger kinetic display system. Below is an explanation of the components, their purpose, and how the circuitry functions. Digit Motor Controller Schematic \u00b6 The schematic in the section shows the motor control circuitry for the digit's seven-segment actuators (A-G). Each segment is controlled by a motor driver IC (L293D) connected to the Raspberry Pi Pico 2040. Note the L293D IC motor driver is considered outdated, but used in this circuit as it works well with toy motors and costs slightly less. For more details see the L293D motorcontroller datasheet . Key Motor Controller Components and Their Purpose \u00b6 L293D Motor Driver ICs (U1, U2, U3, U4) : Purpose : Control the bidirectional movement of the actuator motors for each segment (A-G). Functionality : Each IC controls two segments, allowing precise movement of the actuators. Pins : ENABLE1 and ENABLE2 : Controls the motor speed. INPUT1 , INPUT2 , INPUT3 , INPUT4 : Control the CW (Clockwise) and CCW (Counter clockwise) direction of the motor. OUTPUT1 , OUTPUT2 , OUTPUT3 , OUTPUT4 : Provide the output signals to the motors. Actuator Motors (SEG-A to SEG-G) : Purpose : Physically extends and retracts the segments of the seven-segment display to create the desired digit. Pins : CW extends the segment and CCW retracts the segment: Control the extension and retraction of the actuator. Capacitors (C1, C2) : Purpose : Provide power decoupling and noise filtering for the motor drivers. C1 (1\u03bcF): Stabilizes the power supply for the motor drivers. C2 (0.1\u03bcF): Filters high-frequency noise. GPIO Pins (from Raspberry Pi Pico 2040) : Purpose : Send control signals to the motor drivers. Pins : GPIO11 , GPIO12 , GPIO15 , etc.: Control the INPUT and ENABLE pins of the motor drivers. How the Motor Controller Circuit Works \u00b6 Motor Control : The Raspberry Pi Pico 2040 sends signals to the INPUT and ENABLE pins of the L293D ICs. Based on these signals, the motor driver controls the direction and speed of the actuator motors. Segment Movement : Each segment (A-G) is connected to a motor. The motor moves the segment into position to display the desired digit. Power Stabilization : The capacitors C1 and C2 ensure stable operation of the motor drivers by filtering noise and stabilizing the power supply. Digit Microcontroller Schematic \u00b6 The schematic in this section shows the microcontroller circuitry for controlling the LEDs and communicating with the motor controllers. Key Microcontroller Components and Their Purpose \u00b6 Raspberry Pi Pico 2040 (Microcontroller) : Purpose : Acts as the central processing unit for the digit PCB. Functions : Sends control signals to the motor drivers for segment movement. Controls the LEDs for segment illumination. Communicates with the main controller PCB via UART. LEDs (A-LED1 to G-LED4) : Purpose : Illuminates the segments of the seven-segment display. Configuration : Each segment (A-G) has four LEDs connected in parallel. The anode + is connected to the GPIO pins, and the cathode - is connected to ground. Brightness is controlled by the GPIO PWM signals from the microcontroller. Resistors (not used in lieu of PWM) : Purpose : Prevents the LEDs from exceeding their maximum rated power capabilities. The software prevents any LED PWM signal from exceeding a 220 ohm resistor for 3.3v and therefore resistors are not needed. UART Connector : Purpose : Provides communication between the digit PCB and the main controller PCB. Pins : Rx-1 , Tx-1 , Rx-0 , Tx-0 : Used for transmitting and receiving data. Capacitors (C1, C2) : Purpose : Provide power decoupling and noise filtering for the microcontroller and LEDs. C1 (1\u03bcF): Stabilizes the power supply for the LEDs. C2 (0.1\u03bcF): Filters high-frequency noise. How the Microcontroller Circuit Works \u00b6 Segment Control : The Raspberry Pi Pico 2040 controls motor direction, extending or retracting the segment, and speed from GPIO pins connected to the motor controllers. The microcontroller determines the length of time the motor is running (between 1/5th and 1/4th of a second), the CW (extend) or CCW (retract) direction of the actuator, and the speed of the motor which is a value typically between 50% to 100% of 5v. LED Control : The Raspberry Pi Pico 2040 controls the LEDs by PWM from the GPIO pins that are connected to the anode of each LED. This allows the microcontroller to turn on/off specific LEDs, control the brightness, and illuminates the desired segments. Communication : The UART connector allows the digit PCB to receive UART commands from the controller and digit 1 PCB. UART commands include which digit to display and brightness levels, as well as various actuator and digit settings. State : The Raspberry Pi Pico 2040 stores the digit state at all times in order to gracefully transition from one number or character to the next and handle graceful or ungraceful power off situations. The state includes which segment is extended or retracted, the type of character map used by the digits, as well as the speed and length of time to run the motors. PowerCommands Stabilization : The capacitors C1 , C2 ensure stable operation of the LEDs and microcontroller by filtering noise and stabilizing the power supply.","title":"Digit PCBs"},{"location":"assembly/digitpcbassembly/#digit_pcb_assembly","text":"The display has 4 digits, numbered from right to left (0-3) when viewed from the front. The digit PCBs are for digits 0, 2, and 3, while the controller PCB (digit 1) includes the colons. The digit PCBs are the foundation of the display and serve several important functions: Mechanical Backstop : Provides a sturdy backstop for the actuator's segment when retracting into the display. Uniform Lighting : Ensures consistent light dispersion for each segment, creating a uniform glow without hotspots. Efficient Circuitry : Reduces wiring complexity, connects components efficiently, and ensures reliable, cost-effective, and consistent quality. This guide details the assembly of the digit PCBs. Below are images of the fully assembled PCBs covered in this section. Front face fully assembled. Back side fully assembled.","title":"Digit PCB Assembly"},{"location":"assembly/digitpcbassembly/#prerequisites","text":"Fabrication of the digit PCBs Table of components and tools Table of components Quantity Component Image 4 16 pin IC socket 4 L293D stepper motor driver 2 20 pin female header connector 1 20 pin single row breakaway male connector 2 2 Pin PCB Mount Screw Terminal Block Connector Straight Pin 1 0.1\u03bc farad ceramic capacitor 1 1\u03bc farad electrolytic capacitor 28 5mm Flat top LED, anode long lead (any color) 1 Raspberry Pi Pico 2040 with Headers 3 Digit PCBs See labelling the digit PCBs Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Isopropyl Alcohol Yes Cotton Facial Pads No Label maker","title":"Prerequisites"},{"location":"assembly/digitpcbassembly/#label_the_digit_pcb","text":"Label the Front Side : Using a label maker or tape and pen, create labels for \"0\", \"2\", and \"3\". Attach the labels to the front-facing side of each digit PCB as shown below. Note that digit 0 (C) in the image is a completed PCB ready for mounting. Label the Back Side : Attach the same labels to the back-facing side of each digit PCB as shown below.","title":"Label the Digit PCB"},{"location":"assembly/digitpcbassembly/#add_the_16_pin_headers","text":"Insert the Header : From the front side of the PCB, align the notch on the 16-pin header with the silk screen outline. Insert the header into the through holes. Solder the Pins : Turn the PCB over and solder all 16 pins. Repeat for all 4 headers. Trim and Smooth : From the back, snip the soldered pins flush, then touch up with solder to create smooth rounded beads. Clean the Flux : Use a cotton pad dabbed with isopropyl alcohol to remove flux residue.","title":"Add the 16 Pin Headers"},{"location":"assembly/digitpcbassembly/#add_the_28_leds","text":"Note Test your LEDs on a breadboard before soldering to ensure consistent color and brightness. Use a digital camera to detect variations. Insert LEDs : Start with segment \"A\". Insert the LED's long lead (anode) into the \"+\" through hole. Repeat for all LEDs in segment \"A\". Solder and Trim : Turn the PCB over, solder the LED pins, and snip off the excess. Smooth the clipped pins with solder. Clean the Flux : Remove flux residue with a cotton pad and isopropyl alcohol. Repeat for All Segments : Complete the process for segments B through G. The image below shows all LEDs soldered in place.","title":"Add the 28 LEDs"},{"location":"assembly/digitpcbassembly/#add_the_motor_pins","text":"Break Out Pins : Use needle nose pliers to break out 7 pairs of 2.54mm male breakaway pins. Insert Pins : Place the short end of each pin pair into the actuator segment through holes (seg-A to seg-G) on the back of the PCB. Solder and Trim : Solder the pins on the front side, snip them flush, and smooth with solder. Clean the Flux : Remove flux residue with isopropyl alcohol.","title":"Add the Motor Pins"},{"location":"assembly/digitpcbassembly/#mount_the_motor_drivers","text":"Align the Driver : Orient the motor driver so the notch aligns with the 16-pin header. Insert Carefully : Insert the motor driver into the header, ensuring no pins are bent. Repeat the install for the remaining motor drivers.","title":"Mount the Motor Drivers"},{"location":"assembly/digitpcbassembly/#add_the_pcb_mount_two_pin_2p_terminal_block_connectors","text":"On the front of the digit PCB, insert the PCB two pin terminal block connector into the 5v through holes so the face of the connector (where the wires are inserted) points toward the LEDs on the PCB. Solder the terminal block connector pins on the back of the digit PCB. On the front of the digit PCB position the 2 pin terminal block connector facing away from the LEDs. For PCBs labelled \"2\" & \"3\" , insert the connector pins into the UART Tx-1/Rx-1 through holes. For the digit PCB labelled \"0\" , insert the connector into the Tx-0/Rx-0 through holes. On the back of the digit PCB, solder the remaining connector pins, cut the pins flush, resolder to a smooth bead, then remove the flux wth a cotton dabbed with isopropyl alcohol.","title":"Add the PCB Mount, Two pin (2P) Terminal Block Connectors"},{"location":"assembly/digitpcbassembly/#add_the_electrolytic_and_ceramic_capacitors","text":"On the front of the digit PCB, align the electrolytic capacitor - sign opposite the + printed on the PCB for capacitor c1 , see the picture below. Insert the pins into the through holes, then turn the digit PCB over to the back side and solder the capacitor. On the front of the digit PCB, insert the ceramic capacitor pins into the through holes titled c2 . Turn the digit PCB over to the back and solder the capacitor. Note Ceramic capacitors do not have polarity and can be inserted in any direction. 1. On the back of the digit PCB, cut the pins flush, resolder to a smooth bead, then remove the flux with a cotton dabbed with isopropyl alcohol.","title":"Add the Electrolytic and Ceramic Capacitors"},{"location":"assembly/digitpcbassembly/#add_the_20_pin_headers_and_install_the_microcontroller","text":"On the back side of the PCB, place the two 20 pin headers into the through holes for RASP1 . Carefully turn over the PCB while keeping the 20 pin headers in the through holes. Level the PCB and adjust the two 20 pin headers so they are perpendicular to the PCB. Solder the pins once in place. Snip all 40 of the pins flush, resolder each to a smooth bead, then remove the flux with a cotton dabbed with isopropyl alcohol. Orient the Raspberry Pi Pico 2040 microcontroller so the USB port is facing in the same direction as the PCB silk screen, then gently mount the microcontroller onto the header. Congratulations for assembling a digit PCB! Be sure to test the digit PCB before assembling the next one.","title":"Add the 20 pin Headers and Install the Microcontroller"},{"location":"assembly/digitpcbassembly/#digit_schematics","text":"The schematic diagrams in this section represent the Digit Motor Controller and Digits Microcontroller circuits: Motor Controller Circuit drives the actuator motors for each segment (A-G) to physically move the segments into position, turns on the segment LEDs when extended, and turns off the segment LEDs when retracted. Microcontroller Circuit controls the LEDs for segment illumination (brightness) and communicates with the main controller (Raspberry Pi Pico W 2040) to receive display commands. Together, these circuits enable the digit PCBs to display numbers and characters as part of the larger kinetic display system. Below is an explanation of the components, their purpose, and how the circuitry functions.","title":"Digit Schematics"},{"location":"assembly/digitpcbassembly/#digit_motor_controller_schematic","text":"The schematic in the section shows the motor control circuitry for the digit's seven-segment actuators (A-G). Each segment is controlled by a motor driver IC (L293D) connected to the Raspberry Pi Pico 2040. Note the L293D IC motor driver is considered outdated, but used in this circuit as it works well with toy motors and costs slightly less. For more details see the L293D motorcontroller datasheet .","title":"Digit Motor Controller Schematic"},{"location":"assembly/digitpcbassembly/#key_motor_controller_components_and_their_purpose","text":"L293D Motor Driver ICs (U1, U2, U3, U4) : Purpose : Control the bidirectional movement of the actuator motors for each segment (A-G). Functionality : Each IC controls two segments, allowing precise movement of the actuators. Pins : ENABLE1 and ENABLE2 : Controls the motor speed. INPUT1 , INPUT2 , INPUT3 , INPUT4 : Control the CW (Clockwise) and CCW (Counter clockwise) direction of the motor. OUTPUT1 , OUTPUT2 , OUTPUT3 , OUTPUT4 : Provide the output signals to the motors. Actuator Motors (SEG-A to SEG-G) : Purpose : Physically extends and retracts the segments of the seven-segment display to create the desired digit. Pins : CW extends the segment and CCW retracts the segment: Control the extension and retraction of the actuator. Capacitors (C1, C2) : Purpose : Provide power decoupling and noise filtering for the motor drivers. C1 (1\u03bcF): Stabilizes the power supply for the motor drivers. C2 (0.1\u03bcF): Filters high-frequency noise. GPIO Pins (from Raspberry Pi Pico 2040) : Purpose : Send control signals to the motor drivers. Pins : GPIO11 , GPIO12 , GPIO15 , etc.: Control the INPUT and ENABLE pins of the motor drivers.","title":"Key Motor Controller Components and Their Purpose"},{"location":"assembly/digitpcbassembly/#how_the_motor_controller_circuit_works","text":"Motor Control : The Raspberry Pi Pico 2040 sends signals to the INPUT and ENABLE pins of the L293D ICs. Based on these signals, the motor driver controls the direction and speed of the actuator motors. Segment Movement : Each segment (A-G) is connected to a motor. The motor moves the segment into position to display the desired digit. Power Stabilization : The capacitors C1 and C2 ensure stable operation of the motor drivers by filtering noise and stabilizing the power supply.","title":"How the Motor Controller Circuit Works"},{"location":"assembly/digitpcbassembly/#digit_microcontroller_schematic","text":"The schematic in this section shows the microcontroller circuitry for controlling the LEDs and communicating with the motor controllers.","title":"Digit Microcontroller Schematic"},{"location":"assembly/digitpcbassembly/#key_microcontroller_components_and_their_purpose","text":"Raspberry Pi Pico 2040 (Microcontroller) : Purpose : Acts as the central processing unit for the digit PCB. Functions : Sends control signals to the motor drivers for segment movement. Controls the LEDs for segment illumination. Communicates with the main controller PCB via UART. LEDs (A-LED1 to G-LED4) : Purpose : Illuminates the segments of the seven-segment display. Configuration : Each segment (A-G) has four LEDs connected in parallel. The anode + is connected to the GPIO pins, and the cathode - is connected to ground. Brightness is controlled by the GPIO PWM signals from the microcontroller. Resistors (not used in lieu of PWM) : Purpose : Prevents the LEDs from exceeding their maximum rated power capabilities. The software prevents any LED PWM signal from exceeding a 220 ohm resistor for 3.3v and therefore resistors are not needed. UART Connector : Purpose : Provides communication between the digit PCB and the main controller PCB. Pins : Rx-1 , Tx-1 , Rx-0 , Tx-0 : Used for transmitting and receiving data. Capacitors (C1, C2) : Purpose : Provide power decoupling and noise filtering for the microcontroller and LEDs. C1 (1\u03bcF): Stabilizes the power supply for the LEDs. C2 (0.1\u03bcF): Filters high-frequency noise.","title":"Key Microcontroller Components and Their Purpose"},{"location":"assembly/digitpcbassembly/#how_the_microcontroller_circuit_works","text":"Segment Control : The Raspberry Pi Pico 2040 controls motor direction, extending or retracting the segment, and speed from GPIO pins connected to the motor controllers. The microcontroller determines the length of time the motor is running (between 1/5th and 1/4th of a second), the CW (extend) or CCW (retract) direction of the actuator, and the speed of the motor which is a value typically between 50% to 100% of 5v. LED Control : The Raspberry Pi Pico 2040 controls the LEDs by PWM from the GPIO pins that are connected to the anode of each LED. This allows the microcontroller to turn on/off specific LEDs, control the brightness, and illuminates the desired segments. Communication : The UART connector allows the digit PCB to receive UART commands from the controller and digit 1 PCB. UART commands include which digit to display and brightness levels, as well as various actuator and digit settings. State : The Raspberry Pi Pico 2040 stores the digit state at all times in order to gracefully transition from one number or character to the next and handle graceful or ungraceful power off situations. The state includes which segment is extended or retracted, the type of character map used by the digits, as well as the speed and length of time to run the motors. PowerCommands Stabilization : The capacitors C1 , C2 ensure stable operation of the LEDs and microcontroller by filtering noise and stabilizing the power supply.","title":"How the Microcontroller Circuit Works"},{"location":"assembly/digitpcbtest/","text":"Digit PCB Test \u00b6 Run the tests in this section after assembling each digit PCB to ensure all components are soldered correctly and functional. Any defective electronic component on the digit PCB must be replaced before completing the project. Prerequisites \u00b6 Completed digit PCB ready for actuators Computer and microcontroller with the prerequisite software An assembled actuator Test the Motor and LED Segments \u00b6 Open the Deployed Project : From Visual Studio Code, open the deployed digit project. (A) Click the file menu, (B) select the digit folder, then (C) click the Select Folder button. Connect the Raspberry Pi Pico : Plug a USB cable from your computer into the Raspberry Pi Pico's USB port on the digit PCB. Open the MicroPico vREPL in the terminal dropdown as described in Verify Micropython on your Raspberry Pi Pico . Connect the Actuator : Plug the Dupont connector from the actuator into the SEG-A pins. Ensure the white wire is connected to the CW pin and the black wire to the CCW pin. Open the Test File : From Visual Studio Code, (A) click on the digit.py file, then (B) select the MicroPico vREPL from the terminal menu. Run the Test Application : (A) Verify the connection between your computer and the Raspberry Pi Pico. (B) Click the Run button to execute the test application for the digit PCB. Test Segment A : The console test application displays options for segments 0-6, corresponding to segments A-G. Extend SEG-A by typing e0 in the console. Verify Segment A : The 4 SEG-A LEDs should light up, and the motor should briefly turn on. Retract SEG-A by typing r0 in the console. Test Remaining Segments : Repeat steps 6 and 7 for SEG-B through SEG-G to verify all segments work as expected. Perform this test for all digit PCBs (0-3).","title":"Digit PCB Test"},{"location":"assembly/digitpcbtest/#digit_pcb_test","text":"Run the tests in this section after assembling each digit PCB to ensure all components are soldered correctly and functional. Any defective electronic component on the digit PCB must be replaced before completing the project.","title":"Digit PCB Test"},{"location":"assembly/digitpcbtest/#prerequisites","text":"Completed digit PCB ready for actuators Computer and microcontroller with the prerequisite software An assembled actuator","title":"Prerequisites"},{"location":"assembly/digitpcbtest/#test_the_motor_and_led_segments","text":"Open the Deployed Project : From Visual Studio Code, open the deployed digit project. (A) Click the file menu, (B) select the digit folder, then (C) click the Select Folder button. Connect the Raspberry Pi Pico : Plug a USB cable from your computer into the Raspberry Pi Pico's USB port on the digit PCB. Open the MicroPico vREPL in the terminal dropdown as described in Verify Micropython on your Raspberry Pi Pico . Connect the Actuator : Plug the Dupont connector from the actuator into the SEG-A pins. Ensure the white wire is connected to the CW pin and the black wire to the CCW pin. Open the Test File : From Visual Studio Code, (A) click on the digit.py file, then (B) select the MicroPico vREPL from the terminal menu. Run the Test Application : (A) Verify the connection between your computer and the Raspberry Pi Pico. (B) Click the Run button to execute the test application for the digit PCB. Test Segment A : The console test application displays options for segments 0-6, corresponding to segments A-G. Extend SEG-A by typing e0 in the console. Verify Segment A : The 4 SEG-A LEDs should light up, and the motor should briefly turn on. Retract SEG-A by typing r0 in the console. Test Remaining Segments : Repeat steps 6 and 7 for SEG-B through SEG-G to verify all segments work as expected. Perform this test for all digit PCBs (0-3).","title":"Test the Motor and LED Segments"},{"location":"assembly/displayfacepcbs/","text":"Display Face and PCBs Assembly with Integration Testing \u00b6 This guide details assembling the PCBs onto the display face and includes integration testing of the electronic components that make the Kinetic Display function. Prerequisites \u00b6 Completed assembly of all PCBs, including the conductor, digit, and power management PCBs. Wired and calibrated buck modules. Installed UART and relay wiring. Table of components Quantity Component Image 30 M1.7x8mm Cross Round Head with Washer Self Tapping Screw 304 Stainless Steel Screws Table of tools Required Tool Image Yes Fine-tipped Philips head screwdriver Display Face and PCBs Assembly \u00b6 Connect the two 3D-printed sides of the display face with the front facing down onto your workbench. The cove on the backside of the display face should be on the top, furthest from you. See the picture in the next step with the conductor PCB tilted upward to unveil the position of the cove. Position the stand and PCBs atop the display face as shown in the picture below. Ensure the wiring fits in the cove and the gaskets of the PCBs are flush against the display face without any wires protruding. Using a small Philips head screwdriver, secure the PCBs with M1.7x8mm self-tapping screws in the locations highlighted below. Following the picture below: (A) Connect the DHT22 sensor to the conductor PCB. (B) Plug in the 12V power supply into the power management PCB's barrel jack. Note: The DHT22 sensor connection is temporary and will be permanently installed later. (C) Connect your computer's USB cable to the conductor PCB Raspberry Pi Pico W 2040. Warning ONLY connect your computer's USB cable to the conductor PCB Raspberry Pi Pico W 2040 AFTER plugging in the 12V power supply. Plugging in your computer's USB cable BEFORE your 12V power supply is plugged in will burn out the sensitive circuitry within the Pico W. Integration Test \u00b6 From Visual Studio Code on your computer: (A) Click the _main.py file in the explorer pane. (B) Run the program. Ensure you have a connection via your computer's USB cable to the conductor PCB Raspberry Pi Pico W 2040. From Visual Studio Code on your computer, type the (a)ll digits test command in the terminal to check the UART connections across the digits. See the video below to verify the segments animate from digit 3 to digit 0. From the command terminal pane, use the (r)elay (0=off,1=on) command by typing r0 (off) then r1 (on) to check the relay functionality. See the video below with the LEDs on the buck converters turning on and off. From the command terminal pane, use the (t)emp(0=C,1=F) command by typing t0 or t1 to display the temperature (respectively) in Celsius or Fahrenheit. You'll need to tip the display up on one side to view the front of the display as shown in the video below. From the command terminal pane, use the (l)uminosity command while shielding the LDR with your hand (or turning off the light in your room). You won't see any command output, only a change in the brightness of the display. If the LED colons are brighter or dimmer than the digit LEDs, adjust the LEDbrightnessFactor setting in the digit_colons.py file. Presently, the LED colons are set to about 1/3rd the power of the digit LEDs. After making changes to the LEDbrightnessFactor , upload the updated file to the controller's Raspberry Pi Pico W 2040. From your Visual Studio Code file explorer pane: Open the secrets.py file and change the usr and pwd to your network SSID and password so the Kinetic Display can connect to your local Wi-Fi network. This step is optional and can be done later. At the bottom of the _main.py file: Comment out the manual() call and uncomment the loop() call. Rename _main.py to main.py . Upload the project to the controller's Raspberry Pi Pico W 2040. Warning Forgetting to upload the renamed main.py file to the controller's Raspberry Pi Pico W 2040 will cause the Kinetic Display to be unresponsive.","title":"Display Face and PCBs Assembly with Integration Testing"},{"location":"assembly/displayfacepcbs/#display_face_and_pcbs_assembly_with_integration_testing","text":"This guide details assembling the PCBs onto the display face and includes integration testing of the electronic components that make the Kinetic Display function.","title":"Display Face and PCBs Assembly with Integration Testing"},{"location":"assembly/displayfacepcbs/#prerequisites","text":"Completed assembly of all PCBs, including the conductor, digit, and power management PCBs. Wired and calibrated buck modules. Installed UART and relay wiring. Table of components Quantity Component Image 30 M1.7x8mm Cross Round Head with Washer Self Tapping Screw 304 Stainless Steel Screws Table of tools Required Tool Image Yes Fine-tipped Philips head screwdriver","title":"Prerequisites"},{"location":"assembly/displayfacepcbs/#display_face_and_pcbs_assembly","text":"Connect the two 3D-printed sides of the display face with the front facing down onto your workbench. The cove on the backside of the display face should be on the top, furthest from you. See the picture in the next step with the conductor PCB tilted upward to unveil the position of the cove. Position the stand and PCBs atop the display face as shown in the picture below. Ensure the wiring fits in the cove and the gaskets of the PCBs are flush against the display face without any wires protruding. Using a small Philips head screwdriver, secure the PCBs with M1.7x8mm self-tapping screws in the locations highlighted below. Following the picture below: (A) Connect the DHT22 sensor to the conductor PCB. (B) Plug in the 12V power supply into the power management PCB's barrel jack. Note: The DHT22 sensor connection is temporary and will be permanently installed later. (C) Connect your computer's USB cable to the conductor PCB Raspberry Pi Pico W 2040. Warning ONLY connect your computer's USB cable to the conductor PCB Raspberry Pi Pico W 2040 AFTER plugging in the 12V power supply. Plugging in your computer's USB cable BEFORE your 12V power supply is plugged in will burn out the sensitive circuitry within the Pico W.","title":"Display Face and PCBs Assembly"},{"location":"assembly/displayfacepcbs/#integration_test","text":"From Visual Studio Code on your computer: (A) Click the _main.py file in the explorer pane. (B) Run the program. Ensure you have a connection via your computer's USB cable to the conductor PCB Raspberry Pi Pico W 2040. From Visual Studio Code on your computer, type the (a)ll digits test command in the terminal to check the UART connections across the digits. See the video below to verify the segments animate from digit 3 to digit 0. From the command terminal pane, use the (r)elay (0=off,1=on) command by typing r0 (off) then r1 (on) to check the relay functionality. See the video below with the LEDs on the buck converters turning on and off. From the command terminal pane, use the (t)emp(0=C,1=F) command by typing t0 or t1 to display the temperature (respectively) in Celsius or Fahrenheit. You'll need to tip the display up on one side to view the front of the display as shown in the video below. From the command terminal pane, use the (l)uminosity command while shielding the LDR with your hand (or turning off the light in your room). You won't see any command output, only a change in the brightness of the display. If the LED colons are brighter or dimmer than the digit LEDs, adjust the LEDbrightnessFactor setting in the digit_colons.py file. Presently, the LED colons are set to about 1/3rd the power of the digit LEDs. After making changes to the LEDbrightnessFactor , upload the updated file to the controller's Raspberry Pi Pico W 2040. From your Visual Studio Code file explorer pane: Open the secrets.py file and change the usr and pwd to your network SSID and password so the Kinetic Display can connect to your local Wi-Fi network. This step is optional and can be done later. At the bottom of the _main.py file: Comment out the manual() call and uncomment the loop() call. Rename _main.py to main.py . Upload the project to the controller's Raspberry Pi Pico W 2040. Warning Forgetting to upload the renamed main.py file to the controller's Raspberry Pi Pico W 2040 will cause the Kinetic Display to be unresponsive.","title":"Integration Test"},{"location":"assembly/powermanagementpcb/","text":"Power Management PCB Assembly \u00b6 There are several choices of power supplies available in the market. Why not simply use a retail 5V power supply? A few important reasons for building a custom power management system for the display include: Stable Voltage : A drop in voltage occurs in a poor power supply when the heavy-duty 103 electric toy motor starts up because each motor requires a high inrush of current to extend or retract the display's segments. Most retail power supplies cannot provide sufficient current, causing a dramatic voltage drop leading to instability. The power supply setup in this section ensures the components receive a consistent 5V power, preventing malfunctions or damage to the more sensitive electronic components like the microcontrollers and sensors. Current Requirements : The display has colons with two motors and four digits, each with seven independent electric motors. There can be up to five electric motors running simultaneously to extend or contract the segments or colons. Note there are also additional power requirements for lighting the LEDs. The power system you'll build in this section provides sufficient current to power all motors, sensors, and controllers simultaneously. Safety : Protects the system from overvoltage, short circuits, or power surges. Customization : Tailors the power supply to meet the specific needs of the kinetic display's design and components. Efficiency : Reduces energy loss and improves the overall performance of the display. An old-school coil-driven relay is used to shut off power to the digits when in low-power mode and not active. There are other ways to accomplish the same functionality with solid-state relays or a FET. However, the display is kinetic by design, and the use of a coil relay enhances its sound, feel, and aesthetics. Prerequisites \u00b6 Fabrication of the power management PCB . 3D print of the display stand and power management components, powerbank.stl . Table of components Quantity Component Image 2 2 Pin PCB Mount Screw Terminal Block Connector Straight Pin 1 3 Pin PCB Mount Screw Terminal Block Connector Straight Pin 2 4 Pin PCB Mount Screw Terminal Block Connector Straight Pin 1 SONGLE SRS-05VDC-SL 05VDC-SL 4100 Blue 5V 6PIN Power Relay 1 1N4001 Diode, standard, 1A, 50V, DO-41 1 S8050 TO-92 TH PNP Transistor 2 1K ohm 0805 Resistor 1/2w Metal Film Fixed Resistor 1 2.1mm Barrel Jack 5.5x2.1mm Female DC Power Jack 2.1 X 5.5mm DC Jack Connector 6V 9V 12V DC Jack Panel Mount 10M White 28 AWG Gauge Flexible Silicone Rubber Electric Wire 10M Black 28 AWG Gauge Flexible Silicone Rubber Electric Wire 50cm (optional) 28 AWG Gauge heat shrink 4 M1.7x6mm Cross Round Head with Washer Self Tapping Screw 304 Stainless Steel Screws Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Isopropyl Alcohol Yes Cotton Facial Pads No Heat gun Power Management PCB Components \u00b6 In this section, you'll assemble the power management system PCB. Top view of the power management PCB: Bottom view of the power management PCB: Following the picture below on the TOP side of the PCB, solder the 1k\u03a9 0805 surface mount resistor onto R1 . Following the picture below on the TOP side of the PCB, solder the s8050 through-hole transistor into Q1 . Be sure to align the pins according to the silk screen outline. Following the picture below on the TOP side of the PCB, solder the 1N4001 diode into D1 . Be sure to align the anode band with the silk screen outline. Following the picture below on the TOP side of the PCB, solder the 6 pins of the Songle relay into RLY1 . Power Management PCB Block Connectors \u00b6 Top view of the power management PCB with arrows pointing in the direction of the connected wire. Bottom view of the power management PCB with the arrow pointing in the direction of the Barrel Jack Panel Mount wires. Following the picture below on the TOP side of the PCB, hold the PCB so the silk screen C-12V-1 is to your left. Solder the 4 pin terminal block connector into the C-12V-1 through holes so the connection to the wires faces out to the left. Following the picture below on the TOP side of the PCB, hold the PCB so the silk screen C-12V-2 is to your right. Solder the 4 pin terminal block connector into the C-12V-2 through holes so the connection to the wires faces out to the right. Following the picture below on the TOP side of the PCB, hold the PCB so the silk screen CONN-1 is to your left. Solder the 2 pin terminal block connector into the 5v+ 5v- through holes of the CONN-1 silk screen so the connection to the wires faces out to the left. Following the picture below on the TOP side of the PCB, continue to hold the PCB so the silk screen CONN-1 to your left. Solder the 3 pin terminal block connector into the GPIO19 12v+ 12v- through holes of the CONN-1 silk screen so the connection to the wires faces out to the left. Following the picture below on the BOTTOM side of the power management PCB, solder the two pins of the terminal block connector into the through holes marked as 12v(in) . Barrel Jack Panel Mount \u00b6 Cut a black and white 28 AWG wire 4cm in length. Strip about 3mm off the ends of each wire, then tin the stripped ends with a bit of solder. Using a multimeter, locate the positive and negative pins on the barrel jack. In this case, the longer pin is negative. Based on the results from the previous step, solder the white wire onto the positive pin and black onto the negative pin. Add heat shrink to protect exposing the soldered pin locations. Wrap the exposed soldered pin with a piece of electrical tape if you don't have any heat shrink. Secure the heat shrink with a heat gun. Insert the barrel jack into the display stand as shown in the picture below. Note the barrel jack has opposing flat sides that will need to align with the display stand hole. Add the jack nut onto the backside of the barrel jack. Tighten with a wrench so the nut is snug. Don't over tighten as you may damage the stand. Position the bottom side of the power management PCB so the 2 pin terminal block connector is facing toward the mounted barrel jack. Insert and tighten the white wire to the positive (+) terminal and the black wire to the negative (-) terminal. Use two M1.7x6mm self tapping screws to tack the PCB down as later you'll need to remove the PCB to route the wiring. Plug the 12v power supply into the barrel jack. Verify the 12v + and - voltage by placing the probes from a multimeter onto the + and - terminals found on the 4 pin connectors titled C-12V-1 and C-12V-2 . Warning Verifying the 12v + and - voltage with a multimeter is an important step to ensure the correctness of your connections. If you discover the + and - are reversed, then change the connections from the barrel jack and re-verify using your multimeter. Schematic \u00b6 The power management PCB is designed to provide stable and sufficient power to the kinetic display's motors, LEDs, and sensors. It incorporates protection mechanisms (diode, relay), current regulation (resistor, transistor), and secure connections (terminal blocks, barrel jack). The power management schematic with the buck converter modules ensure the system operates efficiently and safely under varying load conditions. Key Components \u00b6 1k\u03a9 Resistor (R1) : Used to limit current flow to the base of the transistor. S8050 PNP Transistor (Q1) : Acts as a switch used to control the relay. 1N4001 Diode (D1) : Protects the circuit from reverse polarity or voltage spikes due to the coils in the relay. Songle Relay (RLY1) : A mechanical switch controlled by an electrical signal. It is used to switch high-current loads (e.g., motors) on and off safely. PCB Mount Screw Terminal Blocks : Provide secure connections for external wires to the PCB. These are used for power input and output connections. Barrel Jack Connector : Used to connect the external 12V power supply to the PCB. Circuitry Explanation \u00b6 Power Input . The 12V power supply is connected to the barrel jack. The positive and negative terminals are routed to the PCB through the terminal block connectors. C-12v-1 and C-12v-2 . Terminal block connector through holes that route the incoming 12v to the assigned buck converter module. When the relay is switched off, the 12v power is cut to the buck converter modules. Relay Control . The relay (RLY1) is controlled by the transistor (Q1). When the transistor is activated by the Raspberry Pi Pico W 2040 GPIO19 pin, it allows current to flow through the relay coil, switching the relay and enabling power to the connected load. Voltage Regulation . The circuit routing 12v to the buck converter modules ensures stable 5V output for sensitive components like the micro controllers and sensors. This is critical to prevent malfunctions caused by voltage drops during high-current motor operations. Protection . The diode (D1) protects the circuit from voltage spikes generated by the relay coil when it is de-energized. This prevents damage to other components. Current Distribution . The terminal blocks distribute power to various parts of the display, including the microcontrollers, motors, LEDs, and sensors. The 4-pin connectors ( C-12V-1 and C-12V-2 ) handle the 12V power.","title":"Power Management PCB"},{"location":"assembly/powermanagementpcb/#power_management_pcb_assembly","text":"There are several choices of power supplies available in the market. Why not simply use a retail 5V power supply? A few important reasons for building a custom power management system for the display include: Stable Voltage : A drop in voltage occurs in a poor power supply when the heavy-duty 103 electric toy motor starts up because each motor requires a high inrush of current to extend or retract the display's segments. Most retail power supplies cannot provide sufficient current, causing a dramatic voltage drop leading to instability. The power supply setup in this section ensures the components receive a consistent 5V power, preventing malfunctions or damage to the more sensitive electronic components like the microcontrollers and sensors. Current Requirements : The display has colons with two motors and four digits, each with seven independent electric motors. There can be up to five electric motors running simultaneously to extend or contract the segments or colons. Note there are also additional power requirements for lighting the LEDs. The power system you'll build in this section provides sufficient current to power all motors, sensors, and controllers simultaneously. Safety : Protects the system from overvoltage, short circuits, or power surges. Customization : Tailors the power supply to meet the specific needs of the kinetic display's design and components. Efficiency : Reduces energy loss and improves the overall performance of the display. An old-school coil-driven relay is used to shut off power to the digits when in low-power mode and not active. There are other ways to accomplish the same functionality with solid-state relays or a FET. However, the display is kinetic by design, and the use of a coil relay enhances its sound, feel, and aesthetics.","title":"Power Management PCB Assembly"},{"location":"assembly/powermanagementpcb/#prerequisites","text":"Fabrication of the power management PCB . 3D print of the display stand and power management components, powerbank.stl . Table of components Quantity Component Image 2 2 Pin PCB Mount Screw Terminal Block Connector Straight Pin 1 3 Pin PCB Mount Screw Terminal Block Connector Straight Pin 2 4 Pin PCB Mount Screw Terminal Block Connector Straight Pin 1 SONGLE SRS-05VDC-SL 05VDC-SL 4100 Blue 5V 6PIN Power Relay 1 1N4001 Diode, standard, 1A, 50V, DO-41 1 S8050 TO-92 TH PNP Transistor 2 1K ohm 0805 Resistor 1/2w Metal Film Fixed Resistor 1 2.1mm Barrel Jack 5.5x2.1mm Female DC Power Jack 2.1 X 5.5mm DC Jack Connector 6V 9V 12V DC Jack Panel Mount 10M White 28 AWG Gauge Flexible Silicone Rubber Electric Wire 10M Black 28 AWG Gauge Flexible Silicone Rubber Electric Wire 50cm (optional) 28 AWG Gauge heat shrink 4 M1.7x6mm Cross Round Head with Washer Self Tapping Screw 304 Stainless Steel Screws Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Isopropyl Alcohol Yes Cotton Facial Pads No Heat gun","title":"Prerequisites"},{"location":"assembly/powermanagementpcb/#power_management_pcb_components","text":"In this section, you'll assemble the power management system PCB. Top view of the power management PCB: Bottom view of the power management PCB: Following the picture below on the TOP side of the PCB, solder the 1k\u03a9 0805 surface mount resistor onto R1 . Following the picture below on the TOP side of the PCB, solder the s8050 through-hole transistor into Q1 . Be sure to align the pins according to the silk screen outline. Following the picture below on the TOP side of the PCB, solder the 1N4001 diode into D1 . Be sure to align the anode band with the silk screen outline. Following the picture below on the TOP side of the PCB, solder the 6 pins of the Songle relay into RLY1 .","title":"Power Management PCB Components"},{"location":"assembly/powermanagementpcb/#power_management_pcb_block_connectors","text":"Top view of the power management PCB with arrows pointing in the direction of the connected wire. Bottom view of the power management PCB with the arrow pointing in the direction of the Barrel Jack Panel Mount wires. Following the picture below on the TOP side of the PCB, hold the PCB so the silk screen C-12V-1 is to your left. Solder the 4 pin terminal block connector into the C-12V-1 through holes so the connection to the wires faces out to the left. Following the picture below on the TOP side of the PCB, hold the PCB so the silk screen C-12V-2 is to your right. Solder the 4 pin terminal block connector into the C-12V-2 through holes so the connection to the wires faces out to the right. Following the picture below on the TOP side of the PCB, hold the PCB so the silk screen CONN-1 is to your left. Solder the 2 pin terminal block connector into the 5v+ 5v- through holes of the CONN-1 silk screen so the connection to the wires faces out to the left. Following the picture below on the TOP side of the PCB, continue to hold the PCB so the silk screen CONN-1 to your left. Solder the 3 pin terminal block connector into the GPIO19 12v+ 12v- through holes of the CONN-1 silk screen so the connection to the wires faces out to the left. Following the picture below on the BOTTOM side of the power management PCB, solder the two pins of the terminal block connector into the through holes marked as 12v(in) .","title":"Power Management PCB Block Connectors"},{"location":"assembly/powermanagementpcb/#barrel_jack_panel_mount","text":"Cut a black and white 28 AWG wire 4cm in length. Strip about 3mm off the ends of each wire, then tin the stripped ends with a bit of solder. Using a multimeter, locate the positive and negative pins on the barrel jack. In this case, the longer pin is negative. Based on the results from the previous step, solder the white wire onto the positive pin and black onto the negative pin. Add heat shrink to protect exposing the soldered pin locations. Wrap the exposed soldered pin with a piece of electrical tape if you don't have any heat shrink. Secure the heat shrink with a heat gun. Insert the barrel jack into the display stand as shown in the picture below. Note the barrel jack has opposing flat sides that will need to align with the display stand hole. Add the jack nut onto the backside of the barrel jack. Tighten with a wrench so the nut is snug. Don't over tighten as you may damage the stand. Position the bottom side of the power management PCB so the 2 pin terminal block connector is facing toward the mounted barrel jack. Insert and tighten the white wire to the positive (+) terminal and the black wire to the negative (-) terminal. Use two M1.7x6mm self tapping screws to tack the PCB down as later you'll need to remove the PCB to route the wiring. Plug the 12v power supply into the barrel jack. Verify the 12v + and - voltage by placing the probes from a multimeter onto the + and - terminals found on the 4 pin connectors titled C-12V-1 and C-12V-2 . Warning Verifying the 12v + and - voltage with a multimeter is an important step to ensure the correctness of your connections. If you discover the + and - are reversed, then change the connections from the barrel jack and re-verify using your multimeter.","title":"Barrel Jack Panel Mount"},{"location":"assembly/powermanagementpcb/#schematic","text":"The power management PCB is designed to provide stable and sufficient power to the kinetic display's motors, LEDs, and sensors. It incorporates protection mechanisms (diode, relay), current regulation (resistor, transistor), and secure connections (terminal blocks, barrel jack). The power management schematic with the buck converter modules ensure the system operates efficiently and safely under varying load conditions.","title":"Schematic"},{"location":"assembly/powermanagementpcb/#key_components","text":"1k\u03a9 Resistor (R1) : Used to limit current flow to the base of the transistor. S8050 PNP Transistor (Q1) : Acts as a switch used to control the relay. 1N4001 Diode (D1) : Protects the circuit from reverse polarity or voltage spikes due to the coils in the relay. Songle Relay (RLY1) : A mechanical switch controlled by an electrical signal. It is used to switch high-current loads (e.g., motors) on and off safely. PCB Mount Screw Terminal Blocks : Provide secure connections for external wires to the PCB. These are used for power input and output connections. Barrel Jack Connector : Used to connect the external 12V power supply to the PCB.","title":"Key Components"},{"location":"assembly/powermanagementpcb/#circuitry_explanation","text":"Power Input . The 12V power supply is connected to the barrel jack. The positive and negative terminals are routed to the PCB through the terminal block connectors. C-12v-1 and C-12v-2 . Terminal block connector through holes that route the incoming 12v to the assigned buck converter module. When the relay is switched off, the 12v power is cut to the buck converter modules. Relay Control . The relay (RLY1) is controlled by the transistor (Q1). When the transistor is activated by the Raspberry Pi Pico W 2040 GPIO19 pin, it allows current to flow through the relay coil, switching the relay and enabling power to the connected load. Voltage Regulation . The circuit routing 12v to the buck converter modules ensures stable 5V output for sensitive components like the micro controllers and sensors. This is critical to prevent malfunctions caused by voltage drops during high-current motor operations. Protection . The diode (D1) protects the circuit from voltage spikes generated by the relay coil when it is de-energized. This prevents damage to other components. Current Distribution . The terminal blocks distribute power to various parts of the display, including the microcontrollers, motors, LEDs, and sensors. The 4-pin connectors ( C-12V-1 and C-12V-2 ) handle the 12V power.","title":"Circuitry Explanation"},{"location":"assembly/powermanagementpcbtest/","text":"Power Management PCB Test \u00b6 Run the tests in this section after assembling the power management PCB. Any defective electronic component on the power management PCB will need to be replaced before completing the project. Prerequisites \u00b6 Completed the controller and digit 1 PCB assembly . Completed power management PCB . Computer and microcontroller with the prerequisite software . 3 male-male jumpers (or wires with the ends stripped and tinned with solder). Test Relay \u00b6 Following the picture below on the BACK of the controller and digit 1 PCB: (A) Using a pair of jumper wires, connect the positive (+) and negative (-) ports of the terminal block connector 5v-OUT to the (B) positive (+) and negative (-) ports on the corresponding terminal block connector marked CONN-1 on the power management PCB. Using a single jumper wire: (A) Connect the GPIO19 port of the terminal block connector in CONN-1 on the power management PCB to (B) the GPIO19 port of the terminal block connector on the FRONT face of the controller and digit 1 PCB. Following the picture below, connect a USB cable from your computer to the Raspberry Pi Pico W on the BACK of the controller and digit 1 PCB. From your computer, open a terminal session using Visual Studio Code: Select MicroPico vREPL from the terminal dropdown menu. Once connected, type (or copy/paste each line) the following code into the terminal window: from machine import Pin p = Pin(19, Pin.OUT) p.on() Once you hear the relay click to connect the circuit, type the following code into the terminal window: p.off() Below is a screenshot of the terminal session:","title":"Power Management PCB Test"},{"location":"assembly/powermanagementpcbtest/#power_management_pcb_test","text":"Run the tests in this section after assembling the power management PCB. Any defective electronic component on the power management PCB will need to be replaced before completing the project.","title":"Power Management PCB Test"},{"location":"assembly/powermanagementpcbtest/#prerequisites","text":"Completed the controller and digit 1 PCB assembly . Completed power management PCB . Computer and microcontroller with the prerequisite software . 3 male-male jumpers (or wires with the ends stripped and tinned with solder).","title":"Prerequisites"},{"location":"assembly/powermanagementpcbtest/#test_relay","text":"Following the picture below on the BACK of the controller and digit 1 PCB: (A) Using a pair of jumper wires, connect the positive (+) and negative (-) ports of the terminal block connector 5v-OUT to the (B) positive (+) and negative (-) ports on the corresponding terminal block connector marked CONN-1 on the power management PCB. Using a single jumper wire: (A) Connect the GPIO19 port of the terminal block connector in CONN-1 on the power management PCB to (B) the GPIO19 port of the terminal block connector on the FRONT face of the controller and digit 1 PCB. Following the picture below, connect a USB cable from your computer to the Raspberry Pi Pico W on the BACK of the controller and digit 1 PCB. From your computer, open a terminal session using Visual Studio Code: Select MicroPico vREPL from the terminal dropdown menu. Once connected, type (or copy/paste each line) the following code into the terminal window: from machine import Pin p = Pin(19, Pin.OUT) p.on() Once you hear the relay click to connect the circuit, type the following code into the terminal window: p.off() Below is a screenshot of the terminal session:","title":"Test Relay"},{"location":"assembly/segmentassembly/","text":"Segment Assembly and Installation \u00b6 The digit segments and colons give the display its distinctive design. Each hollow segment lights up when extended and turns off when retracted, creating a satisfying clacking sound with every movement. Like a traditional seven-segment display, the segments are tilted at a 5-degree angle for a sleek appearance. Ref File A seg-a.stl through seg-g.stl and colon-seg.stl B rack-gear.stl C seg-pin.stl D rackgear-bumper.stl E rackgear-bumper-gasket.stl Assemble and Install Segments \u00b6 This section guides you through assembling and installing all segments on the display. The image below shows the 3D-printed parts required for segment assembly. Insert the Rack Gear . Slide the end of the rack gear with the smallest rectangular hole into the segment sleeve, as shown below. Secure the Rack Gear . Use needlenose pliers to hold the segment pin. Insert the pin through the small rectangular hole in the segment sleeve and rack gear to secure it, as shown below. Install the Segment . Place the segment into its designated location on the display. Ensure the segment slides easily into its bay. If it does not, do not force it into place . Try a different location for the segment. Repeat for All Segments . Follow the above steps to install all digit and colon segments. Assemble and Install the Rackgear Bumpers \u00b6 Attach the Gasket . Push the rackgear bumper gasket into the square hole on the face of the rackgear bumper, as shown below. Position the Bumper . Slide the front peg of the rackgear bumper into the rectangular hole on the rackgear opposite the pinion gear . Installing it on the same side as the pinion gear will cause the actuator to jam when extended. Secure the Tail End . Use needlenose pliers to gently push the tail end of the rackgear bumper into the rectangular hole, as shown below. Repeat for All Bumpers . Follow the above steps to install all rackgear bumpers.","title":"Segment Assembly and Installation"},{"location":"assembly/segmentassembly/#segment_assembly_and_installation","text":"The digit segments and colons give the display its distinctive design. Each hollow segment lights up when extended and turns off when retracted, creating a satisfying clacking sound with every movement. Like a traditional seven-segment display, the segments are tilted at a 5-degree angle for a sleek appearance. Ref File A seg-a.stl through seg-g.stl and colon-seg.stl B rack-gear.stl C seg-pin.stl D rackgear-bumper.stl E rackgear-bumper-gasket.stl","title":"Segment Assembly and Installation"},{"location":"assembly/segmentassembly/#assemble_and_install_segments","text":"This section guides you through assembling and installing all segments on the display. The image below shows the 3D-printed parts required for segment assembly. Insert the Rack Gear . Slide the end of the rack gear with the smallest rectangular hole into the segment sleeve, as shown below. Secure the Rack Gear . Use needlenose pliers to hold the segment pin. Insert the pin through the small rectangular hole in the segment sleeve and rack gear to secure it, as shown below. Install the Segment . Place the segment into its designated location on the display. Ensure the segment slides easily into its bay. If it does not, do not force it into place . Try a different location for the segment. Repeat for All Segments . Follow the above steps to install all digit and colon segments.","title":"Assemble and Install Segments"},{"location":"assembly/segmentassembly/#assemble_and_install_the_rackgear_bumpers","text":"Attach the Gasket . Push the rackgear bumper gasket into the square hole on the face of the rackgear bumper, as shown below. Position the Bumper . Slide the front peg of the rackgear bumper into the rectangular hole on the rackgear opposite the pinion gear . Installing it on the same side as the pinion gear will cause the actuator to jam when extended. Secure the Tail End . Use needlenose pliers to gently push the tail end of the rackgear bumper into the rectangular hole, as shown below. Repeat for All Bumpers . Follow the above steps to install all rackgear bumpers.","title":"Assemble and Install the Rackgear Bumpers"},{"location":"assembly/uartandrelaywiring/","text":"UART and Relay Wiring \u00b6 UART (Universal Asynchronous Receiver-Transmitter) facilitates communication between the conductor and the digit PCBs. The conductor acts as the central hub, transmitting commands and receiving status updates from the digits. Conductor (Transmitter and Receiver) : The conductor's UART Tx (transmit) pin sends data to the digits, such as display commands and brightness levels. The conductor's UART Rx (receive) pin listens for acknowledgment or status updates from the digits. Digits (Receivers and Transmitters) : Each digit PCB's UART Rx pin receives commands from the conductor. The digit PCBs' UART Tx pins send status updates or responses back to the conductor. This bidirectional communication ensures synchronized operation of the display, enabling the conductor to manage all digits effectively. UART Wiring \u00b6 The UART wiring diagram illustrates the communication connections between the conductor and the digit PCBs. It shows how the UART Tx (transmit) and Rx (receive) pins are connected using the two UART channels 0 and 1. The conductor's channel 1 Tx pin is connected to the channel 1 Rx pin on the digit 2 PCB. The conductor PCB has tracing that connects the conductor's channel 0 Tx pin to channel 0 Rx pin on digit 1. The conductor's channel 1 Rx pin is connected to the channel 1 Tx pin of the digit 2 PCB. The conductor PCB has tracing that connects the conductor's channel 0 Rx pin to channel 0 Tx pin on digit 1. Digit 2 and 3 PCBs' Tx pins are connected, and Digit 0 PCB and Digit 1 on the conductor PCB's Tx pin are connected. The same is true for the Rx pins for Digits 0-3. Note: The wire color references in the section below are yellow and blue, which can be substituted with white and black. Follow the picture below for Digit 0 and 1 UART wiring. On Digit 0 PCB: (A) Connect the yellow (white) wire to the Rx-0 and the blue (black) wire to the Tx-0 terminal block connector. Route the wires to the Digit 1 Rx-0 and Tx-0 terminal block connectors, leaving about 10mm of extra length, then cut. (B) Slide the heat shrink over the wires and position them according to the picture. On Digit 1 PCB, (C) connect the yellow (white) wire to the Rx-0 and the blue (black) wire to the Tx-0 terminal block connector. Follow the picture below for Digit 2 and 3 UART wiring. On Digit 2 PCB: (A) Connect the yellow (white) wire to the Rx-1 and the blue (black) wire to the Tx-1 terminal block connector. Route the wires to the Digit 3 Rx-1 and Tx-1 terminal block connectors, leaving about 10mm of extra length, then cut. (B) Slide the heat shrink over the wires and position them according to the picture. On Digit 3 PCB, (C) connect the yellow (white) wire to the Rx-1 and the blue (black) wire to the Tx-1 terminal block connector. Follow the picture below for the conductor to Digit 2 UART wiring. On the conductor PCB: (A) Connect the yellow (white) wire to the Rx-1 and the blue (black) wire to the Tx-1 terminal block connector. Route the wires to the Digit 2 Rx-1 and Tx-1 terminal block connectors, leaving about 10mm of extra length, then cut. On Digit 3 PCB, (C) connect the yellow (white) wire to the Tx-1 and the blue (black) wire to the Rx-1 terminal block connector. Relay Wiring \u00b6 Follow the picture below starting from the back side of the conductor PCB: Using any color 28 AWG wire, connect the (A) terminal block connector pin GPIO19 from the conductor PCB to the (B) terminal block connector pin GPIO19 on the power management PCB. Following the picture below, turn the conductor PCB over so the front face is up: (A) Strip 3mm of insulation, then tin the stripped end with solder. Connect the white wire to the + on the 5v-OUT terminal block connector and the black wire onto the - . (B) Route the white wire to the 5v + and the black wire to the 5v - on the power management PCB, then cut the wires with at least 2cm of slack. Strip 3mm of insulation, tin the stripped end with solder, then connect each wire to the appropriate terminal block connector. Following the picture below: Position the heat shrink and apply heat with a heat gun. Add the two remaining M1.7x6mm self-tapping screws to the power management PCB. Ensure all 4 screws securing the power management PCB are snug, but do not overtighten.","title":"UART and Relay Wiring"},{"location":"assembly/uartandrelaywiring/#uart_and_relay_wiring","text":"UART (Universal Asynchronous Receiver-Transmitter) facilitates communication between the conductor and the digit PCBs. The conductor acts as the central hub, transmitting commands and receiving status updates from the digits. Conductor (Transmitter and Receiver) : The conductor's UART Tx (transmit) pin sends data to the digits, such as display commands and brightness levels. The conductor's UART Rx (receive) pin listens for acknowledgment or status updates from the digits. Digits (Receivers and Transmitters) : Each digit PCB's UART Rx pin receives commands from the conductor. The digit PCBs' UART Tx pins send status updates or responses back to the conductor. This bidirectional communication ensures synchronized operation of the display, enabling the conductor to manage all digits effectively.","title":"UART and Relay Wiring"},{"location":"assembly/uartandrelaywiring/#uart_wiring","text":"The UART wiring diagram illustrates the communication connections between the conductor and the digit PCBs. It shows how the UART Tx (transmit) and Rx (receive) pins are connected using the two UART channels 0 and 1. The conductor's channel 1 Tx pin is connected to the channel 1 Rx pin on the digit 2 PCB. The conductor PCB has tracing that connects the conductor's channel 0 Tx pin to channel 0 Rx pin on digit 1. The conductor's channel 1 Rx pin is connected to the channel 1 Tx pin of the digit 2 PCB. The conductor PCB has tracing that connects the conductor's channel 0 Rx pin to channel 0 Tx pin on digit 1. Digit 2 and 3 PCBs' Tx pins are connected, and Digit 0 PCB and Digit 1 on the conductor PCB's Tx pin are connected. The same is true for the Rx pins for Digits 0-3. Note: The wire color references in the section below are yellow and blue, which can be substituted with white and black. Follow the picture below for Digit 0 and 1 UART wiring. On Digit 0 PCB: (A) Connect the yellow (white) wire to the Rx-0 and the blue (black) wire to the Tx-0 terminal block connector. Route the wires to the Digit 1 Rx-0 and Tx-0 terminal block connectors, leaving about 10mm of extra length, then cut. (B) Slide the heat shrink over the wires and position them according to the picture. On Digit 1 PCB, (C) connect the yellow (white) wire to the Rx-0 and the blue (black) wire to the Tx-0 terminal block connector. Follow the picture below for Digit 2 and 3 UART wiring. On Digit 2 PCB: (A) Connect the yellow (white) wire to the Rx-1 and the blue (black) wire to the Tx-1 terminal block connector. Route the wires to the Digit 3 Rx-1 and Tx-1 terminal block connectors, leaving about 10mm of extra length, then cut. (B) Slide the heat shrink over the wires and position them according to the picture. On Digit 3 PCB, (C) connect the yellow (white) wire to the Rx-1 and the blue (black) wire to the Tx-1 terminal block connector. Follow the picture below for the conductor to Digit 2 UART wiring. On the conductor PCB: (A) Connect the yellow (white) wire to the Rx-1 and the blue (black) wire to the Tx-1 terminal block connector. Route the wires to the Digit 2 Rx-1 and Tx-1 terminal block connectors, leaving about 10mm of extra length, then cut. On Digit 3 PCB, (C) connect the yellow (white) wire to the Tx-1 and the blue (black) wire to the Rx-1 terminal block connector.","title":"UART Wiring"},{"location":"assembly/uartandrelaywiring/#relay_wiring","text":"Follow the picture below starting from the back side of the conductor PCB: Using any color 28 AWG wire, connect the (A) terminal block connector pin GPIO19 from the conductor PCB to the (B) terminal block connector pin GPIO19 on the power management PCB. Following the picture below, turn the conductor PCB over so the front face is up: (A) Strip 3mm of insulation, then tin the stripped end with solder. Connect the white wire to the + on the 5v-OUT terminal block connector and the black wire onto the - . (B) Route the white wire to the 5v + and the black wire to the 5v - on the power management PCB, then cut the wires with at least 2cm of slack. Strip 3mm of insulation, tin the stripped end with solder, then connect each wire to the appropriate terminal block connector. Following the picture below: Position the heat shrink and apply heat with a heat gun. Add the two remaining M1.7x6mm self-tapping screws to the power management PCB. Ensure all 4 screws securing the power management PCB are snug, but do not overtighten.","title":"Relay Wiring"},{"location":"createandorder/3dprints/","text":"3D Print the Display Parts \u00b6 Filament Quantity \u00b6 Below is a table of quantities of filament by weight. Since a roll of filament is generally 1000g (sometimes a bit less), you'll need two rolls of White Matte PLA. Type Weight (g) Black Nylon 77.1g Black Matte PLA 272.42g White Matte PLA 1535.44g Black TPU 115.15g 1. Black Nylon, Smooth Build Plate \u00b6 For Orca and Bambu Studio slicers, see fdm\\3mf\\nylon-smooth-black.3mf . File Description Density Quantity Per Unit (g) Total (g) digit-gear30.stl Pinion gear for digits and colons 100% 30 1.1 33.0 rack-gear.stl The arm of the actuator that extends and retracts the segment 25% 30 1.47 44.1 2. Black Matte PLA, Smooth Build Plate \u00b6 For Orca and Bambu Studio slicers, see fdm\\3mf\\pla-smooth-black.3mf . File Description Density Quantity Per Unit (g) Total (g) digit-back-plate.stl Back plates for digits 0 and 3 for mounting the actuators 50% 3 47.43 142.29 digit-gear10.stl Motor shaft gear mounted onto the heavy-duty 103 motors 100% 30 0.5 15 digit1-back-plate.stl Conductor and digit 1 back plate for mounting the actuators 50% 1 67.7 67.7 digit2-back-plate.stl Back plate for digit 2 for mounting the actuators and powerbank/display stand 50% 1 47.43 47.43 3. White Matte PLA, Smooth Build Plate \u00b6 For Orca and Bambu Studio slicers, see fdm\\3mf\\pla-smooth-white.3mf . File Description Density Quantity Per Unit (g) Total (g) digit-motor-mount.stl Motor mount for digits and colons 100% 30 12.77 383.1 powerbank-cover.stl Cover for buck converters and powerbank PCB 100% 1 65.53 65.53 powerbank.stl Kinetic display stand, buck converter mounts, and powerbank PCB mount 100% 1 146.75 146.75 rackgear-bumper.stl Stops the segment or colon at the precise distance when extended 100% 30 0.61 18.3 seg-pin.stl Pin to hold the rack gear onto the segment and colons 100% 30 0.4 12 4. White Matte PLA, Textured Build Plate \u00b6 For Orca and Bambu Studio slicers, see fdm\\3mf\\pla-textured-white.3mf . File Description Density Quantity Per Unit (g) Total (g) colon-seg.stl Colon, upper and lower 100% 2 1.88 3.76 digit0-1-face.stl Kinetic display face, right side (when facing the front, textured surface side) 70% 1 395 395 digit2-3-face.stl Kinetic display face, left side (when facing the front, textured surface side) 70% 1 399 399 seg-a.stl Digit 7-segment A 100% 4 4 16 seg-b.stl Digit 7-segment B 100% 4 4 16 seg-c.stl Digit 7-segment C 100% 4 4 16 seg-d.stl Digit 7-segment D 100% 4 4 16 seg-e.stl Digit 7-segment E 100% 4 4 16 seg-f.stl Digit 7-segment F 100% 4 4 16 seg-g.stl Digit 7-segment G 100% 4 4 16 5. Black TPU, Smooth Build Plate \u00b6 For Orca and Bambu Studio slicers, see fdm\\3mf\\tpu-smooth-black.3mf . File Description Density Quantity Per Unit (g) Total (g) digit-gasket.stl Gaskets for digits 0 and 3 to cushion the PCB during segment retractions 15% 3 17.86 53.58 digit1-gasket.stl Gasket for the conductor and digit 1 to cushion the PCB during segment retractions 15% 1 31.71 31.71 digit2-gasket.stl Gasket for digit 2 to cushion the PCB during segment retractions 15% 1 17.86 17.86 rackgear-bumper-gasket.stl Provides some cushion for the rack gear when extended 100% 30 0.4 12 Guidelines \u00b6 Below are a few guidelines to keep in mind when printing and assembling the display: Read the assembly guides : Read all the assembly guides in this documentation before printing to ensure you have a clear understanding of the fabrication type, quality, positioning, and assembly. Use the provided 3MF and STL files : The 3MF project files are included under the ./fdm/3mf directory for Bambu Studio or Orca Slicer users. All necessary settings are included at an object level, not on a global level. STL files are included under the ./fdm/stl directory. Consistent filament usage : The display face uses over 2/3rds of a 1 KG roll of filament. Use the same roll of filament when printing both halves of the display face, segments, and colons. Ensure you have two 1 KG rolls of white filament from the same batch to avoid inconsistencies in print color. Dry your filament : Thoroughly dry your filament before use, especially nylon and flexible filament types. Wet filament can cause stringy prints and result in inexact gear teeth or hole sizes. Adhesion to the print bed : Apply an adhesive to the printer plate bed to prevent warping of edges and corners. For example, all-weather Aqua Net super hold hairspray provides an even coating of adhesive across the bed plate and results in clean corners and edges. Organize printed parts : Use painter's tape to keep the pieces organized. See the picture below for an example. Note that segments A-G (left to right) are preserved the moment the bed plate is removed from the 3D printer. Ironing is optional : Do not worry if your 3D printer and slicer cannot iron the top surfaces. Ironing is for fit and finish and will not affect the functionality of the display.","title":"Print Parts"},{"location":"createandorder/3dprints/#3d_print_the_display_parts","text":"","title":"3D Print the Display Parts"},{"location":"createandorder/3dprints/#filament_quantity","text":"Below is a table of quantities of filament by weight. Since a roll of filament is generally 1000g (sometimes a bit less), you'll need two rolls of White Matte PLA. Type Weight (g) Black Nylon 77.1g Black Matte PLA 272.42g White Matte PLA 1535.44g Black TPU 115.15g","title":"Filament Quantity"},{"location":"createandorder/3dprints/#1_black_nylon_smooth_build_plate","text":"For Orca and Bambu Studio slicers, see fdm\\3mf\\nylon-smooth-black.3mf . File Description Density Quantity Per Unit (g) Total (g) digit-gear30.stl Pinion gear for digits and colons 100% 30 1.1 33.0 rack-gear.stl The arm of the actuator that extends and retracts the segment 25% 30 1.47 44.1","title":"1. Black Nylon, Smooth Build Plate"},{"location":"createandorder/3dprints/#2_black_matte_pla_smooth_build_plate","text":"For Orca and Bambu Studio slicers, see fdm\\3mf\\pla-smooth-black.3mf . File Description Density Quantity Per Unit (g) Total (g) digit-back-plate.stl Back plates for digits 0 and 3 for mounting the actuators 50% 3 47.43 142.29 digit-gear10.stl Motor shaft gear mounted onto the heavy-duty 103 motors 100% 30 0.5 15 digit1-back-plate.stl Conductor and digit 1 back plate for mounting the actuators 50% 1 67.7 67.7 digit2-back-plate.stl Back plate for digit 2 for mounting the actuators and powerbank/display stand 50% 1 47.43 47.43","title":"2. Black Matte PLA, Smooth Build Plate"},{"location":"createandorder/3dprints/#3_white_matte_pla_smooth_build_plate","text":"For Orca and Bambu Studio slicers, see fdm\\3mf\\pla-smooth-white.3mf . File Description Density Quantity Per Unit (g) Total (g) digit-motor-mount.stl Motor mount for digits and colons 100% 30 12.77 383.1 powerbank-cover.stl Cover for buck converters and powerbank PCB 100% 1 65.53 65.53 powerbank.stl Kinetic display stand, buck converter mounts, and powerbank PCB mount 100% 1 146.75 146.75 rackgear-bumper.stl Stops the segment or colon at the precise distance when extended 100% 30 0.61 18.3 seg-pin.stl Pin to hold the rack gear onto the segment and colons 100% 30 0.4 12","title":"3. White Matte PLA, Smooth Build Plate"},{"location":"createandorder/3dprints/#4_white_matte_pla_textured_build_plate","text":"For Orca and Bambu Studio slicers, see fdm\\3mf\\pla-textured-white.3mf . File Description Density Quantity Per Unit (g) Total (g) colon-seg.stl Colon, upper and lower 100% 2 1.88 3.76 digit0-1-face.stl Kinetic display face, right side (when facing the front, textured surface side) 70% 1 395 395 digit2-3-face.stl Kinetic display face, left side (when facing the front, textured surface side) 70% 1 399 399 seg-a.stl Digit 7-segment A 100% 4 4 16 seg-b.stl Digit 7-segment B 100% 4 4 16 seg-c.stl Digit 7-segment C 100% 4 4 16 seg-d.stl Digit 7-segment D 100% 4 4 16 seg-e.stl Digit 7-segment E 100% 4 4 16 seg-f.stl Digit 7-segment F 100% 4 4 16 seg-g.stl Digit 7-segment G 100% 4 4 16","title":"4. White Matte PLA, Textured Build Plate"},{"location":"createandorder/3dprints/#5_black_tpu_smooth_build_plate","text":"For Orca and Bambu Studio slicers, see fdm\\3mf\\tpu-smooth-black.3mf . File Description Density Quantity Per Unit (g) Total (g) digit-gasket.stl Gaskets for digits 0 and 3 to cushion the PCB during segment retractions 15% 3 17.86 53.58 digit1-gasket.stl Gasket for the conductor and digit 1 to cushion the PCB during segment retractions 15% 1 31.71 31.71 digit2-gasket.stl Gasket for digit 2 to cushion the PCB during segment retractions 15% 1 17.86 17.86 rackgear-bumper-gasket.stl Provides some cushion for the rack gear when extended 100% 30 0.4 12","title":"5. Black TPU, Smooth Build Plate"},{"location":"createandorder/3dprints/#guidelines","text":"Below are a few guidelines to keep in mind when printing and assembling the display: Read the assembly guides : Read all the assembly guides in this documentation before printing to ensure you have a clear understanding of the fabrication type, quality, positioning, and assembly. Use the provided 3MF and STL files : The 3MF project files are included under the ./fdm/3mf directory for Bambu Studio or Orca Slicer users. All necessary settings are included at an object level, not on a global level. STL files are included under the ./fdm/stl directory. Consistent filament usage : The display face uses over 2/3rds of a 1 KG roll of filament. Use the same roll of filament when printing both halves of the display face, segments, and colons. Ensure you have two 1 KG rolls of white filament from the same batch to avoid inconsistencies in print color. Dry your filament : Thoroughly dry your filament before use, especially nylon and flexible filament types. Wet filament can cause stringy prints and result in inexact gear teeth or hole sizes. Adhesion to the print bed : Apply an adhesive to the printer plate bed to prevent warping of edges and corners. For example, all-weather Aqua Net super hold hairspray provides an even coating of adhesive across the bed plate and results in clean corners and edges. Organize printed parts : Use painter's tape to keep the pieces organized. See the picture below for an example. Note that segments A-G (left to right) are preserved the moment the bed plate is removed from the 3D printer. Ironing is optional : Do not worry if your 3D printer and slicer cannot iron the top surfaces. Ironing is for fit and finish and will not affect the functionality of the display.","title":"Guidelines"},{"location":"createandorder/bom/","text":"Bill of Materials \u00b6 Item Quantity Single digit PCB for digits 0, 2, & 3 3 Conductor PCB for digit 1 and the colons 1 Powerbank PCB 1 A4 Size Felt Sheets with Adhesive Backing 1 2 Inch Jumbo Paper Clips (Smooth Big Paperclips) 20 M1.7 x 6mm Stainless Steel Phillips Round Head Self Tapping Screws 200 M1.7 x 8mm Stainless Steel Phillips Round Head Self Tapping Screws 200 M2 X 15mm Stainless Steel Phillips Round Head Self Tapping Screws 50 Micro 130 DC Motor Strong Magnetic Brushed Electric DC 3V -12V 25000 RPM Cars Toys Electric Motor, High Speed Torque 30 Black 28 AWG Gauge Flexible Silicone Rubber Electric Wire 10M White 28 AWG Gauge Flexible Silicone Rubber Electric Wire 10M Male Breakout Pin Connector 2.54mm 100 2.54mm 0.1\" Pitch PCB Mount Screw Terminal Block Connector, 2P 3P 4P Terminals for 26-18AWG Cable 50 Dupont Jumper Wire Cable Female Pin Connector 2.54mm 100 2.54mm 1x2p Dupont Connector Housing Female for Dupont Cable and Jumper Wire 100 Digital Temperature and Humidity Sensor DHT22 Module, 3 pin 1 5mm 0.5 \u03a9 ohm Photoresistor Resistor 5516 GL5516 1 5mm Flat Top LED Diode Lights 1 (Clear Transparent Lens) Bright Lighting Bulb Lamps Electronics Components Indicator Light Emitting Diodes 112 3mm Flat Top LED Diode Lights 1 (Clear Transparent Lens) Bright Lighting Bulb Lamps Electronics Components Indicator Light Emitting Diodes 2 Vertical Slide Switches Micro High Knob 3 Pin 2 Position 1P2T SPDT Panel Mount AC 125V 2A 1 LM2596 DC-DC Step Down Variable Volt Regulator Input 3.2V-40V Output 1.25V-35V Adjustable Buck Converter Electronic Voltage Stabilizer Power Supply Module 5 2.1mm Barrel Jack 5.5x2.1mm Female DC Power Jack 2.1 X 5.5mm DC Jack Connector 6V 9V 12V DC Jack Panel Mount 1 12V 5A Power Supply, AC DC Converter 100-220V to 12 Volt 5 Amp Transformer 5.5x2.1mm Plug 1 S8050D S8050 NPN Transistor TO-92 20V 700MA 1W 1 1N4001 Diode, standard, 1A, 50V, DO-41 1 (optional) 20pin x 10pcs Female Headers Pins Straight Single Row Gold Plated Pitch 2.54mm 0.1 inch for PCB Connector Machine Breadboard Electronic Circuit Board 10 SONGLE SRS-05VDC-SL 05VDC-SL 4100 Blue 5V 6PIN Power Relay 1 L293D 16-pin IC Stepper Motor Drivers Controller 17 0.1uF Ceramic Disc Capacitor - 50 Volts 5 1uF Electrolytic Capacitor 1UF-50V-5X11 5 S8550 TO-92 PNP Transistor 1 2N2222 TO-92 NPN Transistor 1 10K ohm 0805 Resistor 1/4w Metal Film Fixed Resistor 2 Raspberry pi 2040 Pico 4 Raspberry pi 2040 Pico-W 1 Superglue (small tube) 1 White PLA Comgrow 1KG 2 Black PLA Comgrow 1 KG 1 Black Easy Nylon Overture, 1 KG 1 Black TPU Colorful (flexible), 1 KG 1 Tools \u00b6 3D printer Wire Stripper for 28 AWG stranded wire Small Philips head screwdriver Dupont connector tool Soldering station with solder/flux Needle nose pliers Tweezers Clamping tweezers Zinc strip or thin metal strip (for melting PLA) Wire snipper Multimeter Breadboard and jumpers for testing electronics Label maker (optional) Computer with USB connector You can choose any color of LED that you would like for your display. White LEDs are the easiest to work with as they have no color variation within the same batch. Colored LEDs like blue or warm white may vary in the same batch. Therefore, you will need to order more than the quantity listed in the BOM to get enough LEDs of the same color. Be sure to test your LEDs by using your phone's digital camera to see if there are any variations in color when the LEDs are lit. Below is a photo showing the color variation of blue 5mm LEDs within the same batch using a breadboard's power rail with 2.63v. In this case, I used the purple-hued LEDs because there were 112 of the same color. \u21a9 \u21a9","title":"Bill of Materials"},{"location":"createandorder/bom/#bill_of_materials","text":"Item Quantity Single digit PCB for digits 0, 2, & 3 3 Conductor PCB for digit 1 and the colons 1 Powerbank PCB 1 A4 Size Felt Sheets with Adhesive Backing 1 2 Inch Jumbo Paper Clips (Smooth Big Paperclips) 20 M1.7 x 6mm Stainless Steel Phillips Round Head Self Tapping Screws 200 M1.7 x 8mm Stainless Steel Phillips Round Head Self Tapping Screws 200 M2 X 15mm Stainless Steel Phillips Round Head Self Tapping Screws 50 Micro 130 DC Motor Strong Magnetic Brushed Electric DC 3V -12V 25000 RPM Cars Toys Electric Motor, High Speed Torque 30 Black 28 AWG Gauge Flexible Silicone Rubber Electric Wire 10M White 28 AWG Gauge Flexible Silicone Rubber Electric Wire 10M Male Breakout Pin Connector 2.54mm 100 2.54mm 0.1\" Pitch PCB Mount Screw Terminal Block Connector, 2P 3P 4P Terminals for 26-18AWG Cable 50 Dupont Jumper Wire Cable Female Pin Connector 2.54mm 100 2.54mm 1x2p Dupont Connector Housing Female for Dupont Cable and Jumper Wire 100 Digital Temperature and Humidity Sensor DHT22 Module, 3 pin 1 5mm 0.5 \u03a9 ohm Photoresistor Resistor 5516 GL5516 1 5mm Flat Top LED Diode Lights 1 (Clear Transparent Lens) Bright Lighting Bulb Lamps Electronics Components Indicator Light Emitting Diodes 112 3mm Flat Top LED Diode Lights 1 (Clear Transparent Lens) Bright Lighting Bulb Lamps Electronics Components Indicator Light Emitting Diodes 2 Vertical Slide Switches Micro High Knob 3 Pin 2 Position 1P2T SPDT Panel Mount AC 125V 2A 1 LM2596 DC-DC Step Down Variable Volt Regulator Input 3.2V-40V Output 1.25V-35V Adjustable Buck Converter Electronic Voltage Stabilizer Power Supply Module 5 2.1mm Barrel Jack 5.5x2.1mm Female DC Power Jack 2.1 X 5.5mm DC Jack Connector 6V 9V 12V DC Jack Panel Mount 1 12V 5A Power Supply, AC DC Converter 100-220V to 12 Volt 5 Amp Transformer 5.5x2.1mm Plug 1 S8050D S8050 NPN Transistor TO-92 20V 700MA 1W 1 1N4001 Diode, standard, 1A, 50V, DO-41 1 (optional) 20pin x 10pcs Female Headers Pins Straight Single Row Gold Plated Pitch 2.54mm 0.1 inch for PCB Connector Machine Breadboard Electronic Circuit Board 10 SONGLE SRS-05VDC-SL 05VDC-SL 4100 Blue 5V 6PIN Power Relay 1 L293D 16-pin IC Stepper Motor Drivers Controller 17 0.1uF Ceramic Disc Capacitor - 50 Volts 5 1uF Electrolytic Capacitor 1UF-50V-5X11 5 S8550 TO-92 PNP Transistor 1 2N2222 TO-92 NPN Transistor 1 10K ohm 0805 Resistor 1/4w Metal Film Fixed Resistor 2 Raspberry pi 2040 Pico 4 Raspberry pi 2040 Pico-W 1 Superglue (small tube) 1 White PLA Comgrow 1KG 2 Black PLA Comgrow 1 KG 1 Black Easy Nylon Overture, 1 KG 1 Black TPU Colorful (flexible), 1 KG 1","title":"Bill of Materials"},{"location":"createandorder/bom/#tools","text":"3D printer Wire Stripper for 28 AWG stranded wire Small Philips head screwdriver Dupont connector tool Soldering station with solder/flux Needle nose pliers Tweezers Clamping tweezers Zinc strip or thin metal strip (for melting PLA) Wire snipper Multimeter Breadboard and jumpers for testing electronics Label maker (optional) Computer with USB connector You can choose any color of LED that you would like for your display. White LEDs are the easiest to work with as they have no color variation within the same batch. Colored LEDs like blue or warm white may vary in the same batch. Therefore, you will need to order more than the quantity listed in the BOM to get enough LEDs of the same color. Be sure to test your LEDs by using your phone's digital camera to see if there are any variations in color when the LEDs are lit. Below is a photo showing the color variation of blue 5mm LEDs within the same batch using a breadboard's power rail with 2.63v. In this case, I used the purple-hued LEDs because there were 112 of the same color. \u21a9 \u21a9","title":"Tools"},{"location":"createandorder/pcb/","text":"Fabricate the Printed Circuit Boards (PCBs) \u00b6 This guide will help you order the fabrication of your PCBs. The PCB files are located in your fork at kinetic-display\\pcb . Follow the instructions below to place a separate order for each of the three Gerber files: Gerber_KineticDisplay-Controller Gerber_KineticDisplay-PowerSystem Gerber_KineticDisplay-SingleDigit You will need to order more PCBs than required for this project because most PCB fabrication facilities have a minimum order quantity of five. Be sure to also order the remaining components and materials from the Bill of Materials (BOM) . Steps to Order PCBs \u00b6 Open your browser and navigate to https://jlcpcb.com/ . Create an account if you do not already have one, then click the Order now button. Upload the Gerber file by clicking the Add Gerber file button. Repeat this step through step 4 for each of the three Gerber files found under the kinetic-display\\pcb directory. Use all the default settings except change the PCB color to white to enhance the luminosity of the LEDs. Click the SAVE TO CART button and complete the order by following the shipping and payment steps in the wizard. Notes \u00b6 PCB Color : White PCBs are recommended to maximize LED brightness and improve the overall aesthetic of the display. Minimum Order Quantity : Most PCB manufacturers require a minimum order of five PCBs per design. This means you will receive extra PCBs, which can be used as spares or for future projects. Shipping and Lead Time : Be sure to check the estimated shipping time and lead time for fabrication when placing your order. Congratulations on ordering your PCBs!","title":"Order PCBs"},{"location":"createandorder/pcb/#fabricate_the_printed_circuit_boards_pcbs","text":"This guide will help you order the fabrication of your PCBs. The PCB files are located in your fork at kinetic-display\\pcb . Follow the instructions below to place a separate order for each of the three Gerber files: Gerber_KineticDisplay-Controller Gerber_KineticDisplay-PowerSystem Gerber_KineticDisplay-SingleDigit You will need to order more PCBs than required for this project because most PCB fabrication facilities have a minimum order quantity of five. Be sure to also order the remaining components and materials from the Bill of Materials (BOM) .","title":"Fabricate the Printed Circuit Boards (PCBs)"},{"location":"createandorder/pcb/#steps_to_order_pcbs","text":"Open your browser and navigate to https://jlcpcb.com/ . Create an account if you do not already have one, then click the Order now button. Upload the Gerber file by clicking the Add Gerber file button. Repeat this step through step 4 for each of the three Gerber files found under the kinetic-display\\pcb directory. Use all the default settings except change the PCB color to white to enhance the luminosity of the LEDs. Click the SAVE TO CART button and complete the order by following the shipping and payment steps in the wizard.","title":"Steps to Order PCBs"},{"location":"createandorder/pcb/#notes","text":"PCB Color : White PCBs are recommended to maximize LED brightness and improve the overall aesthetic of the display. Minimum Order Quantity : Most PCB manufacturers require a minimum order of five PCBs per design. This means you will receive extra PCBs, which can be used as spares or for future projects. Shipping and Lead Time : Be sure to check the estimated shipping time and lead time for fabrication when placing your order. Congratulations on ordering your PCBs!","title":"Notes"}]}