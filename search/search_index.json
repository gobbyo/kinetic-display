{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Contents \u00b6 Introduction \u00b6 Introduction, tools, and BOM Software and Microcontroller Preparation Order Parts \u00b6 Bill of Materials Fabricate the Printed Circuit Boards (PCBs) 3D Print the Display Parts Assemble and Test Components \u00b6 Actuator Assembly Digit PCB Assembly Deploy Digit Project Digit PCB Test Controller PCB Assembly Deploy Controller Project Controller PCB Test Power Management PCB Assembly Power Management PCB Test Buck Module Wiring UART and Relay Wiring","title":"Contents"},{"location":"#contents","text":"","title":"Contents"},{"location":"#introduction","text":"Introduction, tools, and BOM Software and Microcontroller Preparation","title":"Introduction"},{"location":"#order_parts","text":"Bill of Materials Fabricate the Printed Circuit Boards (PCBs) 3D Print the Display Parts","title":"Order Parts"},{"location":"#assemble_and_test_components","text":"Actuator Assembly Digit PCB Assembly Deploy Digit Project Digit PCB Test Controller PCB Assembly Deploy Controller Project Controller PCB Test Power Management PCB Assembly Power Management PCB Test Buck Module Wiring UART and Relay Wiring","title":"Assemble and Test Components"},{"location":"intro/","text":"Kinetic Display \u00b6 gobbyo | jbeman@hotmail.com Introduction \u00b6 Complete the assembly of the printed circuit boards (PCB) and electric motor wire soldering.","title":"Kinetic Display"},{"location":"intro/#kinetic_display","text":"gobbyo | jbeman@hotmail.com","title":"Kinetic Display"},{"location":"intro/#introduction","text":"Complete the assembly of the printed circuit boards (PCB) and electric motor wire soldering.","title":"Introduction"},{"location":"prerequisitesoftware/","text":"Software and Microcontroller Preparation \u00b6 Prerequisites \u00b6 Read and bookmark the instructions to install Micropython onto your Raspberry Pi Pico . Install Visual Studio Code With VS Code installed and open, click on the extensions icon on the Activity bar and install the following extensions from Marketplace : Python by Microsoft MicroPico by paulober Download the flash_nuke Uf2 file Clear your Raspberry Pi Pico before flashing a new build: Plug a USB cable into your Raspberry Pi Pico's USB port Press and hold the BOOTSEL button on your Raspberry Pi Pico while plugging your USB cable into your computer Verify an RPI-RP2 storage device appears Drag and drop the flash_nuke.uf2 file into the RPI-RP2 storage Download the micropython Uf2 file for the Raspberry Pi Pico and Raspberry Pi PicoW Verify Micropython on your Raspberry Pi Pico \u00b6 Open Visual Studio Code On the top menu select the (A) elipse ... (if present), then (B) Terminal->New Terminal . In the terminal pane, select the terminal menu (A) followed by the MicroPico vREPL sub-menu (B) Plug your Raspberry Pi Pico into the USB port and the (A) Status bar will show your Pico as connected Verify your Pico's onboard LED turns on and off by typing the following code in the (B) Terminal pane (screen capture above) and copy/paste each line separately: from machine import Pin p = Pin(25,Pin.OUT) p.on() p.off() Fork and Clone the Repository \u00b6 Install Git Open a browser and follow the link to the Kinetic-Display repository Create a fork of the Kinetic-Display repository. Open a new PowerShell terminal in VS Code, change the directory to kinetic-display\\micropython\\pico in your cloned fork, then run the following command. PS > ./deploy.ps1 You'll get the following example output when successful. Directory: C:\\repos\\deploy Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 1/31/2025 8:30 PM conductor d----- 1/31/2025 8:30 PM digit Verify the conductor and digit folders exist under the same parent directory where you cloned your fork.","title":"Software and Microcontroller Preparation"},{"location":"prerequisitesoftware/#software_and_microcontroller_preparation","text":"","title":"Software and Microcontroller Preparation"},{"location":"prerequisitesoftware/#prerequisites","text":"Read and bookmark the instructions to install Micropython onto your Raspberry Pi Pico . Install Visual Studio Code With VS Code installed and open, click on the extensions icon on the Activity bar and install the following extensions from Marketplace : Python by Microsoft MicroPico by paulober Download the flash_nuke Uf2 file Clear your Raspberry Pi Pico before flashing a new build: Plug a USB cable into your Raspberry Pi Pico's USB port Press and hold the BOOTSEL button on your Raspberry Pi Pico while plugging your USB cable into your computer Verify an RPI-RP2 storage device appears Drag and drop the flash_nuke.uf2 file into the RPI-RP2 storage Download the micropython Uf2 file for the Raspberry Pi Pico and Raspberry Pi PicoW","title":"Prerequisites"},{"location":"prerequisitesoftware/#verify_micropython_on_your_raspberry_pi_pico","text":"Open Visual Studio Code On the top menu select the (A) elipse ... (if present), then (B) Terminal->New Terminal . In the terminal pane, select the terminal menu (A) followed by the MicroPico vREPL sub-menu (B) Plug your Raspberry Pi Pico into the USB port and the (A) Status bar will show your Pico as connected Verify your Pico's onboard LED turns on and off by typing the following code in the (B) Terminal pane (screen capture above) and copy/paste each line separately: from machine import Pin p = Pin(25,Pin.OUT) p.on() p.off()","title":"Verify Micropython on your Raspberry Pi Pico"},{"location":"prerequisitesoftware/#fork_and_clone_the_repository","text":"Install Git Open a browser and follow the link to the Kinetic-Display repository Create a fork of the Kinetic-Display repository. Open a new PowerShell terminal in VS Code, change the directory to kinetic-display\\micropython\\pico in your cloned fork, then run the following command. PS > ./deploy.ps1 You'll get the following example output when successful. Directory: C:\\repos\\deploy Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 1/31/2025 8:30 PM conductor d----- 1/31/2025 8:30 PM digit Verify the conductor and digit folders exist under the same parent directory where you cloned your fork.","title":"Fork and Clone the Repository"},{"location":"assembly/actuatorassembly/","text":"Actuator Assembly \u00b6 This guide is essential for ensuring the actuators function reliably and integrate seamlessly into the display system. It provides detailed instructions for assembling the 30 actuators used in the Kinetic Display. Below are the key areas: Components and Tools : Lists all required components (e.g., motors, wires, connectors) and tools (e.g., soldering station, wire strippers, crimping tool). Shaft Gear Installation : Explains how to securely attach the shaft gear to the motor shaft using super glue and precise alignment. Wire Preparation : Details cutting, stripping, and soldering wires to motor terminals, ensuring proper polarity for clockwise and counterclockwise motion. Dupont Connectors : Guides the crimping and housing of Dupont connectors for easy connection to the digit PCB. Motor Mount Assembly : Covers assembling the motor mount, pinion gear, and shaft, ensuring smooth operation without jamming or sticking. There are 30 actuators in the display, 7 per digit and 2 for the colons (4 digits x 7 segments + 2 colons = 30 total actuators). The diagrams below identify the various parts and composition of the actuator. Fully assembled actuator with segment and back stopper. Actuator rack and pinion gear assembly. The actuator assembly includes installing the shaft gear onto the DC brushed motor, preparing and adding the wires to the motor, assembling the motor mount, pinion gear and shaft, then adding the DC brushed motor to the assembled motor mount. Prerequisites \u00b6 Table of components Quantity Component Image 30 130 Strong Magnetic Toy Motor 150 cm 28 AWG Stranded Wire (white) 150 cm 28 AWG Stranded Wire (black) 60 DuPont 2.54mm Pitch Female Connector Pin 30 DuPont 2.54mm Pitch Terminal Connector Single Row Housing 2 Pin 10 Jumbo Metal Paperclip (smooth) Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Large regular tipped screwdriver Yes Super glue Yes 22-34 AWG Wire Stripper and Cutter Yes Pin Crimp Tool for 2.54mm Dupont Connectors Yes Heavy Duty Wire Cutter Pliers Yes Heavy Duty Cross Locking or Clamping Tweezers Yes 10cm zinc strip No Label Maker Shaft Gear \u00b6 In this section you'll glue the shaft gear onto the shaft to avoid slippage. The shaft gear must be made from rigid filament like PLA or ABS. Shaft Gear Installation Steps \u00b6 The tools and parts needed to install the shaft gear include: a regular tipped screwdriver, super glue, motor shaft 10-toothed gear, and DC brushed toy motor. Add a drop of super glue to attach the shaft gear. Note the shaft gear is 10mm high and the hole is 5mm. Position the DC toy motor vertically so the bottom of the DC motor shaft sits on a hard surface. Use the regular tipped screwdriver to press the 10-toothed gear onto the shaft. Be sure to push the 10-toothed gear 5mm down into the shaft. Repeat the steps in this section for the remaining 29 motors. Wires \u00b6 After the actuator is assembled, it will be connected to the digit PCB. The white 28 AWG wire provides the clockwise (CW) motion that extends the segment, the black wire provides the counter clockwise (CCW) motion that retracts the segment. Wire Cutting and Soldering Steps \u00b6 In this section you'll create 21 unlabelled motors with 4 centimeter wires with Dupont connectors, 4 motors labelled \"C\", 4 motors labelled \"D\", and one labelled \"UC\" (upper colon), totalling 9 motors having 6 centimeter wires with dupont connectors. The tools and parts needed to prepare and add the wires to the DC motor includes: black and white 28 AWG stranded wire, wire strippers for 28 AWG wire, and a soldering station with 0.8mm 1.76g flux core solder. Cut 9 white and 9 black wires of 6 centimeter lengths for segment actuators C and D and the upper colon. Cut 21 white and 21 black wires of 4 centimeter lengths for the remaining actuators. Strip about 3mm off one end of each black and white wire. Position the DC motor so the shaft is pointed away and the terminals are facing up. Set your soldering iron to 350\u00b0C then add solder to each motor terminal. With the DC motor shaft pointing up and the terminals are facing up, solder the white wire onto the left motor terminal and the black wire onto the right motor terminal. Note There are 9 motors with 6 centimeter wire lengths: four motors labelled C, four D, and one UC (upper colon). Place a label on the black-wire side of the motor. Dupont Connections \u00b6 The tools and parts needed to add the 2.54mm Dupont connectors to each wire include: the DC motor with shaft gear and wires (as prepared in the previous steps), a Dupont connector crimping tool, 60 female Dupont pin connectors and 30 1x2p Dupont connector housings. Strip 3mm off the end of the DC motor wire. Crimp the female connectors onto each wire. Slide the Dupont connector housing onto the wires so the pins lock into the housing. Repeat the previous steps for all remaining motors. Be sure to place your label on the black-wire side of the motor for the 6 centimeter wire length actuators with C (4), D (4) and one UC (upper colon). No need to label the 21 other actuators with 4 centimeter lengths Motor Mount \u00b6 In this section you'll assemble the motor mounts. Properly installed parts on the motor mount are essential to making the actuators work without issues such as having a segment stick or jam in an extended or retracted position. The figure below summarizes the assembly for the motor mount. There are three parts: the (A) motor mount , the (B) pinion reduction gear , and (C) pinion gear shaft . Discard the red support section. The tools and parts needed to assemble the motor mount include: 3d printed motor mount in PLA and Nylon pinion reduction gear, a 20mm metal shaft made from a jumbo paper clip, a soldering station capable of a heat setting of 250\u00b0 C, clamping tweezers with a thin piece of metal. Cut the off the straight sections from the Jumbo paper clip. Measure 2 cm from each Jumbo paper clip straight section. Use a large wire cutter to cut the shaft. Insert the 2 cm shaft through the motor mount until it protrudes about 1mm into the pinion gear space. Add the pinion gear to the motor mount as shown in the diagram. Insert the shaft by aligning the pinion gear shaft hole with the metal shaft, then slide the metal shaft all the way into the motor mount. Heat your soldering iron to 250\u00b0C and prepare your clamping tweezer and zinc strip as shown in the picture. Hold the zinc strip over the shaft collar and press down on the zinc strip with your soldering iron. Melt the collar and flatten it onto the motor mount. When finished, the melted collar will only protrude about a half millimeter out from the motor mount. Note Verify the shaft can slide through the pinion gear before assembling the motor. If you cannot rotate the pinion gear on the shaft, then you'll need to reprint the pinion gear to ensure the hole is wide enough. Avoid an overly sized shaft hole as it allows the gear to shift side to side on the motor shaft and will cause the actuator to jam or stick. Hold the main body of the motor mount so the pinion gear faces left. Avoid touching or putting any pressure onto the motor mounting tabs used the screw the motor onto the display. With your other hand, hold the prepared motor with the shaft pointed left and the terminals downward, insert the prepared motor into the motor mount. Repeat the process for the remaining 29 motors.","title":"Actuators"},{"location":"assembly/actuatorassembly/#actuator_assembly","text":"This guide is essential for ensuring the actuators function reliably and integrate seamlessly into the display system. It provides detailed instructions for assembling the 30 actuators used in the Kinetic Display. Below are the key areas: Components and Tools : Lists all required components (e.g., motors, wires, connectors) and tools (e.g., soldering station, wire strippers, crimping tool). Shaft Gear Installation : Explains how to securely attach the shaft gear to the motor shaft using super glue and precise alignment. Wire Preparation : Details cutting, stripping, and soldering wires to motor terminals, ensuring proper polarity for clockwise and counterclockwise motion. Dupont Connectors : Guides the crimping and housing of Dupont connectors for easy connection to the digit PCB. Motor Mount Assembly : Covers assembling the motor mount, pinion gear, and shaft, ensuring smooth operation without jamming or sticking. There are 30 actuators in the display, 7 per digit and 2 for the colons (4 digits x 7 segments + 2 colons = 30 total actuators). The diagrams below identify the various parts and composition of the actuator. Fully assembled actuator with segment and back stopper. Actuator rack and pinion gear assembly. The actuator assembly includes installing the shaft gear onto the DC brushed motor, preparing and adding the wires to the motor, assembling the motor mount, pinion gear and shaft, then adding the DC brushed motor to the assembled motor mount.","title":"Actuator Assembly"},{"location":"assembly/actuatorassembly/#prerequisites","text":"Table of components Quantity Component Image 30 130 Strong Magnetic Toy Motor 150 cm 28 AWG Stranded Wire (white) 150 cm 28 AWG Stranded Wire (black) 60 DuPont 2.54mm Pitch Female Connector Pin 30 DuPont 2.54mm Pitch Terminal Connector Single Row Housing 2 Pin 10 Jumbo Metal Paperclip (smooth) Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Large regular tipped screwdriver Yes Super glue Yes 22-34 AWG Wire Stripper and Cutter Yes Pin Crimp Tool for 2.54mm Dupont Connectors Yes Heavy Duty Wire Cutter Pliers Yes Heavy Duty Cross Locking or Clamping Tweezers Yes 10cm zinc strip No Label Maker","title":"Prerequisites"},{"location":"assembly/actuatorassembly/#shaft_gear","text":"In this section you'll glue the shaft gear onto the shaft to avoid slippage. The shaft gear must be made from rigid filament like PLA or ABS.","title":"Shaft Gear"},{"location":"assembly/actuatorassembly/#shaft_gear_installation_steps","text":"The tools and parts needed to install the shaft gear include: a regular tipped screwdriver, super glue, motor shaft 10-toothed gear, and DC brushed toy motor. Add a drop of super glue to attach the shaft gear. Note the shaft gear is 10mm high and the hole is 5mm. Position the DC toy motor vertically so the bottom of the DC motor shaft sits on a hard surface. Use the regular tipped screwdriver to press the 10-toothed gear onto the shaft. Be sure to push the 10-toothed gear 5mm down into the shaft. Repeat the steps in this section for the remaining 29 motors.","title":"Shaft Gear Installation Steps"},{"location":"assembly/actuatorassembly/#wires","text":"After the actuator is assembled, it will be connected to the digit PCB. The white 28 AWG wire provides the clockwise (CW) motion that extends the segment, the black wire provides the counter clockwise (CCW) motion that retracts the segment.","title":"Wires"},{"location":"assembly/actuatorassembly/#wire_cutting_and_soldering_steps","text":"In this section you'll create 21 unlabelled motors with 4 centimeter wires with Dupont connectors, 4 motors labelled \"C\", 4 motors labelled \"D\", and one labelled \"UC\" (upper colon), totalling 9 motors having 6 centimeter wires with dupont connectors. The tools and parts needed to prepare and add the wires to the DC motor includes: black and white 28 AWG stranded wire, wire strippers for 28 AWG wire, and a soldering station with 0.8mm 1.76g flux core solder. Cut 9 white and 9 black wires of 6 centimeter lengths for segment actuators C and D and the upper colon. Cut 21 white and 21 black wires of 4 centimeter lengths for the remaining actuators. Strip about 3mm off one end of each black and white wire. Position the DC motor so the shaft is pointed away and the terminals are facing up. Set your soldering iron to 350\u00b0C then add solder to each motor terminal. With the DC motor shaft pointing up and the terminals are facing up, solder the white wire onto the left motor terminal and the black wire onto the right motor terminal. Note There are 9 motors with 6 centimeter wire lengths: four motors labelled C, four D, and one UC (upper colon). Place a label on the black-wire side of the motor.","title":"Wire Cutting and Soldering Steps"},{"location":"assembly/actuatorassembly/#dupont_connections","text":"The tools and parts needed to add the 2.54mm Dupont connectors to each wire include: the DC motor with shaft gear and wires (as prepared in the previous steps), a Dupont connector crimping tool, 60 female Dupont pin connectors and 30 1x2p Dupont connector housings. Strip 3mm off the end of the DC motor wire. Crimp the female connectors onto each wire. Slide the Dupont connector housing onto the wires so the pins lock into the housing. Repeat the previous steps for all remaining motors. Be sure to place your label on the black-wire side of the motor for the 6 centimeter wire length actuators with C (4), D (4) and one UC (upper colon). No need to label the 21 other actuators with 4 centimeter lengths","title":"Dupont Connections"},{"location":"assembly/actuatorassembly/#motor_mount","text":"In this section you'll assemble the motor mounts. Properly installed parts on the motor mount are essential to making the actuators work without issues such as having a segment stick or jam in an extended or retracted position. The figure below summarizes the assembly for the motor mount. There are three parts: the (A) motor mount , the (B) pinion reduction gear , and (C) pinion gear shaft . Discard the red support section. The tools and parts needed to assemble the motor mount include: 3d printed motor mount in PLA and Nylon pinion reduction gear, a 20mm metal shaft made from a jumbo paper clip, a soldering station capable of a heat setting of 250\u00b0 C, clamping tweezers with a thin piece of metal. Cut the off the straight sections from the Jumbo paper clip. Measure 2 cm from each Jumbo paper clip straight section. Use a large wire cutter to cut the shaft. Insert the 2 cm shaft through the motor mount until it protrudes about 1mm into the pinion gear space. Add the pinion gear to the motor mount as shown in the diagram. Insert the shaft by aligning the pinion gear shaft hole with the metal shaft, then slide the metal shaft all the way into the motor mount. Heat your soldering iron to 250\u00b0C and prepare your clamping tweezer and zinc strip as shown in the picture. Hold the zinc strip over the shaft collar and press down on the zinc strip with your soldering iron. Melt the collar and flatten it onto the motor mount. When finished, the melted collar will only protrude about a half millimeter out from the motor mount. Note Verify the shaft can slide through the pinion gear before assembling the motor. If you cannot rotate the pinion gear on the shaft, then you'll need to reprint the pinion gear to ensure the hole is wide enough. Avoid an overly sized shaft hole as it allows the gear to shift side to side on the motor shaft and will cause the actuator to jam or stick. Hold the main body of the motor mount so the pinion gear faces left. Avoid touching or putting any pressure onto the motor mounting tabs used the screw the motor onto the display. With your other hand, hold the prepared motor with the shaft pointed left and the terminals downward, insert the prepared motor into the motor mount. Repeat the process for the remaining 29 motors.","title":"Motor Mount"},{"location":"assembly/buckmodulesandwiring/","text":"Buck Module Wiring \u00b6 Buck converters are essential for converting 12V DC to 5V DC because they efficiently step down the voltage while minimizing energy loss. Unlike linear regulators, which dissipate excess voltage as heat, buck converters use high-frequency switching and inductors to transfer energy more efficiently. This makes them ideal for powering sensitive electronics like microcontrollers and LEDs, as they provide stable output voltage, reduce heat generation, and improve overall system reliability. This guide provides detailed instructions for assembling and wiring DC to DC variable buck converter modules in a Kinetic Display system. Also included is a list of required components and tools, step-by-step guidance for wiring and securing the modules, and calibration instructions to ensure proper voltage output. Correct Wiring : Proper routing and connection of wires are critical to ensure the display functions correctly. Incorrect wire lengths or connections can lead to assembly issues or electrical faults. Voltage Calibration : The buck converters step down the input voltage from 12V to a stable 5.0-5.1V output. Calibration ensures the modules provide the correct voltage to prevent damage to connected components or malfunctions. Safety Measures : The document emphasizes using anti-static precautions and proper tools to avoid damaging sensitive electronics during assembly. This guide is essential for ensuring the reliability and safety of the Kinetic Display system. Prerequisites \u00b6 3D print the Digit and controller TPU gaskets 3D print the Display stand Table of components Quantity Component Image 5 DC to DC variable buck converter module 10M White 28 AWG Gauge Flexible Silicone Rubber Electric Wire 10M Black 28 AWG Gauge Flexible Silicone Rubber Electric Wire 50cm (optional) 28 AWG Gauge heat shrink 10 M1.7x6mm Cross Round Head with Washer Self Tapping Screw 304 Stainless Steel Screws Table of tools Required Tool Image Yes Multimeter Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Wire stripper No Label maker PCB and Stand Layout \u00b6 This section ensures wiring for the PCBs are oriented for the mounting of the buck modules and wiring. Remove the Raspberry Pi Pico and Pico W 2040 from the PCBs. We'll add these later when it is safe to do so. Lay the PCBs face up with Digit 0 on the far right and Digit 3 on the far left. Position the stand below the PCBs so the barrel jack is between the controller/Digit 1 PCB and Digit 2 PCB. Place the TPU gaskets on the PCBs. Note the TPU gasket for Digit 2 differs slightly from Digit 0 and 3 gaskets. Wiring the Buck Modules \u00b6 This section details wiring the buck converter to the PCBs. Be sure to follow the instructions in this section to get the wire lengths correct. Otherwise you are likely to have the wires be too short or too long for the display face to correctly fit. The buck converter module has an In + and In - on one side for the 12v input, and an Out + and Out - on the opposite side for the converted 5v output. This section will also cover how to calibrate the variable buck module to provide 5.0v to 5.1v output. The picture below is the wiring diagram for the buck converter modules. The picture below is the completed wiring of the buck converter modules. The order of install is 1, 2, 3 on the right, followed by 4 and 5 on the left. Warning Use anti static mats and ESD wristband and grounding wire for the remainder of the Kinetic Display electronics assembly. Digits and Controller \u00b6 Following the picture below, place a buck converter module for Digit 0 on the rightmost support on the display stand. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. (A) Route the two wires from the 5v terminal block connector on the Digit 0 PCB. (B) Slide two 3cm sections of heat shrink on the two wires but DO NOT APPLY HEAT, then (C) continue routing the wire around the relay, under the power management PCB and through the port on the PCB stand. (D) Finish unwinding the wire when you reach the end of buck module as shown in the picture. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector. (A) Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5v terminal block connector and the black wire onto the - . Following the picture below, turn the Digit 0 buck module over to its backside and solder the white wire onto the Out + pad and the black wire onto the Out - pad. Following the picture below, turn the Digit 0 buck module 180 degrees while having its backside facing up. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. Solder the white wire onto the buck module's In + pad and the black wire onto the In - pad. Turn the Digit 0 buck module over and secure it with M1.7x6mm self tapping screws onto the rightmost module supports on the display stand. Route the Digit 0 white and black wire to the power management PCB C-12v-1 terminal block connector, provide about 10mm extra length in the wire before cutting them. Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the C-12v-1 and the black wire onto the - . Following the picture below, place a buck converter module for Digit 1 to the left of the Digit 0 module. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. Starting with the Digit 1 PCB, (A) Route the two wires from the 5v terminal block connector. (B) Slide one 3cm section of heat shrink on the two wires but DO NOT APPLY HEAT, then (C) continue routing the wire around the relay, under the power management PCB and through the port on the PCB stand. (D) Finish unwinding the wire when you reach the end of second buck module as shown in the picture. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector (A) . Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5v terminal block connector and the black wire onto the - . Following the picture below, turn the Digit 1 buck module over to its backside and solder the white wire onto the Out + pad and the black wire onto the Out - pad. Follow the previous steps 3-5 for the Digit 1 buck module then connect the 12v black and white wire into the next available block terminals on C-12v-1 . See the picture below for the assembled Digit 1 buck module. Place a buck converter module for the Colon/controller to the left of the Digit 1 module. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. On the backside of the Colon/controller buck module, (A) solder the white wire onto the Out + pad and the black wire onto the Out - pad. Route the wire around the power management relay and (B) to the 5v terminal block connector. Clip the white and black wires, strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5v terminal block connector and the black wire onto the - . Calibrate the Buck Module Voltage \u00b6 Follow using the picture above and start with the Digit 0 buck module furthest right. (A) Disconnect the black and white wire from the 5v terminal block and connect the probes from the multimeter set to measure DC voltage. (B) Plug the 12v power supply into the power management PCB barrel jack. (C) Turn the screw on the top of the potentiometer on the Digit 0 buck module counterclockwise until (D) the voltage measures between 5.0 and 5.1 volts. Note you'll have to turn the screw on the top of the potentiometer several times counterclockwise before the voltage begins to drop. Repeat the steps above to calibrate Digit 1 and the Conductor buck modules to 5v. Continue Wiring the Remaining Buck Modules \u00b6 Following the picture below, place a buck converter module for Digit 3 to the far left mounting location. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. (A) Unroll the two wires starting at the 5v terminal block connector on Digit 3 PCB. (B) Slide one 3cm section of heat shrink on the two wires but DO NOT APPLY HEAT, then (C) route the wire around the relay, under the power management PCB, and through the port on the PCB stand. (D) Finish unwinding the wire when you reach the end of the buck module as shown in the picture. Strip 3mm of insulation then solder the white wire to the buck module Out + pad and the black wire to the Out - pad. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector (A) . Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5v terminal block connector and the black wire onto the - . Following the diagram below, (A) solder the white wire onto the buck module's In + pad and the black wire onto the In - pad. Secure the module with two M1.7x6mm self tapping screws. (B) Route the Digit 0 white and black wire to the power management PCB C-12v-1 terminal block connector, provide about 10mm extra length in the wire before cutting them. Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the C-12v-1 and the black wire onto the - . Following the picture below, place a buck converter module for Digit 2 to the right of Digit 3. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. Starting with the Digit 2 PCB, (A) unroll the two wires starting at the 5v terminal block connector. (B) route the wire around the relay, under the power management PCB, and through the port on the PCB stand. (C) Finish unwinding the wire when you reach the end of the buck module as shown in the picture. Strip 3mm of insulation then solder the white wire to the buck module Out + pad and the black wire to the Out - pad. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector (A) . Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5v terminal block connector and the black wire onto the - . Following the diagram below, (A) solder the white wire onto the buck module's In + pad and the black wire onto the In - pad. Secure the module with two M1.7x6mm self tapping screws. (B) Route the Digit 0 white and black wire to the power management PCB C-12v-1 terminal block connector, provide about 10mm extra length in the wire before cutting them. Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the C-12v-1 and the black wire onto the - . Position the heat shrink as per the picture of the completed wiring of the buck converter modules at the beginning of this document. Apply heat from your heat gun to complete the assembly of all the heat shrink. Following the picture below with the Digit 3 buck module, (A) disconnect the black and white wire from the 5v terminal block, and connect the probes from the multimeter set to measure DC voltage. (B) Plug the 12v power supply into the power management PCB barrel jack. (C) Turn the screw on the top of the potentiometer on the Digit 3 buck module counterclockwise until (D) the voltage measures between 5.0 and 5.1 volts. Note you'll have to turn the screw on the top of the potentiometer several times counterclockwise before the voltage begins to drop. Repeat the steps above to calibrate Digit 2 buck module to 5v.","title":"Buck Module Wiring"},{"location":"assembly/buckmodulesandwiring/#buck_module_wiring","text":"Buck converters are essential for converting 12V DC to 5V DC because they efficiently step down the voltage while minimizing energy loss. Unlike linear regulators, which dissipate excess voltage as heat, buck converters use high-frequency switching and inductors to transfer energy more efficiently. This makes them ideal for powering sensitive electronics like microcontrollers and LEDs, as they provide stable output voltage, reduce heat generation, and improve overall system reliability. This guide provides detailed instructions for assembling and wiring DC to DC variable buck converter modules in a Kinetic Display system. Also included is a list of required components and tools, step-by-step guidance for wiring and securing the modules, and calibration instructions to ensure proper voltage output. Correct Wiring : Proper routing and connection of wires are critical to ensure the display functions correctly. Incorrect wire lengths or connections can lead to assembly issues or electrical faults. Voltage Calibration : The buck converters step down the input voltage from 12V to a stable 5.0-5.1V output. Calibration ensures the modules provide the correct voltage to prevent damage to connected components or malfunctions. Safety Measures : The document emphasizes using anti-static precautions and proper tools to avoid damaging sensitive electronics during assembly. This guide is essential for ensuring the reliability and safety of the Kinetic Display system.","title":"Buck Module Wiring"},{"location":"assembly/buckmodulesandwiring/#prerequisites","text":"3D print the Digit and controller TPU gaskets 3D print the Display stand Table of components Quantity Component Image 5 DC to DC variable buck converter module 10M White 28 AWG Gauge Flexible Silicone Rubber Electric Wire 10M Black 28 AWG Gauge Flexible Silicone Rubber Electric Wire 50cm (optional) 28 AWG Gauge heat shrink 10 M1.7x6mm Cross Round Head with Washer Self Tapping Screw 304 Stainless Steel Screws Table of tools Required Tool Image Yes Multimeter Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Wire stripper No Label maker","title":"Prerequisites"},{"location":"assembly/buckmodulesandwiring/#pcb_and_stand_layout","text":"This section ensures wiring for the PCBs are oriented for the mounting of the buck modules and wiring. Remove the Raspberry Pi Pico and Pico W 2040 from the PCBs. We'll add these later when it is safe to do so. Lay the PCBs face up with Digit 0 on the far right and Digit 3 on the far left. Position the stand below the PCBs so the barrel jack is between the controller/Digit 1 PCB and Digit 2 PCB. Place the TPU gaskets on the PCBs. Note the TPU gasket for Digit 2 differs slightly from Digit 0 and 3 gaskets.","title":"PCB and Stand Layout"},{"location":"assembly/buckmodulesandwiring/#wiring_the_buck_modules","text":"This section details wiring the buck converter to the PCBs. Be sure to follow the instructions in this section to get the wire lengths correct. Otherwise you are likely to have the wires be too short or too long for the display face to correctly fit. The buck converter module has an In + and In - on one side for the 12v input, and an Out + and Out - on the opposite side for the converted 5v output. This section will also cover how to calibrate the variable buck module to provide 5.0v to 5.1v output. The picture below is the wiring diagram for the buck converter modules. The picture below is the completed wiring of the buck converter modules. The order of install is 1, 2, 3 on the right, followed by 4 and 5 on the left. Warning Use anti static mats and ESD wristband and grounding wire for the remainder of the Kinetic Display electronics assembly.","title":"Wiring the Buck Modules"},{"location":"assembly/buckmodulesandwiring/#digits_and_controller","text":"Following the picture below, place a buck converter module for Digit 0 on the rightmost support on the display stand. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. (A) Route the two wires from the 5v terminal block connector on the Digit 0 PCB. (B) Slide two 3cm sections of heat shrink on the two wires but DO NOT APPLY HEAT, then (C) continue routing the wire around the relay, under the power management PCB and through the port on the PCB stand. (D) Finish unwinding the wire when you reach the end of buck module as shown in the picture. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector. (A) Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5v terminal block connector and the black wire onto the - . Following the picture below, turn the Digit 0 buck module over to its backside and solder the white wire onto the Out + pad and the black wire onto the Out - pad. Following the picture below, turn the Digit 0 buck module 180 degrees while having its backside facing up. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. Solder the white wire onto the buck module's In + pad and the black wire onto the In - pad. Turn the Digit 0 buck module over and secure it with M1.7x6mm self tapping screws onto the rightmost module supports on the display stand. Route the Digit 0 white and black wire to the power management PCB C-12v-1 terminal block connector, provide about 10mm extra length in the wire before cutting them. Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the C-12v-1 and the black wire onto the - . Following the picture below, place a buck converter module for Digit 1 to the left of the Digit 0 module. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. Starting with the Digit 1 PCB, (A) Route the two wires from the 5v terminal block connector. (B) Slide one 3cm section of heat shrink on the two wires but DO NOT APPLY HEAT, then (C) continue routing the wire around the relay, under the power management PCB and through the port on the PCB stand. (D) Finish unwinding the wire when you reach the end of second buck module as shown in the picture. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector (A) . Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5v terminal block connector and the black wire onto the - . Following the picture below, turn the Digit 1 buck module over to its backside and solder the white wire onto the Out + pad and the black wire onto the Out - pad. Follow the previous steps 3-5 for the Digit 1 buck module then connect the 12v black and white wire into the next available block terminals on C-12v-1 . See the picture below for the assembled Digit 1 buck module. Place a buck converter module for the Colon/controller to the left of the Digit 1 module. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. On the backside of the Colon/controller buck module, (A) solder the white wire onto the Out + pad and the black wire onto the Out - pad. Route the wire around the power management relay and (B) to the 5v terminal block connector. Clip the white and black wires, strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5v terminal block connector and the black wire onto the - .","title":"Digits and Controller"},{"location":"assembly/buckmodulesandwiring/#calibrate_the_buck_module_voltage","text":"Follow using the picture above and start with the Digit 0 buck module furthest right. (A) Disconnect the black and white wire from the 5v terminal block and connect the probes from the multimeter set to measure DC voltage. (B) Plug the 12v power supply into the power management PCB barrel jack. (C) Turn the screw on the top of the potentiometer on the Digit 0 buck module counterclockwise until (D) the voltage measures between 5.0 and 5.1 volts. Note you'll have to turn the screw on the top of the potentiometer several times counterclockwise before the voltage begins to drop. Repeat the steps above to calibrate Digit 1 and the Conductor buck modules to 5v.","title":"Calibrate the Buck Module Voltage"},{"location":"assembly/buckmodulesandwiring/#continue_wiring_the_remaining_buck_modules","text":"Following the picture below, place a buck converter module for Digit 3 to the far left mounting location. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. (A) Unroll the two wires starting at the 5v terminal block connector on Digit 3 PCB. (B) Slide one 3cm section of heat shrink on the two wires but DO NOT APPLY HEAT, then (C) route the wire around the relay, under the power management PCB, and through the port on the PCB stand. (D) Finish unwinding the wire when you reach the end of the buck module as shown in the picture. Strip 3mm of insulation then solder the white wire to the buck module Out + pad and the black wire to the Out - pad. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector (A) . Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5v terminal block connector and the black wire onto the - . Following the diagram below, (A) solder the white wire onto the buck module's In + pad and the black wire onto the In - pad. Secure the module with two M1.7x6mm self tapping screws. (B) Route the Digit 0 white and black wire to the power management PCB C-12v-1 terminal block connector, provide about 10mm extra length in the wire before cutting them. Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the C-12v-1 and the black wire onto the - . Following the picture below, place a buck converter module for Digit 2 to the right of Digit 3. Strip 3mm of insulation from the black and white 28 AWG wire while on the roll starting then tin the stripped end with solder. Starting with the Digit 2 PCB, (A) unroll the two wires starting at the 5v terminal block connector. (B) route the wire around the relay, under the power management PCB, and through the port on the PCB stand. (C) Finish unwinding the wire when you reach the end of the buck module as shown in the picture. Strip 3mm of insulation then solder the white wire to the buck module Out + pad and the black wire to the Out - pad. Now that the length of wire is known from its route, snip off the wires next to the terminal block connector (A) . Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the 5v terminal block connector and the black wire onto the - . Following the diagram below, (A) solder the white wire onto the buck module's In + pad and the black wire onto the In - pad. Secure the module with two M1.7x6mm self tapping screws. (B) Route the Digit 0 white and black wire to the power management PCB C-12v-1 terminal block connector, provide about 10mm extra length in the wire before cutting them. Strip 3mm of insulation then tin the stripped end with solder. Connect the white wire to the + on the C-12v-1 and the black wire onto the - . Position the heat shrink as per the picture of the completed wiring of the buck converter modules at the beginning of this document. Apply heat from your heat gun to complete the assembly of all the heat shrink. Following the picture below with the Digit 3 buck module, (A) disconnect the black and white wire from the 5v terminal block, and connect the probes from the multimeter set to measure DC voltage. (B) Plug the 12v power supply into the power management PCB barrel jack. (C) Turn the screw on the top of the potentiometer on the Digit 3 buck module counterclockwise until (D) the voltage measures between 5.0 and 5.1 volts. Note you'll have to turn the screw on the top of the potentiometer several times counterclockwise before the voltage begins to drop. Repeat the steps above to calibrate Digit 2 buck module to 5v.","title":"Continue Wiring the Remaining Buck Modules"},{"location":"assembly/controllerpcbassembly/","text":"Controller and Digit 1 PCB Assembly \u00b6 Digit 1 and the colons are on a single PCB. Digit 1, powered by a Raspberry Pi Pico 2040 is identical to digits 0, 2, and 3 except it is contained on a single PCB with the controller. The Raspberry Pi Pico W 2040 operates the colons and serves as the central command and control for the display performing the following functions: Sends commands to digits as to what to display (i.e. 0-9, A-F) Sends commands for the brightness of the digits When in Admin mode, it will transmit its own wifi service to wirelessly change the display settings from a cell phone or computer. Manages the scheduler, which is the mechanism for displaying time, date, external temperature and humidity, and interior temperature and humidity. When connected to a wifi network, it will obtain its public facing IP address, look up the time zone it is located in, and set the display to the local time When connected to a wifi network, it will obtain the closest weather station and, depending on the scheduler, may display the external temperature and humidity. Manages the low power consumption mode by turning off the power to digits 0-3. When awakened, it will turn on the power to digits 0-3. Front face of the controller PCB fully assembled. Back side of the controller PCB fully assembled. Prerequisites \u00b6 Fabrication of the controller and digit one PCB 3D print of the upper and lower colons Table of components Quantity Component Image 5 16 pin IC socket 5 L293D stepper motor driver 4 20 pin female header connector 1 20 pin single row breakaway male connector 1 Vertical Slide Switch Micro High Knob 3 Pin 2 Position 1P2T SPDT Panel Mount 6 2 Pin PCB Mount Screw Terminal Block Connector Straight Pin 2 0.1\u03bc farad ceramic capacitor 2 1\u03bc farad electrolytic capacitor 1 5mm 0.5 \u03a9 ohm Photoresistor Resistor 5516 GL5516 1 S8550 TO-92 TH PNP Transistor 1 2N2222 TO-92 TH NPN Transistor 2 10K ohm 0805 Resistor 1/2w Metal Film Fixed Resistor 28 5mm Flat top LED, anode long lead (your choice of color) 2 3mm Flat top LED, anode long lead (your choice of color) 1 Raspberry Pi Pico 2040 with Headers 1 Raspberry Pi Pico W 2040 with Headers 1 Controller PCB See next section Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Isopropyl Alcohol Yes Cotton Facial Pads Assemble Digit One \u00b6 This section will guide you through following the relevant instructions from the Digit 0, 2, & 3 PCB assembly to assemble Digit 1 on the controller PCB. On the front face of the controller PCB, add the 16 pin headers as previously completed for the digit PCBs. Note the highlighted sections in the picture below that you'll add an additional, 16 pin header to the controller PCB. Don't forget to snip all the pins flush on the back side of the controller PCB, resolder each snipped pin to a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol. On the front face of the controller PCB, add the 28 5mm LEDs as previously completed for the digit PCBs. Be sure to insert the LED anode (long pin) into the through hole marked with a + . Do not solder the 5mm LED into the Top-LED1 or LWR-LED1 location on the controller PCB. Instructions later in this tutorial will detail how to install the 3mm LEDs into the Top-LED1 and LWR-LED1 locations. Finish soldering the 28 5mm LEDs by snipping all the pins flush on the back side of the controller PCB, resolder each snipped pin into a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol. On the back face of the controller PCB, add the motor pins . Note the highlighted sections in the picture below that there are two additional motor pins (pairs) you'll need to add for the colons, and an additional 3-pin connector for the Digital Humidity and Temperature (DHT) sensor. Don't forget to snip all the pins flush on the back side of the controller PCB, resolder each snipped pin to a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol. Colon Segments LEDs \u00b6 In addition to the soldering equipment you needed when previously mounting the 5mm flat top LEDs, you'll need the two 3D printed colon segments, labeled (A) in the picture below, as fabricated in the 3D print the display parts document. Following label (B) in the picture above, insert the 3mm flat top LEDs into Top-LED1 and LWR-LED1 on the front face of the controller PCB. Follow the same 5mm LED install process and be sure to insert the long lead anode of the LED into the + through hole. Following the picture below, slide the colon segments over the 3mm LED. Note the lower base of the LED lense may need to be lightly sanded with 300 grid sandpaper if it does not easily slide into the colon segment. On the back side of the controller PCB, align the colon segment so its square base is positioned into the square hole of the PCB. Solder the 3mm LEDs into place. Optionally you can use a metric ruler to verify the LEDs protrude perpendicular from the PCB and are 14mm from the PCB to the top of the lens of the LED. This optional step insures the proper length of the 3mm LEDs. PNP and NPN transistors \u00b6 Following the picture below, solder the s8550D PNP transistor into the through hole (mis-) labelled Q3 2N8550 on the front face of the controller PCB. When inserting the transistor's pins into the through holes, be sure to orient the transistors so the flat face matches the silk screen on the PCB as held by the tweezers in the picture. Following the picture below, solder the 2N2222A PNP transistor into the though hole labelled Q2 2N2222 on the front face of the controller PCB. Headers for the Pico and PicoW \u00b6 On the back side of the PCB, place the four 20 pin headers into the through holes for RASP1 and RASP2 . Carefully turn over the PCB while keeping the 20 pin headers in the through holes. Level the PCB and adjust the two 20 pin headers so they are perpendicular to the PCB. To keep the headers perpendicular to the PCB, you can provide a temporary solder onto a pin or use a jig. Solder the pins once in place. Snip all the pins flush, resolder each to a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol. Surface mount resistors \u00b6 On the back side of the PCB, solder the two 10k\u03a9 resistors onto the pads marked R2 10k and R3 10k located between the top and bottom rows of the 20-pin headers. Soldering surface mount components require a slightly different skill than through hole soldering as you'll need to use tweezers to center the resistor over the pads and apply a minimal amount of solder. Install Six, two pin (2P) Terminal Block Connectors \u00b6 There are five 2P terminal block connectors on the front face of the PCB, and one on the back side. The picture below shows a completed install of the terminal block connectors on the front face of the controller PCB. Note the arrows pointing in the direction of the terminal block connector where the wires are inserted into the ports. To follow the steps below, you'll position the front face of the controller PCB up, then work your way from the bottom left corner (1) , to the bottom right corner (5) . Follow the picture below and insert the 2P terminal block connector into the 5v-D1 through holes with the connector facing LEFT, then solder it into place. Follow the picture below and insert the 2P terminal block connector into the U7, Tx-1 Rx-1 through holes with the connector facing LEFT, then solder it into place. Follow the picture below and insert the 2P terminal block connector into the U7, GPIO19 Tx-0 through holes with the connector facing LEFT, then solder it into place. Follow the picture below and insert the 2P terminal block connector into the UART1, Tx-0 Rx-0 through holes with the connector facing RIGHT, then solder it into place. Follow the picture below, insert the 2P terminal block connector into the 5v-D0 through holes with the connector facing LEFT, then solder it into place. Position the back face of the PCB up and insert the 2P terminal block connector into the 5v-OUT through holes with the connector facing RIGHT, then solder it into place. Electrolytic and Ceramic Capacitors \u00b6 On the front of the controller PCB, align the electrolytic capacitor - sign opposite the + printed on the PCB for capacitor c01 and c1 , see the picture below. Insert the pins into the through holes, then turn the controller PCB over to the back side and solder the capacitors. On the front of the controller PCB, insert the ceramic capacitor pins into the through holes titled c02 and c2 . Ceramic capacitors are non-polarized and can be inserted in either direction. Turn the controller PCB over to the back and solder the capacitors. Mount the Motor Drivers \u00b6 On the front face of the controller PCB, mount the L293D 16-pin IC Stepper Motor Drivers as previously completed for the digit PCBs. Vertical Slide SPDT Switch \u00b6 On the back face of the controller PCB, insert the SPDT vertical slide switch pins into the ON/OFF through holes found on the top right hand corner, then solder into place. Light Dependent Resistor (LDR) \u00b6 Following the picture below and from the back face of the controller PCB, place the two LDR pins into the R1 through holes. Bend the pins of the LDR upward so the head of the LDR fits tightly on the top of controller PCB. Solder the LDR in place once properly positioned. Congratulations, you've completed assembling the controller and digit 1 PCB! Controller and Digit 1 Schematic \u00b6 The schematic in this section (below) represents the Colons & Display Microcontroller portion of the circuit for the controller and digit 1 PCB. This circuit is designed to control the colons of the display, acting as the central hub for communication, power management, and environmental data (interior and outdoor) integration. The Raspberry Pi Pico W 2040 orchestrates all operations, while the supporting components ensure stable and efficient functionality. Below is an explanation of the various components, their purpose, and how the circuitry functions: Key Components and Their Purpose \u00b6 Raspberry Pi Pico W 2040 (Microcontroller) : Purpose : Acts as the central processing unit for the display. It controls the colons and communicates with the digits. Functions : Sends commands to the digits (e.g., what to display, brightness levels). Manages `Wi-Fi connectivity for remote control and time synchronization. Handles scheduling for displaying time, date, and environmental data. Controls power-saving modes by turning off unused digits. 4-Pin UART and Low Power mode pin connector (U7) : Purpose : Provides communication between the microcontroller and the digits via UART (Universal Asynchronous Receiver-Transmitter). Pins : Tx-0 , Rx-0 , Tx-1 , Rx-1 : Used for transmitting and receiving data to/from the digits. GPIO19 : is used to turn on and off the power to the digits. L293D Motor Driver IC (U5) : Purpose : Drives the colon motors (top and lower colons) to control their movement. Functionality : Allows the microcontroller to control the colon motors for precise positioning. Pins : ENABLE1 and ENABLE2 : Controls the motor speed. INPUT1 , INPUT2 , INPUT3 , INPUT4 : Control the CW and CCW direction of the motors. OUTPUT1 , OUTPUT2 , OUTPUT3 , OUTPUT4 : Provide the output signals to the motors. 2-Pin Terminal Block Connectors : Purpose : Provide connections for external components like power, UART communication, and sensors. Examples : 5V-D1 , 5V-D0 : Power connections for the digits. UART1 , Tx-0 , Rx-0 : UART communication lines. 5V-OUT : Power output for external components. PNP and NPN Transistors (S8550 and 2N2222) : Purpose : Act as a switch for powering the DHT22 sensor. S8550 (PNP) : Used for switching power on or off to the DHT22 sensor 2N2222 (NPN) : Used to drive the base of the S8550 to manage power to the DHT22 sensor. Light Dependent Resistor (LDR) : Purpose : Measures ambient light levels to adjust the brightness of the display dynamically. Placement : Connected to R1 and works with the microcontroller to sense light intensity. Electrolytic and Ceramic Capacitors (C01, C1, C02, C2) : Purpose : Provide power filtering and decoupling to ensure stable operation of the microcontroller. Electrolytic Capacitors : Polarized, used for smoothing power supply fluctuations. Ceramic Capacitors : Non-polarized, used for high-frequency noise filtering. Vertical Slide SPDT Switch (SW1) : Purpose : Acts as an on/off switch for the entire circuit where off may be Low Power or Admin mode. When the switch is on and the 12v power supply is plugged in, the display will run using its saved settings which includes the SSID and password to the wifi network. When the switch is turned off, the disconnected 12v power supply is then connected and plugged into wall power, the Pico W provides its own wifi and web service allowing you to direcctly connect to its web page and remotely change the display settings. When the switch is changed to the off position while the display is actively running, then the display will retract all the segments and enter low power mode. Placement : Controls its internal wifi service and the flow of power to the display. Resistors (R2, R3) : Purpose : Limit current and set voltage levels in the circuit. R2 and R3 (10k\u03a9) : Pull-up or pull-down resistors for stabilizing signals. LEDs (TOP-LED1, LWR-LED1) : Purpose : Indicate the status of the colons. Placement : Positioned on the PCB to align with the colon segments. DHT22 Sensor Connector : Purpose : Provides a connection for the Digital Humidity and Temperature (DHT) sensor. Functionality : Allows the microcontroller to read environmental data for display. How the Circuitry Works \u00b6 Power Supply : Power is supplied by buck converters through the 5V-OUT and 5V-D1/D0 terminal blocks. Capacitors (C01, C1, C02, C2) stabilize the power supply and filter noise for the microcontrollers. Microcontroller Control : The Raspberry Pi Pico W 2040 serves as the brain of the circuit, controlling all components. It communicates with the digits via UART (U7) and controls the colon motors through the L293D motor driver (U5). Colon Motor Control : The L293D motor driver receives control signals from the microcontroller to drive the colon motors. The ENABLE and INPUT pins determine the speed and direction of the motors. Display Brightness Adjustment : The LDR (R1) measures ambient light levels and sends the data to the microcontroller. The microcontroller adjusts the brightness of the LEDs accordingly. Wi-Fi and Scheduler : The Raspberry Pi Pico W 2040 connects to a Wi-Fi network to synchronize time and fetch weather data. The scheduler manages the display of time, date, and environmental data. Low Power Mode : The microcontroller uses the S8550 and 2N2222 transistors to switch off power to the DHT22 when not in use. User Interaction : The SPDT switch (SW1) allows the user to turn the circuit on or off (low power or Admin mode). The LEDs provide visual feedback for the status of the colons.","title":"Controller PCB"},{"location":"assembly/controllerpcbassembly/#controller_and_digit_1_pcb_assembly","text":"Digit 1 and the colons are on a single PCB. Digit 1, powered by a Raspberry Pi Pico 2040 is identical to digits 0, 2, and 3 except it is contained on a single PCB with the controller. The Raspberry Pi Pico W 2040 operates the colons and serves as the central command and control for the display performing the following functions: Sends commands to digits as to what to display (i.e. 0-9, A-F) Sends commands for the brightness of the digits When in Admin mode, it will transmit its own wifi service to wirelessly change the display settings from a cell phone or computer. Manages the scheduler, which is the mechanism for displaying time, date, external temperature and humidity, and interior temperature and humidity. When connected to a wifi network, it will obtain its public facing IP address, look up the time zone it is located in, and set the display to the local time When connected to a wifi network, it will obtain the closest weather station and, depending on the scheduler, may display the external temperature and humidity. Manages the low power consumption mode by turning off the power to digits 0-3. When awakened, it will turn on the power to digits 0-3. Front face of the controller PCB fully assembled. Back side of the controller PCB fully assembled.","title":"Controller and Digit 1 PCB Assembly"},{"location":"assembly/controllerpcbassembly/#prerequisites","text":"Fabrication of the controller and digit one PCB 3D print of the upper and lower colons Table of components Quantity Component Image 5 16 pin IC socket 5 L293D stepper motor driver 4 20 pin female header connector 1 20 pin single row breakaway male connector 1 Vertical Slide Switch Micro High Knob 3 Pin 2 Position 1P2T SPDT Panel Mount 6 2 Pin PCB Mount Screw Terminal Block Connector Straight Pin 2 0.1\u03bc farad ceramic capacitor 2 1\u03bc farad electrolytic capacitor 1 5mm 0.5 \u03a9 ohm Photoresistor Resistor 5516 GL5516 1 S8550 TO-92 TH PNP Transistor 1 2N2222 TO-92 TH NPN Transistor 2 10K ohm 0805 Resistor 1/2w Metal Film Fixed Resistor 28 5mm Flat top LED, anode long lead (your choice of color) 2 3mm Flat top LED, anode long lead (your choice of color) 1 Raspberry Pi Pico 2040 with Headers 1 Raspberry Pi Pico W 2040 with Headers 1 Controller PCB See next section Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Isopropyl Alcohol Yes Cotton Facial Pads","title":"Prerequisites"},{"location":"assembly/controllerpcbassembly/#assemble_digit_one","text":"This section will guide you through following the relevant instructions from the Digit 0, 2, & 3 PCB assembly to assemble Digit 1 on the controller PCB. On the front face of the controller PCB, add the 16 pin headers as previously completed for the digit PCBs. Note the highlighted sections in the picture below that you'll add an additional, 16 pin header to the controller PCB. Don't forget to snip all the pins flush on the back side of the controller PCB, resolder each snipped pin to a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol. On the front face of the controller PCB, add the 28 5mm LEDs as previously completed for the digit PCBs. Be sure to insert the LED anode (long pin) into the through hole marked with a + . Do not solder the 5mm LED into the Top-LED1 or LWR-LED1 location on the controller PCB. Instructions later in this tutorial will detail how to install the 3mm LEDs into the Top-LED1 and LWR-LED1 locations. Finish soldering the 28 5mm LEDs by snipping all the pins flush on the back side of the controller PCB, resolder each snipped pin into a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol. On the back face of the controller PCB, add the motor pins . Note the highlighted sections in the picture below that there are two additional motor pins (pairs) you'll need to add for the colons, and an additional 3-pin connector for the Digital Humidity and Temperature (DHT) sensor. Don't forget to snip all the pins flush on the back side of the controller PCB, resolder each snipped pin to a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol.","title":"Assemble Digit One"},{"location":"assembly/controllerpcbassembly/#colon_segments_leds","text":"In addition to the soldering equipment you needed when previously mounting the 5mm flat top LEDs, you'll need the two 3D printed colon segments, labeled (A) in the picture below, as fabricated in the 3D print the display parts document. Following label (B) in the picture above, insert the 3mm flat top LEDs into Top-LED1 and LWR-LED1 on the front face of the controller PCB. Follow the same 5mm LED install process and be sure to insert the long lead anode of the LED into the + through hole. Following the picture below, slide the colon segments over the 3mm LED. Note the lower base of the LED lense may need to be lightly sanded with 300 grid sandpaper if it does not easily slide into the colon segment. On the back side of the controller PCB, align the colon segment so its square base is positioned into the square hole of the PCB. Solder the 3mm LEDs into place. Optionally you can use a metric ruler to verify the LEDs protrude perpendicular from the PCB and are 14mm from the PCB to the top of the lens of the LED. This optional step insures the proper length of the 3mm LEDs.","title":"Colon Segments LEDs"},{"location":"assembly/controllerpcbassembly/#pnp_and_npn_transistors","text":"Following the picture below, solder the s8550D PNP transistor into the through hole (mis-) labelled Q3 2N8550 on the front face of the controller PCB. When inserting the transistor's pins into the through holes, be sure to orient the transistors so the flat face matches the silk screen on the PCB as held by the tweezers in the picture. Following the picture below, solder the 2N2222A PNP transistor into the though hole labelled Q2 2N2222 on the front face of the controller PCB.","title":"PNP and NPN transistors"},{"location":"assembly/controllerpcbassembly/#headers_for_the_pico_and_picow","text":"On the back side of the PCB, place the four 20 pin headers into the through holes for RASP1 and RASP2 . Carefully turn over the PCB while keeping the 20 pin headers in the through holes. Level the PCB and adjust the two 20 pin headers so they are perpendicular to the PCB. To keep the headers perpendicular to the PCB, you can provide a temporary solder onto a pin or use a jig. Solder the pins once in place. Snip all the pins flush, resolder each to a smooth bead, then remove the flux with cotton dabbed with isopropyl alcohol.","title":"Headers for the Pico and PicoW"},{"location":"assembly/controllerpcbassembly/#surface_mount_resistors","text":"On the back side of the PCB, solder the two 10k\u03a9 resistors onto the pads marked R2 10k and R3 10k located between the top and bottom rows of the 20-pin headers. Soldering surface mount components require a slightly different skill than through hole soldering as you'll need to use tweezers to center the resistor over the pads and apply a minimal amount of solder.","title":"Surface mount resistors"},{"location":"assembly/controllerpcbassembly/#install_six_two_pin_2p_terminal_block_connectors","text":"There are five 2P terminal block connectors on the front face of the PCB, and one on the back side. The picture below shows a completed install of the terminal block connectors on the front face of the controller PCB. Note the arrows pointing in the direction of the terminal block connector where the wires are inserted into the ports. To follow the steps below, you'll position the front face of the controller PCB up, then work your way from the bottom left corner (1) , to the bottom right corner (5) . Follow the picture below and insert the 2P terminal block connector into the 5v-D1 through holes with the connector facing LEFT, then solder it into place. Follow the picture below and insert the 2P terminal block connector into the U7, Tx-1 Rx-1 through holes with the connector facing LEFT, then solder it into place. Follow the picture below and insert the 2P terminal block connector into the U7, GPIO19 Tx-0 through holes with the connector facing LEFT, then solder it into place. Follow the picture below and insert the 2P terminal block connector into the UART1, Tx-0 Rx-0 through holes with the connector facing RIGHT, then solder it into place. Follow the picture below, insert the 2P terminal block connector into the 5v-D0 through holes with the connector facing LEFT, then solder it into place. Position the back face of the PCB up and insert the 2P terminal block connector into the 5v-OUT through holes with the connector facing RIGHT, then solder it into place.","title":"Install Six, two pin (2P) Terminal Block Connectors"},{"location":"assembly/controllerpcbassembly/#electrolytic_and_ceramic_capacitors","text":"On the front of the controller PCB, align the electrolytic capacitor - sign opposite the + printed on the PCB for capacitor c01 and c1 , see the picture below. Insert the pins into the through holes, then turn the controller PCB over to the back side and solder the capacitors. On the front of the controller PCB, insert the ceramic capacitor pins into the through holes titled c02 and c2 . Ceramic capacitors are non-polarized and can be inserted in either direction. Turn the controller PCB over to the back and solder the capacitors.","title":"Electrolytic and Ceramic Capacitors"},{"location":"assembly/controllerpcbassembly/#mount_the_motor_drivers","text":"On the front face of the controller PCB, mount the L293D 16-pin IC Stepper Motor Drivers as previously completed for the digit PCBs.","title":"Mount the Motor Drivers"},{"location":"assembly/controllerpcbassembly/#vertical_slide_spdt_switch","text":"On the back face of the controller PCB, insert the SPDT vertical slide switch pins into the ON/OFF through holes found on the top right hand corner, then solder into place.","title":"Vertical Slide SPDT Switch"},{"location":"assembly/controllerpcbassembly/#light_dependent_resistor_ldr","text":"Following the picture below and from the back face of the controller PCB, place the two LDR pins into the R1 through holes. Bend the pins of the LDR upward so the head of the LDR fits tightly on the top of controller PCB. Solder the LDR in place once properly positioned. Congratulations, you've completed assembling the controller and digit 1 PCB!","title":"Light Dependent Resistor (LDR)"},{"location":"assembly/controllerpcbassembly/#controller_and_digit_1_schematic","text":"The schematic in this section (below) represents the Colons & Display Microcontroller portion of the circuit for the controller and digit 1 PCB. This circuit is designed to control the colons of the display, acting as the central hub for communication, power management, and environmental data (interior and outdoor) integration. The Raspberry Pi Pico W 2040 orchestrates all operations, while the supporting components ensure stable and efficient functionality. Below is an explanation of the various components, their purpose, and how the circuitry functions:","title":"Controller and Digit 1 Schematic"},{"location":"assembly/controllerpcbassembly/#key_components_and_their_purpose","text":"Raspberry Pi Pico W 2040 (Microcontroller) : Purpose : Acts as the central processing unit for the display. It controls the colons and communicates with the digits. Functions : Sends commands to the digits (e.g., what to display, brightness levels). Manages `Wi-Fi connectivity for remote control and time synchronization. Handles scheduling for displaying time, date, and environmental data. Controls power-saving modes by turning off unused digits. 4-Pin UART and Low Power mode pin connector (U7) : Purpose : Provides communication between the microcontroller and the digits via UART (Universal Asynchronous Receiver-Transmitter). Pins : Tx-0 , Rx-0 , Tx-1 , Rx-1 : Used for transmitting and receiving data to/from the digits. GPIO19 : is used to turn on and off the power to the digits. L293D Motor Driver IC (U5) : Purpose : Drives the colon motors (top and lower colons) to control their movement. Functionality : Allows the microcontroller to control the colon motors for precise positioning. Pins : ENABLE1 and ENABLE2 : Controls the motor speed. INPUT1 , INPUT2 , INPUT3 , INPUT4 : Control the CW and CCW direction of the motors. OUTPUT1 , OUTPUT2 , OUTPUT3 , OUTPUT4 : Provide the output signals to the motors. 2-Pin Terminal Block Connectors : Purpose : Provide connections for external components like power, UART communication, and sensors. Examples : 5V-D1 , 5V-D0 : Power connections for the digits. UART1 , Tx-0 , Rx-0 : UART communication lines. 5V-OUT : Power output for external components. PNP and NPN Transistors (S8550 and 2N2222) : Purpose : Act as a switch for powering the DHT22 sensor. S8550 (PNP) : Used for switching power on or off to the DHT22 sensor 2N2222 (NPN) : Used to drive the base of the S8550 to manage power to the DHT22 sensor. Light Dependent Resistor (LDR) : Purpose : Measures ambient light levels to adjust the brightness of the display dynamically. Placement : Connected to R1 and works with the microcontroller to sense light intensity. Electrolytic and Ceramic Capacitors (C01, C1, C02, C2) : Purpose : Provide power filtering and decoupling to ensure stable operation of the microcontroller. Electrolytic Capacitors : Polarized, used for smoothing power supply fluctuations. Ceramic Capacitors : Non-polarized, used for high-frequency noise filtering. Vertical Slide SPDT Switch (SW1) : Purpose : Acts as an on/off switch for the entire circuit where off may be Low Power or Admin mode. When the switch is on and the 12v power supply is plugged in, the display will run using its saved settings which includes the SSID and password to the wifi network. When the switch is turned off, the disconnected 12v power supply is then connected and plugged into wall power, the Pico W provides its own wifi and web service allowing you to direcctly connect to its web page and remotely change the display settings. When the switch is changed to the off position while the display is actively running, then the display will retract all the segments and enter low power mode. Placement : Controls its internal wifi service and the flow of power to the display. Resistors (R2, R3) : Purpose : Limit current and set voltage levels in the circuit. R2 and R3 (10k\u03a9) : Pull-up or pull-down resistors for stabilizing signals. LEDs (TOP-LED1, LWR-LED1) : Purpose : Indicate the status of the colons. Placement : Positioned on the PCB to align with the colon segments. DHT22 Sensor Connector : Purpose : Provides a connection for the Digital Humidity and Temperature (DHT) sensor. Functionality : Allows the microcontroller to read environmental data for display.","title":"Key Components and Their Purpose"},{"location":"assembly/controllerpcbassembly/#how_the_circuitry_works","text":"Power Supply : Power is supplied by buck converters through the 5V-OUT and 5V-D1/D0 terminal blocks. Capacitors (C01, C1, C02, C2) stabilize the power supply and filter noise for the microcontrollers. Microcontroller Control : The Raspberry Pi Pico W 2040 serves as the brain of the circuit, controlling all components. It communicates with the digits via UART (U7) and controls the colon motors through the L293D motor driver (U5). Colon Motor Control : The L293D motor driver receives control signals from the microcontroller to drive the colon motors. The ENABLE and INPUT pins determine the speed and direction of the motors. Display Brightness Adjustment : The LDR (R1) measures ambient light levels and sends the data to the microcontroller. The microcontroller adjusts the brightness of the LEDs accordingly. Wi-Fi and Scheduler : The Raspberry Pi Pico W 2040 connects to a Wi-Fi network to synchronize time and fetch weather data. The scheduler manages the display of time, date, and environmental data. Low Power Mode : The microcontroller uses the S8550 and 2N2222 transistors to switch off power to the DHT22 when not in use. User Interaction : The SPDT switch (SW1) allows the user to turn the circuit on or off (low power or Admin mode). The LEDs provide visual feedback for the status of the colons.","title":"How the Circuitry Works"},{"location":"assembly/controllerpcbtest/","text":"Controller PCB Test \u00b6 Run the tests in this section after assembling the controller PCB to ensure all the components on the PCB are soldered and functional. Any defective electronic component on the controller PCB will need to be replaced before completing the project. Prerequisites \u00b6 Completed Controller and Digit 1 PCB ready for actuators . Computer and microcontroller with the prerequisite software . Deployed the Controller Project to the Controller PCB Completed the digit PCB test for digit 1 on the controller PCB. Test the LED and Motor Segments \u00b6 From Visual Studio Code, (A) select the File->Open Folder menu, (B) select the conductor folder, then (C) click the Select Folder button. On the Controller and Digit 1 PCB, (A) plug the USB cable from your computer into the USB port on the Raspberry Pi Pico W 2040. (B) Connect a motor actuator to the TOP-LED1 with the white wire dupont connector plugged into CW pin and the black wire plugged into the CCW pin. From Visual Studio Code, (A) select the digit_colon.py file, then (B) select MicroPico vREPL from the terminal pane menu. From the Visual Studio Code status bar, (A) verify the Raspberry Pi Pico W is connected. (B) Click the Run button to start the controller PCB test application. The console test application shows various options that relate to the top or bottom colon: the TOP-LED1 is 0 and the LWR-LED1 is 1. Extend TOP-LED1 by typing e0 in the console. Following the picture below, the TOP-LED1 LED light up and the motor briefly turns on. From the terminal session, type r0 to retract the the TOP-LED1 . Repeat steps 5 and 6 to COLON-LWR . Unplug the USB from the Raspberry Pi Pico W 2040 upon completion Test the Light Detection \u00b6 On the Controller and Digit 1 PCB, plug the USB cable from your computer into the USB port on the Raspberry Pi Pico W 2040. From Visual Studio Code (A) select the file photoresistor.py , then (B) click the Run button in the status bar. The terminal pane will print the light level, between 0 and 9, depending on the brightness of the light as detected by the LDR. Unplug the USB from the Raspberry Pi Pico W 2040 upon completion Test the Humidity and Temperature \u00b6 On the Controller and Digit 1 PCB, (A) plug the USB cable from your computer into the USB port on the Raspberry Pi Pico W 2040. (B) Connect the DHT22 sensor by ensuring the - Data + pins in the DHT1 silk screen align with the + out - pins on the DHT22 sensor. From Visual Studio Code (A) select the file dhttest.py , then (B) click the Run button in the status bar. Verify the output in the terminal shows the temperature and humidity. Unplug the USB from the Raspberry Pi Pico W 2040 upon completion","title":"Controller PCB Test"},{"location":"assembly/controllerpcbtest/#controller_pcb_test","text":"Run the tests in this section after assembling the controller PCB to ensure all the components on the PCB are soldered and functional. Any defective electronic component on the controller PCB will need to be replaced before completing the project.","title":"Controller PCB Test"},{"location":"assembly/controllerpcbtest/#prerequisites","text":"Completed Controller and Digit 1 PCB ready for actuators . Computer and microcontroller with the prerequisite software . Deployed the Controller Project to the Controller PCB Completed the digit PCB test for digit 1 on the controller PCB.","title":"Prerequisites"},{"location":"assembly/controllerpcbtest/#test_the_led_and_motor_segments","text":"From Visual Studio Code, (A) select the File->Open Folder menu, (B) select the conductor folder, then (C) click the Select Folder button. On the Controller and Digit 1 PCB, (A) plug the USB cable from your computer into the USB port on the Raspberry Pi Pico W 2040. (B) Connect a motor actuator to the TOP-LED1 with the white wire dupont connector plugged into CW pin and the black wire plugged into the CCW pin. From Visual Studio Code, (A) select the digit_colon.py file, then (B) select MicroPico vREPL from the terminal pane menu. From the Visual Studio Code status bar, (A) verify the Raspberry Pi Pico W is connected. (B) Click the Run button to start the controller PCB test application. The console test application shows various options that relate to the top or bottom colon: the TOP-LED1 is 0 and the LWR-LED1 is 1. Extend TOP-LED1 by typing e0 in the console. Following the picture below, the TOP-LED1 LED light up and the motor briefly turns on. From the terminal session, type r0 to retract the the TOP-LED1 . Repeat steps 5 and 6 to COLON-LWR . Unplug the USB from the Raspberry Pi Pico W 2040 upon completion","title":"Test the LED and Motor Segments"},{"location":"assembly/controllerpcbtest/#test_the_light_detection","text":"On the Controller and Digit 1 PCB, plug the USB cable from your computer into the USB port on the Raspberry Pi Pico W 2040. From Visual Studio Code (A) select the file photoresistor.py , then (B) click the Run button in the status bar. The terminal pane will print the light level, between 0 and 9, depending on the brightness of the light as detected by the LDR. Unplug the USB from the Raspberry Pi Pico W 2040 upon completion","title":"Test the Light Detection"},{"location":"assembly/controllerpcbtest/#test_the_humidity_and_temperature","text":"On the Controller and Digit 1 PCB, (A) plug the USB cable from your computer into the USB port on the Raspberry Pi Pico W 2040. (B) Connect the DHT22 sensor by ensuring the - Data + pins in the DHT1 silk screen align with the + out - pins on the DHT22 sensor. From Visual Studio Code (A) select the file dhttest.py , then (B) click the Run button in the status bar. Verify the output in the terminal shows the temperature and humidity. Unplug the USB from the Raspberry Pi Pico W 2040 upon completion","title":"Test the Humidity and Temperature"},{"location":"assembly/deploycontrollerproject/","text":"Deploy the Controller Project to the Controller PCB \u00b6 In this section you will upload code to your Raspberry Pi Pico W 2040 from your computer. Prerequisites \u00b6 Completed the assembly and soldering of the Controller PCB Created a fork of the Kinetic-Display GitHub repository, see Software and Microcontroller Preparation Deployed the digit and controller directories, also see Software and Microcontroller Preparation Configure and Deploy the Controller Project \u00b6 Connect your Computer to the controller PCB Pico W 2040 per the instructions on Verify Micropython on your Raspberry Pi Pico Following the screen capture below from VS Code, select (A) File->Open Folder... , (B) open the deploy/conductor folder you deployed during step 4 in the section Fork and Clone the Repository , then (C) click the \"Select Folder\" button. Following the screen capture below, select the Explorer icon ( A ) in the left Activity bar . Click the digit.json file ( B ) in the Explorer pane. Change the \"digit\": value ( C ) to 4 . Don't forget to save the file after changing the value. Following the screen capture below, create a new terminal by (A) clicking the elipse ... , then (B) Terminal->New Terminal submenu. Following the picture below, connect your computer's USB port to the Raspberry Pi Pico W 2040. Following the screen capture below, (A) select the drop-down menu in the terminal pane, then (B) click the MicroPico vREPL submenu item. Following the screen capture below, click All Commands ( A ) on the status bar . In the Command text field ( B ), type \" Upload \" after \" > MicroPico: \", then select the dropdown MicroPico: Upload project to Pico . Congratulations on successfully uploading the code to the Digit's Raspberry Pi Pico W!","title":"Deploy Controller Project"},{"location":"assembly/deploycontrollerproject/#deploy_the_controller_project_to_the_controller_pcb","text":"In this section you will upload code to your Raspberry Pi Pico W 2040 from your computer.","title":"Deploy the Controller Project to the Controller PCB"},{"location":"assembly/deploycontrollerproject/#prerequisites","text":"Completed the assembly and soldering of the Controller PCB Created a fork of the Kinetic-Display GitHub repository, see Software and Microcontroller Preparation Deployed the digit and controller directories, also see Software and Microcontroller Preparation","title":"Prerequisites"},{"location":"assembly/deploycontrollerproject/#configure_and_deploy_the_controller_project","text":"Connect your Computer to the controller PCB Pico W 2040 per the instructions on Verify Micropython on your Raspberry Pi Pico Following the screen capture below from VS Code, select (A) File->Open Folder... , (B) open the deploy/conductor folder you deployed during step 4 in the section Fork and Clone the Repository , then (C) click the \"Select Folder\" button. Following the screen capture below, select the Explorer icon ( A ) in the left Activity bar . Click the digit.json file ( B ) in the Explorer pane. Change the \"digit\": value ( C ) to 4 . Don't forget to save the file after changing the value. Following the screen capture below, create a new terminal by (A) clicking the elipse ... , then (B) Terminal->New Terminal submenu. Following the picture below, connect your computer's USB port to the Raspberry Pi Pico W 2040. Following the screen capture below, (A) select the drop-down menu in the terminal pane, then (B) click the MicroPico vREPL submenu item. Following the screen capture below, click All Commands ( A ) on the status bar . In the Command text field ( B ), type \" Upload \" after \" > MicroPico: \", then select the dropdown MicroPico: Upload project to Pico . Congratulations on successfully uploading the code to the Digit's Raspberry Pi Pico W!","title":"Configure and Deploy the Controller Project"},{"location":"assembly/deploydigitproject/","text":"Deploy the Digit Project to the Digit PCB \u00b6 In this section you will upload code to your Raspberry Pi Pico 2040 from your computer. Prerequisites \u00b6 Completed the assembly and soldering of the Digit PCB Created a fork of the Kinetic-Display GitHub repository, see Software and Microcontroller Preparation Deployed the digit directory, also see Software and Microcontroller Preparation Configure and Deploy the Digit Project \u00b6 Connect your Computer to the digit PCB Pico per the instructions on Verify Micropython on your Raspberry Pi Pico Following the screen capture below from VS Code, select (A) File->Open Folder... , (B) open the deploy/digit folder you deployed during step 4 in the section Fork and Clone the Repository , then (C) click the \"Select Folder\" button. Following the screen capture below, select the Explorer icon ( A ) in the left Activity bar . Click the digit.json file ( B ) in the Explorer pane. Change the \"digit\": value ( C ) to match the PCB labelled number 0-3. Don't forget to save the file after changing the value. Warning It is very important to have the digit value in the digit.json file match the PCB's labelled value. 4. Following the screen capture below, create a new terminal by (A) clicking the elipse ... , then (B) Terminal->New Terminal submenu. 5. Connect your computer's USB port to a Digit's Raspberry Pi Pico. Following the screen capture below, (A) select the drop-down menu in the terminal pane, then (B) click the MicroPico vREPL submenu item. 6. Following the screen capture below, click All Commands ( A ) on the status bar . In the Command text field ( B ), type \" Upload \" after \" > MicroPico: \", then select the dropdown MicroPico: Upload project to Pico . Congratulations on successfully uploading the code to the Digit's Raspberry Pi Pico!","title":"Deploy Digit Project"},{"location":"assembly/deploydigitproject/#deploy_the_digit_project_to_the_digit_pcb","text":"In this section you will upload code to your Raspberry Pi Pico 2040 from your computer.","title":"Deploy the Digit Project to the Digit PCB"},{"location":"assembly/deploydigitproject/#prerequisites","text":"Completed the assembly and soldering of the Digit PCB Created a fork of the Kinetic-Display GitHub repository, see Software and Microcontroller Preparation Deployed the digit directory, also see Software and Microcontroller Preparation","title":"Prerequisites"},{"location":"assembly/deploydigitproject/#configure_and_deploy_the_digit_project","text":"Connect your Computer to the digit PCB Pico per the instructions on Verify Micropython on your Raspberry Pi Pico Following the screen capture below from VS Code, select (A) File->Open Folder... , (B) open the deploy/digit folder you deployed during step 4 in the section Fork and Clone the Repository , then (C) click the \"Select Folder\" button. Following the screen capture below, select the Explorer icon ( A ) in the left Activity bar . Click the digit.json file ( B ) in the Explorer pane. Change the \"digit\": value ( C ) to match the PCB labelled number 0-3. Don't forget to save the file after changing the value. Warning It is very important to have the digit value in the digit.json file match the PCB's labelled value. 4. Following the screen capture below, create a new terminal by (A) clicking the elipse ... , then (B) Terminal->New Terminal submenu. 5. Connect your computer's USB port to a Digit's Raspberry Pi Pico. Following the screen capture below, (A) select the drop-down menu in the terminal pane, then (B) click the MicroPico vREPL submenu item. 6. Following the screen capture below, click All Commands ( A ) on the status bar . In the Command text field ( B ), type \" Upload \" after \" > MicroPico: \", then select the dropdown MicroPico: Upload project to Pico . Congratulations on successfully uploading the code to the Digit's Raspberry Pi Pico!","title":"Configure and Deploy the Digit Project"},{"location":"assembly/digitpcbassembly/","text":"Digit PCB Assembly \u00b6 The display has 4 digits. The digits are numbered from right to left, 0-3, when looking at the front of display. The digit PCBs are digits 0, 2, and 3 whereas the controller PCB is digit 1 and includes the colons. The digit PCBs are the foundation of the display and serve several important functions: provides a mechanical backstop to the actuator's segment when retracting into the display provides a consistent distance of dispersion for the lighting of the segment, giving each segment a uniform glow rather than spots of light provides the traditional role of reducing the wiring, efficiently connects various electronic component minimizing the overall size, reliable, cost-effective, and consistent quality of the circuitry This section details the assembly of the digit PCBs. Note the pictures below showing the fully assembled PCBs that will be covered in this section. Front face fully assembled. Back face fully assembled. Prerequisites \u00b6 Fabrication of the digit PCBs Table of components and tools Table of components Quantity Component Image 4 16 pin IC socket 4 L293D stepper motor driver 2 20 pin female header connector 1 20 pin single row breakaway male connector 2 2 Pin PCB Mount Screw Terminal Block Connector Straight Pin 1 0.1\u03bc farad ceramic capacitor 1 1\u03bc farad electrolytic capacitor 28 5mm Flat top LED, anode long lead (any color) 1 Raspberry Pi Pico 2040 with Headers 3 Digit PCBs See labelling the digit PCBs Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Isopropyl Alcohol Yes Cotton Facial Pads No Label maker Label the Digit PCB \u00b6 Using a label maker or piece of tape and pen, create two sets of 3 labels: \"0\", \"2\", and \"3\". Add the (A) label to the (B) FRONT FACING SIDE of each of the 3 digit PCBs as placed in the picture below. Also note that digit 0 (C) in the picture below is a completed digit PCB ready for mounting onto the display. Add the (A) label to the (B) BACK FACING SIDE of each of the 3 digit PCBs as placed in the picture below. Add the 16 pin headers \u00b6 From the front side of the digit PCB, (A) insert the 16 pin header into the through holes by aligning the notch with the digit PCB top silk layer outline of the 16 pins. The notch in the 16-pin header is used to ensure correct orientation when connecting the L293D motor driver. Carefully turn over the digit PCB while keeping the 16 pin header in the through holes. (A) Solder the 16 pins and repeat the previous step until all 4 of the 16 pin headers are soldered into place. From the back of the digit PCB, (A) cut off the soldered pins. Touch up the clipped pins with a small bit of solder to make (A) smooth rounded beads instead of sharp points. Clean up the soldered pins by removing the flux using a cotton pad dabbed with isopropyl alcohol. Repeat the previous step if you find your cotton pad is being torn from any protruding pins. Add the 28 LEDs \u00b6 Note BEFORE SOLDERING LEDS ONTO YOUR DIGIT PCB, be sure to test your LEDs on a breadboard and use a digital camera to spot any variations in color when the LEDs are lit. Below is a photo showing the color variation of blue 5mm LEDs within the same batch using a breadboards power rail with (C) 2.63v. Note the (A) light blue LEDs and the (B) purple LEDs within the same blue batch of LEDs. There are seven segments \"A\" through \"G\" each with four LEDs. From the front of the digit PCB, start with segment \"A\" by inserting the LED's (A) long lead (anode) into the \"+\" through hole. Repeat the process for all segment-A LEDs. Carefully turn over the digit PCB and rest it with the back facing up. Solder each LED pin onto the digit PCB, then (A) snip off the excess. Touch up the clipped pins with a small bit of solder to make smooth rounded beads instead of sharp points. Clean the flux off with (A) a cotton pad dabbed in isopropyl alcohol. Repeat the previous steps for segments B through G until all 28 LEDs are soldered onto the PCB. The picture below is the front face of the digit with all 28 LEDs soldered into place. Add the Motor Pins \u00b6 Break out 7 pairs of 2.54mm male breakaway pins using needle nose pliers. On the back of the digit PCB, place the short end of the pin-pair into each actuator segment through hole (seg-A through seg-G). On the front of the digit PCB motor solder pins into place. Continuing on the front of the digit PCB, cut the pins flush on the pcb, then resolder the snipped pins to create smooth beads. Clean off the flux residue using a cotton pad dabbed in isopropyl alcohol. Mount the Motor Drivers \u00b6 From the front of the digit PCB, orient the motor driver so the notch (or pin 1) is aligned with the 16 pin header. CAREFULLY insert the motor driver into the 16 pin header and ensure none of the pins on the motor driver are bent or protruding from the 16 pin header. Repeat the install for the remaining motor drivers. Add the PCB Mount, Two pin (2P) Terminal Block Connectors \u00b6 On the front of the digit PCB, insert the PCB two pin terminal block connector into the 5v through holes so the face of the connector where the wires are inserted points toward the LEDs on the PCB. Solder the terminal block connector pins on the back of the digit PCB. On the front of the digit PCB position the 2 pin terminal block connector facing away from the LEDs. For PCBs labelled \"2\" & \"3\" , insert the connector pins into the UART Tx-1/Rx-1 through holes. For the digit PCB labelled \"0\" , insert the connector into the Tx-0/Rx-0 through holes. On the back of the digit PCB, solder the remaining connector pins, cut the pins flush, resolder to a smooth bead, then remove the flux wth a cotton dabbed with isopropyl alcohol. Add the Electrolytic and Ceramic Capacitors \u00b6 On the front of the digit PCB, align the electrolytic capacitor - sign opposite the + printed on the PCB for capacitor c1 , see the picture below. Insert the pins into the through holes, then turn the digit PCB over to the back side and solder the capacitor. On the front of the digit PCB, insert the ceramic capacitor pins into the through holes titled c2 . Turn the digit PCB over to the back and solder the capacitor. Note Ceramic capacitors do not have polarity and can be inserted in any direction. 3. On the back of the digit PCB, cut the pins flush, resolder to a smooth bead, then remove the flux with a cotton dabbed with isopropyl alcohol. Add the 20 pin Headers and Install the Microcontroller \u00b6 On the back side of the PCB, place the two 20 pin headers into the through holes for RASP1 . Carefully turn over the PCB while keeping the 20 pin headers in the through holes. Level the PCB and adjust the two 20 pin headers so they are perpendicular to the PCB. Solder the pins once in place. Snip all 40 of the pins flush, resolder each to a smooth bead, then remove the flux with a cotton dabbed with isopropyl alcohol. Orient the Raspberry Pi Pico 2040 microcontroller so the USB port is facing in the same direction as the PCB silk screen, then gently mount the microcontroller onto the header. Congratulations for assembling a digit PCB! Be sure to test the digit PCB before assembling the next one. Digit Schematics \u00b6 The schematic diagrams in this section represent the Digit Motor Controller and Digits Microcontroller circuits: Motor Controller Circuit drives the actuator motors for each segment (A-G) to physically move the segments into position, turns on the segment LEDs when extended, and turns off the segment LEDs when retracted. Microcontroller Circuit controls the LEDs for segment illumination (brightness) and communicates with the main controller (Raspberry Pi Pico W 2040) to receive display commands. Together, these circuits enable the digit PCBs to display numbers and characters as part of the larger kinetic display system. Below is an explanation of the components, their purpose, and how the circuitry functions. Digit Motor Controller Schematic \u00b6 The schematic in the section shows the motor control circuitry for the digit's seven-segment actuators (A-G). Each segment is controlled by a motor driver IC (L293D) connected to the Raspberry Pi Pico 2040. Note the L293D IC motor driver is considered outdated, but used in this circuit as it works well with toy motors and costs slightly less. For more details see the L293D motorcontroller datasheet . Key Motor Controller Components and Their Purpose \u00b6 L293D Motor Driver ICs (U1, U2, U3, U4) : Purpose : Control the bidirectional movement of the actuator motors for each segment (A-G). Functionality : Each IC controls two segments, allowing precise movement of the actuators. Pins : ENABLE1 and ENABLE2 : Controls the motor speed. INPUT1 , INPUT2 , INPUT3 , INPUT4 : Control the CW (Clockwise) and CCW (Counter clockwise) direction of the motor. OUTPUT1 , OUTPUT2 , OUTPUT3 , OUTPUT4 : Provide the output signals to the motors. Actuator Motors (SEG-A to SEG-G) : Purpose : Physically extends and retracts the segments of the seven-segment display to create the desired digit. Pins : CW extends the segment and CCW retracts the segment: Control the extension and retraction of the actuator. Capacitors (C1, C2) : Purpose : Provide power decoupling and noise filtering for the motor drivers. C1 (1\u03bcF): Stabilizes the power supply for the motor drivers. C2 (0.1\u03bcF): Filters high-frequency noise. GPIO Pins (from Raspberry Pi Pico 2040) : Purpose : Send control signals to the motor drivers. Pins : GPIO11 , GPIO12 , GPIO15 , etc.: Control the INPUT and ENABLE pins of the motor drivers. How the Motor Controller Circuit Works \u00b6 Motor Control : The Raspberry Pi Pico 2040 sends signals to the INPUT and ENABLE pins of the L293D ICs. Based on these signals, the motor driver controls the direction and speed of the actuator motors. Segment Movement : Each segment (A-G) is connected to a motor. The motor moves the segment into position to display the desired digit. Power Stabilization : The capacitors C1 and C2 ensure stable operation of the motor drivers by filtering noise and stabilizing the power supply. Digit Microcontroller Schematic \u00b6 The schematic in this section shows the microcontroller circuitry for controlling the LEDs and communicating with the motor controllers. Key Microcontroller Components and Their Purpose \u00b6 Raspberry Pi Pico 2040 (Microcontroller) : Purpose : Acts as the central processing unit for the digit PCB. Functions : Sends control signals to the motor drivers for segment movement. Controls the LEDs for segment illumination. Communicates with the main controller PCB via UART. LEDs (A-LED1 to G-LED4) : Purpose : Illuminates the segments of the seven-segment display. Configuration : Each segment (A-G) has four LEDs connected in parallel. The anode + is connected to the GPIO pins, and the cathode - is connected to ground. Brightness is controlled by the GPIO PWM signals from the microcontroller. Resistors (not used in lieu of PWM) : Purpose : Prevents the LEDs from exceeding their maximum rated power capabilities. The software prevents any LED PWM signal from exceeding a 220 ohm resistor for 3.3v and therefore resistors are not needed. UART Connector : Purpose : Provides communication between the digit PCB and the main controller PCB. Pins : Rx-1 , Tx-1 , Rx-0 , Tx-0 : Used for transmitting and receiving data. Capacitors (C1, C2) : Purpose : Provide power decoupling and noise filtering for the microcontroller and LEDs. C1 (1\u03bcF): Stabilizes the power supply for the LEDs. C2 (0.1\u03bcF): Filters high-frequency noise. How the Microcontroller Circuit Works \u00b6 Segment Control : The Raspberry Pi Pico 2040 controls motor direction, extending or retracting the segment, and speed from GPIO pins connected to the motor controllers. The microcontroller determines the length of time the motor is running (between 1/5th and 1/4th of a second), the CW (extend) or CCW (retract) direction of the actuator, and the speed of the motor which is a value typically between 50% to 100% of 5v. LED Control : The Raspberry Pi Pico 2040 controls the LEDs by PWM from the GPIO pins that are connected to the anode of each LED. This allows the microcontroller to turn on/off specific LEDs, control the brightness, and illuminates the desired segments. Communication : The UART connector allows the digit PCB to receive UART commands from the controller and digit 1 PCB. UART commands include which digit to display and brightness levels, as well as various actuator and digit settings. State : The Raspberry Pi Pico 2040 stores the digit state at all times in order to gracefully transition from one number or character to the next and handle graceful or ungraceful power off situations. The state includes which segment is extended or retracted, the type of character map used by the digits, as well as the speed and length of time to run the motors. PowerCommands Stabilization : The capacitors C1 , C2 ensure stable operation of the LEDs and microcontroller by filtering noise and stabilizing the power supply.","title":"Digit PCBs"},{"location":"assembly/digitpcbassembly/#digit_pcb_assembly","text":"The display has 4 digits. The digits are numbered from right to left, 0-3, when looking at the front of display. The digit PCBs are digits 0, 2, and 3 whereas the controller PCB is digit 1 and includes the colons. The digit PCBs are the foundation of the display and serve several important functions: provides a mechanical backstop to the actuator's segment when retracting into the display provides a consistent distance of dispersion for the lighting of the segment, giving each segment a uniform glow rather than spots of light provides the traditional role of reducing the wiring, efficiently connects various electronic component minimizing the overall size, reliable, cost-effective, and consistent quality of the circuitry This section details the assembly of the digit PCBs. Note the pictures below showing the fully assembled PCBs that will be covered in this section. Front face fully assembled. Back face fully assembled.","title":"Digit PCB Assembly"},{"location":"assembly/digitpcbassembly/#prerequisites","text":"Fabrication of the digit PCBs Table of components and tools Table of components Quantity Component Image 4 16 pin IC socket 4 L293D stepper motor driver 2 20 pin female header connector 1 20 pin single row breakaway male connector 2 2 Pin PCB Mount Screw Terminal Block Connector Straight Pin 1 0.1\u03bc farad ceramic capacitor 1 1\u03bc farad electrolytic capacitor 28 5mm Flat top LED, anode long lead (any color) 1 Raspberry Pi Pico 2040 with Headers 3 Digit PCBs See labelling the digit PCBs Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Isopropyl Alcohol Yes Cotton Facial Pads No Label maker","title":"Prerequisites"},{"location":"assembly/digitpcbassembly/#label_the_digit_pcb","text":"Using a label maker or piece of tape and pen, create two sets of 3 labels: \"0\", \"2\", and \"3\". Add the (A) label to the (B) FRONT FACING SIDE of each of the 3 digit PCBs as placed in the picture below. Also note that digit 0 (C) in the picture below is a completed digit PCB ready for mounting onto the display. Add the (A) label to the (B) BACK FACING SIDE of each of the 3 digit PCBs as placed in the picture below.","title":"Label the Digit PCB"},{"location":"assembly/digitpcbassembly/#add_the_16_pin_headers","text":"From the front side of the digit PCB, (A) insert the 16 pin header into the through holes by aligning the notch with the digit PCB top silk layer outline of the 16 pins. The notch in the 16-pin header is used to ensure correct orientation when connecting the L293D motor driver. Carefully turn over the digit PCB while keeping the 16 pin header in the through holes. (A) Solder the 16 pins and repeat the previous step until all 4 of the 16 pin headers are soldered into place. From the back of the digit PCB, (A) cut off the soldered pins. Touch up the clipped pins with a small bit of solder to make (A) smooth rounded beads instead of sharp points. Clean up the soldered pins by removing the flux using a cotton pad dabbed with isopropyl alcohol. Repeat the previous step if you find your cotton pad is being torn from any protruding pins.","title":"Add the 16 pin headers"},{"location":"assembly/digitpcbassembly/#add_the_28_leds","text":"Note BEFORE SOLDERING LEDS ONTO YOUR DIGIT PCB, be sure to test your LEDs on a breadboard and use a digital camera to spot any variations in color when the LEDs are lit. Below is a photo showing the color variation of blue 5mm LEDs within the same batch using a breadboards power rail with (C) 2.63v. Note the (A) light blue LEDs and the (B) purple LEDs within the same blue batch of LEDs. There are seven segments \"A\" through \"G\" each with four LEDs. From the front of the digit PCB, start with segment \"A\" by inserting the LED's (A) long lead (anode) into the \"+\" through hole. Repeat the process for all segment-A LEDs. Carefully turn over the digit PCB and rest it with the back facing up. Solder each LED pin onto the digit PCB, then (A) snip off the excess. Touch up the clipped pins with a small bit of solder to make smooth rounded beads instead of sharp points. Clean the flux off with (A) a cotton pad dabbed in isopropyl alcohol. Repeat the previous steps for segments B through G until all 28 LEDs are soldered onto the PCB. The picture below is the front face of the digit with all 28 LEDs soldered into place.","title":"Add the 28 LEDs"},{"location":"assembly/digitpcbassembly/#add_the_motor_pins","text":"Break out 7 pairs of 2.54mm male breakaway pins using needle nose pliers. On the back of the digit PCB, place the short end of the pin-pair into each actuator segment through hole (seg-A through seg-G). On the front of the digit PCB motor solder pins into place. Continuing on the front of the digit PCB, cut the pins flush on the pcb, then resolder the snipped pins to create smooth beads. Clean off the flux residue using a cotton pad dabbed in isopropyl alcohol.","title":"Add the Motor Pins"},{"location":"assembly/digitpcbassembly/#mount_the_motor_drivers","text":"From the front of the digit PCB, orient the motor driver so the notch (or pin 1) is aligned with the 16 pin header. CAREFULLY insert the motor driver into the 16 pin header and ensure none of the pins on the motor driver are bent or protruding from the 16 pin header. Repeat the install for the remaining motor drivers.","title":"Mount the Motor Drivers"},{"location":"assembly/digitpcbassembly/#add_the_pcb_mount_two_pin_2p_terminal_block_connectors","text":"On the front of the digit PCB, insert the PCB two pin terminal block connector into the 5v through holes so the face of the connector where the wires are inserted points toward the LEDs on the PCB. Solder the terminal block connector pins on the back of the digit PCB. On the front of the digit PCB position the 2 pin terminal block connector facing away from the LEDs. For PCBs labelled \"2\" & \"3\" , insert the connector pins into the UART Tx-1/Rx-1 through holes. For the digit PCB labelled \"0\" , insert the connector into the Tx-0/Rx-0 through holes. On the back of the digit PCB, solder the remaining connector pins, cut the pins flush, resolder to a smooth bead, then remove the flux wth a cotton dabbed with isopropyl alcohol.","title":"Add the PCB Mount, Two pin (2P) Terminal Block Connectors"},{"location":"assembly/digitpcbassembly/#add_the_electrolytic_and_ceramic_capacitors","text":"On the front of the digit PCB, align the electrolytic capacitor - sign opposite the + printed on the PCB for capacitor c1 , see the picture below. Insert the pins into the through holes, then turn the digit PCB over to the back side and solder the capacitor. On the front of the digit PCB, insert the ceramic capacitor pins into the through holes titled c2 . Turn the digit PCB over to the back and solder the capacitor. Note Ceramic capacitors do not have polarity and can be inserted in any direction. 3. On the back of the digit PCB, cut the pins flush, resolder to a smooth bead, then remove the flux with a cotton dabbed with isopropyl alcohol.","title":"Add the Electrolytic and Ceramic Capacitors"},{"location":"assembly/digitpcbassembly/#add_the_20_pin_headers_and_install_the_microcontroller","text":"On the back side of the PCB, place the two 20 pin headers into the through holes for RASP1 . Carefully turn over the PCB while keeping the 20 pin headers in the through holes. Level the PCB and adjust the two 20 pin headers so they are perpendicular to the PCB. Solder the pins once in place. Snip all 40 of the pins flush, resolder each to a smooth bead, then remove the flux with a cotton dabbed with isopropyl alcohol. Orient the Raspberry Pi Pico 2040 microcontroller so the USB port is facing in the same direction as the PCB silk screen, then gently mount the microcontroller onto the header. Congratulations for assembling a digit PCB! Be sure to test the digit PCB before assembling the next one.","title":"Add the 20 pin Headers and Install the Microcontroller"},{"location":"assembly/digitpcbassembly/#digit_schematics","text":"The schematic diagrams in this section represent the Digit Motor Controller and Digits Microcontroller circuits: Motor Controller Circuit drives the actuator motors for each segment (A-G) to physically move the segments into position, turns on the segment LEDs when extended, and turns off the segment LEDs when retracted. Microcontroller Circuit controls the LEDs for segment illumination (brightness) and communicates with the main controller (Raspberry Pi Pico W 2040) to receive display commands. Together, these circuits enable the digit PCBs to display numbers and characters as part of the larger kinetic display system. Below is an explanation of the components, their purpose, and how the circuitry functions.","title":"Digit Schematics"},{"location":"assembly/digitpcbassembly/#digit_motor_controller_schematic","text":"The schematic in the section shows the motor control circuitry for the digit's seven-segment actuators (A-G). Each segment is controlled by a motor driver IC (L293D) connected to the Raspberry Pi Pico 2040. Note the L293D IC motor driver is considered outdated, but used in this circuit as it works well with toy motors and costs slightly less. For more details see the L293D motorcontroller datasheet .","title":"Digit Motor Controller Schematic"},{"location":"assembly/digitpcbassembly/#key_motor_controller_components_and_their_purpose","text":"L293D Motor Driver ICs (U1, U2, U3, U4) : Purpose : Control the bidirectional movement of the actuator motors for each segment (A-G). Functionality : Each IC controls two segments, allowing precise movement of the actuators. Pins : ENABLE1 and ENABLE2 : Controls the motor speed. INPUT1 , INPUT2 , INPUT3 , INPUT4 : Control the CW (Clockwise) and CCW (Counter clockwise) direction of the motor. OUTPUT1 , OUTPUT2 , OUTPUT3 , OUTPUT4 : Provide the output signals to the motors. Actuator Motors (SEG-A to SEG-G) : Purpose : Physically extends and retracts the segments of the seven-segment display to create the desired digit. Pins : CW extends the segment and CCW retracts the segment: Control the extension and retraction of the actuator. Capacitors (C1, C2) : Purpose : Provide power decoupling and noise filtering for the motor drivers. C1 (1\u03bcF): Stabilizes the power supply for the motor drivers. C2 (0.1\u03bcF): Filters high-frequency noise. GPIO Pins (from Raspberry Pi Pico 2040) : Purpose : Send control signals to the motor drivers. Pins : GPIO11 , GPIO12 , GPIO15 , etc.: Control the INPUT and ENABLE pins of the motor drivers.","title":"Key Motor Controller Components and Their Purpose"},{"location":"assembly/digitpcbassembly/#how_the_motor_controller_circuit_works","text":"Motor Control : The Raspberry Pi Pico 2040 sends signals to the INPUT and ENABLE pins of the L293D ICs. Based on these signals, the motor driver controls the direction and speed of the actuator motors. Segment Movement : Each segment (A-G) is connected to a motor. The motor moves the segment into position to display the desired digit. Power Stabilization : The capacitors C1 and C2 ensure stable operation of the motor drivers by filtering noise and stabilizing the power supply.","title":"How the Motor Controller Circuit Works"},{"location":"assembly/digitpcbassembly/#digit_microcontroller_schematic","text":"The schematic in this section shows the microcontroller circuitry for controlling the LEDs and communicating with the motor controllers.","title":"Digit Microcontroller Schematic"},{"location":"assembly/digitpcbassembly/#key_microcontroller_components_and_their_purpose","text":"Raspberry Pi Pico 2040 (Microcontroller) : Purpose : Acts as the central processing unit for the digit PCB. Functions : Sends control signals to the motor drivers for segment movement. Controls the LEDs for segment illumination. Communicates with the main controller PCB via UART. LEDs (A-LED1 to G-LED4) : Purpose : Illuminates the segments of the seven-segment display. Configuration : Each segment (A-G) has four LEDs connected in parallel. The anode + is connected to the GPIO pins, and the cathode - is connected to ground. Brightness is controlled by the GPIO PWM signals from the microcontroller. Resistors (not used in lieu of PWM) : Purpose : Prevents the LEDs from exceeding their maximum rated power capabilities. The software prevents any LED PWM signal from exceeding a 220 ohm resistor for 3.3v and therefore resistors are not needed. UART Connector : Purpose : Provides communication between the digit PCB and the main controller PCB. Pins : Rx-1 , Tx-1 , Rx-0 , Tx-0 : Used for transmitting and receiving data. Capacitors (C1, C2) : Purpose : Provide power decoupling and noise filtering for the microcontroller and LEDs. C1 (1\u03bcF): Stabilizes the power supply for the LEDs. C2 (0.1\u03bcF): Filters high-frequency noise.","title":"Key Microcontroller Components and Their Purpose"},{"location":"assembly/digitpcbassembly/#how_the_microcontroller_circuit_works","text":"Segment Control : The Raspberry Pi Pico 2040 controls motor direction, extending or retracting the segment, and speed from GPIO pins connected to the motor controllers. The microcontroller determines the length of time the motor is running (between 1/5th and 1/4th of a second), the CW (extend) or CCW (retract) direction of the actuator, and the speed of the motor which is a value typically between 50% to 100% of 5v. LED Control : The Raspberry Pi Pico 2040 controls the LEDs by PWM from the GPIO pins that are connected to the anode of each LED. This allows the microcontroller to turn on/off specific LEDs, control the brightness, and illuminates the desired segments. Communication : The UART connector allows the digit PCB to receive UART commands from the controller and digit 1 PCB. UART commands include which digit to display and brightness levels, as well as various actuator and digit settings. State : The Raspberry Pi Pico 2040 stores the digit state at all times in order to gracefully transition from one number or character to the next and handle graceful or ungraceful power off situations. The state includes which segment is extended or retracted, the type of character map used by the digits, as well as the speed and length of time to run the motors. PowerCommands Stabilization : The capacitors C1 , C2 ensure stable operation of the LEDs and microcontroller by filtering noise and stabilizing the power supply.","title":"How the Microcontroller Circuit Works"},{"location":"assembly/digitpcbtest/","text":"Digit PCB Test \u00b6 Run the tests in this section after assembling each digit PCB to ensure all the components on the PCB are soldered and functional. Any defective electronic component on the digit PCB will need to be replaced before completing the project. Prerequisites \u00b6 Completed digit PCB ready for actuators Computer and microcontroller with the prerequisite software An assembled actuator Test the Motor and LED Segments \u00b6 From Visual Studio Code, open the deployed digit project by following the steps in the screen capture below: (A) click the file menu, (B) select the digit folder, then (C) click the Select Folder button. Following the picture below, plug a USB cable connected to your computer into the Raspberry Pi Pico's USB port on the controller PCB. Connect your Raspberry Pi Pico to Visual Studio Code by opening the MicroPico vREPL in the terminal dropdown, see the prerequisite software section Verify Micropython on your Raspberry Pi Pico . Following the picture below, plug the dupont connector from the actuator into the SEG-A pins with the white wire connected to the CW pin and the black wire to the CCW pin. From Visual Studio Code, (A) click on the digit.py file then (B) select the MicroPico vREPL from the menu in the Terminal pane. From Visual Studio Code (A) verify the connection from your computer to the Raspberry Pi Pico, then (B) click the Run button to run the test application for the digit. The console test application shows various options that relate to segments 0-6 which correspond to segments A-G. For example, segment A is 0, B is 1, until G which is 6. Extend SEG-A by typing e0 in the console. Following the picture below, the 4 SEG-A LEDs light up and the motor briefly turns on. From the terminal session, type r0 to retract the segment. Repeat steps 6 and 7 to verify the remaining SEG-B through SEG-G work as expected. Repeat the test for all digit PCBs 0-3.","title":"Digit PCB Test"},{"location":"assembly/digitpcbtest/#digit_pcb_test","text":"Run the tests in this section after assembling each digit PCB to ensure all the components on the PCB are soldered and functional. Any defective electronic component on the digit PCB will need to be replaced before completing the project.","title":"Digit PCB Test"},{"location":"assembly/digitpcbtest/#prerequisites","text":"Completed digit PCB ready for actuators Computer and microcontroller with the prerequisite software An assembled actuator","title":"Prerequisites"},{"location":"assembly/digitpcbtest/#test_the_motor_and_led_segments","text":"From Visual Studio Code, open the deployed digit project by following the steps in the screen capture below: (A) click the file menu, (B) select the digit folder, then (C) click the Select Folder button. Following the picture below, plug a USB cable connected to your computer into the Raspberry Pi Pico's USB port on the controller PCB. Connect your Raspberry Pi Pico to Visual Studio Code by opening the MicroPico vREPL in the terminal dropdown, see the prerequisite software section Verify Micropython on your Raspberry Pi Pico . Following the picture below, plug the dupont connector from the actuator into the SEG-A pins with the white wire connected to the CW pin and the black wire to the CCW pin. From Visual Studio Code, (A) click on the digit.py file then (B) select the MicroPico vREPL from the menu in the Terminal pane. From Visual Studio Code (A) verify the connection from your computer to the Raspberry Pi Pico, then (B) click the Run button to run the test application for the digit. The console test application shows various options that relate to segments 0-6 which correspond to segments A-G. For example, segment A is 0, B is 1, until G which is 6. Extend SEG-A by typing e0 in the console. Following the picture below, the 4 SEG-A LEDs light up and the motor briefly turns on. From the terminal session, type r0 to retract the segment. Repeat steps 6 and 7 to verify the remaining SEG-B through SEG-G work as expected. Repeat the test for all digit PCBs 0-3.","title":"Test the Motor and LED Segments"},{"location":"assembly/powermanagementpcb/","text":"Power Management PCB Assembly \u00b6 There are several choices of power supplies available in the market. Why not simply use a retail 5v power supply? A few important reasons for building a custom power management system for the display include: Stable Voltage : A drop in voltage occurs in a poor power supply when the heavy duty 103 electric toy motor starts up because each motor requires a high inrush of current to extend or retract the display's segments. Most retail power supplies cannot provide sufficient current causing a dramatic voltage drop leading to instability. The power supply setup in this section ensures the components receive a consistent 5V power, preventing malfunctions or damage to the more sensitive electronic components like the microcontrollers and sensors. Current Requirements : The display has colons, with two motors; four digits, each with seven independent electric motors. There can be up to 5 electric motors running simultaneously to extend or contract the segment or colon. Note there are also additional power requirements for lighting the LEDs. The power system you'll build in this section provides sufficient current to power all motors, sensors, and controllers simultaneously. Safety : Protects the system from overvoltage, short circuits, or power surges. Customization : Tailors the power supply to meet the specific needs of the kinetic display's design and components. Efficiency : Reduces energy loss and improves the overall performance of the display. An old school coil-driven relay is used to shut off power to the digits when in low power mode and not displaying anything. There are other ways to accomplish the same thing with solid state relays or a FET. However, the display is kinetic by design and the use of a coil relay enhances its sound, feel, and aesthetics. Prerequisites \u00b6 3D print of the Display stand Table of components Quantity Component Image 2 2 Pin PCB Mount Screw Terminal Block Connector Straight Pin 1 3 Pin PCB Mount Screw Terminal Block Connector Straight Pin 2 4 Pin PCB Mount Screw Terminal Block Connector Straight Pin 1 SONGLE SRS-05VDC-SL 05VDC-SL 4100 Blue 5V 6PIN Power Relay 1 1N4001 Diode, standard, 1A, 50V, DO-41 1 S8050 TO-92 TH PNP Transistor 2 1K ohm 0805 Resistor 1/2w Metal Film Fixed Resistor 1 2.1mm Barrel Jack 5.5x2.1mm Female DC Power Jack 2.1 X 5.5mm DC Jack Connector 6V 9V 12V DC Jack Panel Mount 10M White 28 AWG Gauge Flexible Silicone Rubber Electric Wire 10M Black 28 AWG Gauge Flexible Silicone Rubber Electric Wire 50cm (optional) 28 AWG Gauge heat shrink Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Isopropyl Alcohol Yes Cotton Facial Pads No Heat gun Power Management PCB Components \u00b6 In this section you'll assemble the power management system PCB. Top view of the power management PCB. Bottom view of the power management PCB. Following the picture below on the TOP side of the PCB, solder the 1k\u03a9 805 surface mount resistor onto R1 . Following the picture below on the TOP side of the PCB, solder the s8050 through hole transistor into Q1 . Be sure to align the pins according to the silk screen outline. Following the picture below on the TOP side of the PCB, solder the 1N4001 diode into D1 . Be sure to align the anode band, with the silk screen outline. Following the picture below on the TOP side of the PCB, solder the 6 pins of the Songle relay into RLY1 . Power Management PCB Block Connectors \u00b6 Top view of the power management PCB with arrows pointing in the direction of the connected wire. Following the picture below on the TOP side of the PCB, hold the PCB so the silk screen C-12V-1 is to your left. Solder the 4 pin terminal block connector into the C-12V-1 through holes so the connection to the wires faces out to the left. Following the picture below on the TOP side of the PCB, hold the PCB so the silk screen C-12V-2 is to your right. Solder the 4 pin terminal block connector into the C-12V-2 through holes so the connection to the wires faces out to the right. Following the picture below on the TOP side of the PCB, hold the PCB so the silk screen CONN-1 is to your left. Solder the 2 pin terminal block connector into the 5v+ 5v- through holes of the CONN-1 silk screen so the connection to the wires faces out to the left. Following the picture below on the TOP side of the PCB, continue to hold the PCB so the silk screen CONN-1 to your left. Solder the 3 pin terminal block connector into the GPIO19 12v+ 12v- through holes of the CONN-1 silk screen so the connection to the wires faces out to the left. Note the arrows pointing in the direction of the connected wire on the BOTTOM side of the power management PCB. Following the picture below on the BOTTOM side of the power management PCB, solder the two pins of the terminal block connector into the through holes marked as 12v(in) . Barrel Jack Panel Mount \u00b6 Cut a black and white 28 AWG wire 4cm in length. Strip about 3mm off the ends of each wire, then tin the stripped ends with a bit of solder. Using a multimeter, locate the positive and negative pins on the barrel jack. In this case, the longer pin is negative. Based on the results from the previous step, solder the white wire onto the positive pin and black onto the negative pin. Add heat shrink to protect exposing the soldered pin locations. Wrap the exposed soldered pin with a piece of electrical tape if you don't have any heat shrink. Secure the heat shrink with a heat gun. Insert the barrel jack into the display stand as shown in the picture below. Note the barrel jack has opposing flat sides that will need to align with the display stand hole. Add the jack nut onto the backside of the barrel jack. Tighten with a wrench so the nut is snug. Don't over tighten as you may damage the stand. Position the bottom side of the power management PCB so the 2 pin terminal block connector is facing toward the mounted barrel jack. Insert and tighten the white wire to the positive (+) terminal and the black wire to the negative (-) terminal. Use two M1.7x6mm self tapping screws to tack the PCB down as later you'll need to remove the PCB to route the wiring. Plug the 12v power supply into the barrel jack. Verify the 12v + and - voltage by placing the probes from a multimeter onto the + and - terminals found on the 4 pin connectors titled C-12V-1 and C-12V-2 . Warning This is an extremely important step to ensure the correctness of your connections. Schematic \u00b6 The power management PCB is designed to provide stable and sufficient power to the kinetic display's motors, LEDs, and sensors. It incorporates protection mechanisms (diode, relay), current regulation (resistor, transistor), and secure connections (terminal blocks, barrel jack). The power management schematic with the buck converter modules ensure the system operates efficiently and safely under varying load conditions. Key Components: \u00b6 1k\u03a9 Resistor (R1) : Used to limit current flow to the base of the transistor. S8050 PNP Transistor (Q1) : Acts as a switch used to control the relay. 1N4001 Diode (D1) : Protects the circuit from reverse polarity or voltage spikes due to the coils in the relay. Songle Relay (RLY1) : A mechanical switch controlled by an electrical signal. It is used to switch high-current loads (e.g., motors) on and off safely. PCB Mount Screw Terminal Blocks : Provide secure connections for external wires to the PCB. These are used for power input and output connections. Barrel Jack Connector : Used to connect the external 12V power supply to the PCB. Circuitry Explanation: \u00b6 Power Input . The 12V power supply is connected to the barrel jack. The positive and negative terminals are routed to the PCB through the terminal block connectors. C-12v-1 and C-12v-2 . Terminal block connector through holes that route the incoming 12v to the assigned buck converter module. When the relay is switched off, the 12v power is cut to the buck converter modules. Relay Control . The relay (RLY1) is controlled by the transistor (Q1). When the transistor is activated by the Raspberry Pi Pico W 2040 GPIO19 pin, it allows current to flow through the relay coil, switching the relay and enabling power to the connected load. Voltage Regulation . The circuit routing 12v to the buck converter modules ensures stable 5V output for sensitive components like the micro controllers and sensors. This is critical to prevent malfunctions caused by voltage drops during high-current motor operations. Protection . The diode (D1) protects the circuit from voltage spikes generated by the relay coil when it is de-energized. This prevents damage to other components. Current Distribution . The terminal blocks distribute power to various parts of the display, including the microcontrollers, motors, LEDs, and sensors. The 4-pin connectors ( C-12V-1 and C-12V-2 ) handle the 12V power.","title":"Power Management PCB"},{"location":"assembly/powermanagementpcb/#power_management_pcb_assembly","text":"There are several choices of power supplies available in the market. Why not simply use a retail 5v power supply? A few important reasons for building a custom power management system for the display include: Stable Voltage : A drop in voltage occurs in a poor power supply when the heavy duty 103 electric toy motor starts up because each motor requires a high inrush of current to extend or retract the display's segments. Most retail power supplies cannot provide sufficient current causing a dramatic voltage drop leading to instability. The power supply setup in this section ensures the components receive a consistent 5V power, preventing malfunctions or damage to the more sensitive electronic components like the microcontrollers and sensors. Current Requirements : The display has colons, with two motors; four digits, each with seven independent electric motors. There can be up to 5 electric motors running simultaneously to extend or contract the segment or colon. Note there are also additional power requirements for lighting the LEDs. The power system you'll build in this section provides sufficient current to power all motors, sensors, and controllers simultaneously. Safety : Protects the system from overvoltage, short circuits, or power surges. Customization : Tailors the power supply to meet the specific needs of the kinetic display's design and components. Efficiency : Reduces energy loss and improves the overall performance of the display. An old school coil-driven relay is used to shut off power to the digits when in low power mode and not displaying anything. There are other ways to accomplish the same thing with solid state relays or a FET. However, the display is kinetic by design and the use of a coil relay enhances its sound, feel, and aesthetics.","title":"Power Management PCB Assembly"},{"location":"assembly/powermanagementpcb/#prerequisites","text":"3D print of the Display stand Table of components Quantity Component Image 2 2 Pin PCB Mount Screw Terminal Block Connector Straight Pin 1 3 Pin PCB Mount Screw Terminal Block Connector Straight Pin 2 4 Pin PCB Mount Screw Terminal Block Connector Straight Pin 1 SONGLE SRS-05VDC-SL 05VDC-SL 4100 Blue 5V 6PIN Power Relay 1 1N4001 Diode, standard, 1A, 50V, DO-41 1 S8050 TO-92 TH PNP Transistor 2 1K ohm 0805 Resistor 1/2w Metal Film Fixed Resistor 1 2.1mm Barrel Jack 5.5x2.1mm Female DC Power Jack 2.1 X 5.5mm DC Jack Connector 6V 9V 12V DC Jack Panel Mount 10M White 28 AWG Gauge Flexible Silicone Rubber Electric Wire 10M Black 28 AWG Gauge Flexible Silicone Rubber Electric Wire 50cm (optional) 28 AWG Gauge heat shrink Table of tools Required Tool Image Yes Soldering station Yes 0.8mm 1.76oz RoHS flux core solder Yes Mini flush cutters Yes Isopropyl Alcohol Yes Cotton Facial Pads No Heat gun","title":"Prerequisites"},{"location":"assembly/powermanagementpcb/#power_management_pcb_components","text":"In this section you'll assemble the power management system PCB. Top view of the power management PCB. Bottom view of the power management PCB. Following the picture below on the TOP side of the PCB, solder the 1k\u03a9 805 surface mount resistor onto R1 . Following the picture below on the TOP side of the PCB, solder the s8050 through hole transistor into Q1 . Be sure to align the pins according to the silk screen outline. Following the picture below on the TOP side of the PCB, solder the 1N4001 diode into D1 . Be sure to align the anode band, with the silk screen outline. Following the picture below on the TOP side of the PCB, solder the 6 pins of the Songle relay into RLY1 .","title":"Power Management PCB Components"},{"location":"assembly/powermanagementpcb/#power_management_pcb_block_connectors","text":"Top view of the power management PCB with arrows pointing in the direction of the connected wire. Following the picture below on the TOP side of the PCB, hold the PCB so the silk screen C-12V-1 is to your left. Solder the 4 pin terminal block connector into the C-12V-1 through holes so the connection to the wires faces out to the left. Following the picture below on the TOP side of the PCB, hold the PCB so the silk screen C-12V-2 is to your right. Solder the 4 pin terminal block connector into the C-12V-2 through holes so the connection to the wires faces out to the right. Following the picture below on the TOP side of the PCB, hold the PCB so the silk screen CONN-1 is to your left. Solder the 2 pin terminal block connector into the 5v+ 5v- through holes of the CONN-1 silk screen so the connection to the wires faces out to the left. Following the picture below on the TOP side of the PCB, continue to hold the PCB so the silk screen CONN-1 to your left. Solder the 3 pin terminal block connector into the GPIO19 12v+ 12v- through holes of the CONN-1 silk screen so the connection to the wires faces out to the left. Note the arrows pointing in the direction of the connected wire on the BOTTOM side of the power management PCB. Following the picture below on the BOTTOM side of the power management PCB, solder the two pins of the terminal block connector into the through holes marked as 12v(in) .","title":"Power Management PCB Block Connectors"},{"location":"assembly/powermanagementpcb/#barrel_jack_panel_mount","text":"Cut a black and white 28 AWG wire 4cm in length. Strip about 3mm off the ends of each wire, then tin the stripped ends with a bit of solder. Using a multimeter, locate the positive and negative pins on the barrel jack. In this case, the longer pin is negative. Based on the results from the previous step, solder the white wire onto the positive pin and black onto the negative pin. Add heat shrink to protect exposing the soldered pin locations. Wrap the exposed soldered pin with a piece of electrical tape if you don't have any heat shrink. Secure the heat shrink with a heat gun. Insert the barrel jack into the display stand as shown in the picture below. Note the barrel jack has opposing flat sides that will need to align with the display stand hole. Add the jack nut onto the backside of the barrel jack. Tighten with a wrench so the nut is snug. Don't over tighten as you may damage the stand. Position the bottom side of the power management PCB so the 2 pin terminal block connector is facing toward the mounted barrel jack. Insert and tighten the white wire to the positive (+) terminal and the black wire to the negative (-) terminal. Use two M1.7x6mm self tapping screws to tack the PCB down as later you'll need to remove the PCB to route the wiring. Plug the 12v power supply into the barrel jack. Verify the 12v + and - voltage by placing the probes from a multimeter onto the + and - terminals found on the 4 pin connectors titled C-12V-1 and C-12V-2 . Warning This is an extremely important step to ensure the correctness of your connections.","title":"Barrel Jack Panel Mount"},{"location":"assembly/powermanagementpcb/#schematic","text":"The power management PCB is designed to provide stable and sufficient power to the kinetic display's motors, LEDs, and sensors. It incorporates protection mechanisms (diode, relay), current regulation (resistor, transistor), and secure connections (terminal blocks, barrel jack). The power management schematic with the buck converter modules ensure the system operates efficiently and safely under varying load conditions.","title":"Schematic"},{"location":"assembly/powermanagementpcb/#key_components","text":"1k\u03a9 Resistor (R1) : Used to limit current flow to the base of the transistor. S8050 PNP Transistor (Q1) : Acts as a switch used to control the relay. 1N4001 Diode (D1) : Protects the circuit from reverse polarity or voltage spikes due to the coils in the relay. Songle Relay (RLY1) : A mechanical switch controlled by an electrical signal. It is used to switch high-current loads (e.g., motors) on and off safely. PCB Mount Screw Terminal Blocks : Provide secure connections for external wires to the PCB. These are used for power input and output connections. Barrel Jack Connector : Used to connect the external 12V power supply to the PCB.","title":"Key Components:"},{"location":"assembly/powermanagementpcb/#circuitry_explanation","text":"Power Input . The 12V power supply is connected to the barrel jack. The positive and negative terminals are routed to the PCB through the terminal block connectors. C-12v-1 and C-12v-2 . Terminal block connector through holes that route the incoming 12v to the assigned buck converter module. When the relay is switched off, the 12v power is cut to the buck converter modules. Relay Control . The relay (RLY1) is controlled by the transistor (Q1). When the transistor is activated by the Raspberry Pi Pico W 2040 GPIO19 pin, it allows current to flow through the relay coil, switching the relay and enabling power to the connected load. Voltage Regulation . The circuit routing 12v to the buck converter modules ensures stable 5V output for sensitive components like the micro controllers and sensors. This is critical to prevent malfunctions caused by voltage drops during high-current motor operations. Protection . The diode (D1) protects the circuit from voltage spikes generated by the relay coil when it is de-energized. This prevents damage to other components. Current Distribution . The terminal blocks distribute power to various parts of the display, including the microcontrollers, motors, LEDs, and sensors. The 4-pin connectors ( C-12V-1 and C-12V-2 ) handle the 12V power.","title":"Circuitry Explanation:"},{"location":"assembly/powermanagementpcbtest/","text":"Power Management PCB Test \u00b6 Run the tests in this section after assembling the power management PCB. Any defective electronic component on the digit PCB will need to be replaced before completing the project. Prerequisites \u00b6 Completed the controller and digit 1 PCB assembly Completed power management PCB Computer and microcontroller with the prerequisite software 3 male-male jumpers (or wires with the ends stripped in tinned with solder) Test Relay \u00b6 Following the picture below on the BACK face of the controller and digit 1 PCB, (A) using a pair of jumper wires, connect the positive (+) and negative (-) ports of the terminal block connector 5v-OUT to the (B) positive (+) and negative (-) ports on the corresponding terminal block connector marked CONN-1 on the power management PCB. Using a single jumper wire, (A) connect the GPIO19 port of the terminal block connector in CONN-1 on the power management PCB to (B) the GPIO19 port of the terminal block connector on the FRONT face of the controller and digit 1 PCB. Following the picture below, connect a USB cable from your computer to the Raspberry Pi Pico W on the BACK face of the controller and digit 1 PCB. From your computer, open a terminal session using Visual Studio Code by selecting MicroPico vREPL from the terminal dropdown menu. Once connected, type (or copy/paste each line) the following code into the terminal window: from machine import Pin p = Pin(19, Pin.OUT) p.on() Once you hear the relay click to connect the circuit, then type the following code into the terminal window: p.off() Below is a screenshot of the terminal session:","title":"Power Management PCB Test"},{"location":"assembly/powermanagementpcbtest/#power_management_pcb_test","text":"Run the tests in this section after assembling the power management PCB. Any defective electronic component on the digit PCB will need to be replaced before completing the project.","title":"Power Management PCB Test"},{"location":"assembly/powermanagementpcbtest/#prerequisites","text":"Completed the controller and digit 1 PCB assembly Completed power management PCB Computer and microcontroller with the prerequisite software 3 male-male jumpers (or wires with the ends stripped in tinned with solder)","title":"Prerequisites"},{"location":"assembly/powermanagementpcbtest/#test_relay","text":"Following the picture below on the BACK face of the controller and digit 1 PCB, (A) using a pair of jumper wires, connect the positive (+) and negative (-) ports of the terminal block connector 5v-OUT to the (B) positive (+) and negative (-) ports on the corresponding terminal block connector marked CONN-1 on the power management PCB. Using a single jumper wire, (A) connect the GPIO19 port of the terminal block connector in CONN-1 on the power management PCB to (B) the GPIO19 port of the terminal block connector on the FRONT face of the controller and digit 1 PCB. Following the picture below, connect a USB cable from your computer to the Raspberry Pi Pico W on the BACK face of the controller and digit 1 PCB. From your computer, open a terminal session using Visual Studio Code by selecting MicroPico vREPL from the terminal dropdown menu. Once connected, type (or copy/paste each line) the following code into the terminal window: from machine import Pin p = Pin(19, Pin.OUT) p.on() Once you hear the relay click to connect the circuit, then type the following code into the terminal window: p.off() Below is a screenshot of the terminal session:","title":"Test Relay"},{"location":"assembly/uartandrelaywiring/","text":"UART and Relay Wiring \u00b6 UART (Universal Asynchronous Receiver-Transmitter) facilitates communication between the controller and the digit PCBs. The controller acts as the central hub, transmitting commands and receiving status updates from the digits. Controller (Transmitter and Receiver) : The controller's UART Tx (transmit) pin sends data to the digits, such as display commands and brightness levels. The controller's UART Rx (receive) pin listens for acknowledgment or status updates from the digits. Digits (Receivers and Transmitters) : Each digit PCB's UART Rx pin receives commands from the controller. The digit PCBs' UART Tx pins send status updates or responses back to the controller. This bidirectional communication ensures synchronized operation of the display, enabling the controller to manage all digits effectively. UART Wiring \u00b6 Relay Wiring \u00b6","title":"UART and Relay Wiring"},{"location":"assembly/uartandrelaywiring/#uart_and_relay_wiring","text":"UART (Universal Asynchronous Receiver-Transmitter) facilitates communication between the controller and the digit PCBs. The controller acts as the central hub, transmitting commands and receiving status updates from the digits. Controller (Transmitter and Receiver) : The controller's UART Tx (transmit) pin sends data to the digits, such as display commands and brightness levels. The controller's UART Rx (receive) pin listens for acknowledgment or status updates from the digits. Digits (Receivers and Transmitters) : Each digit PCB's UART Rx pin receives commands from the controller. The digit PCBs' UART Tx pins send status updates or responses back to the controller. This bidirectional communication ensures synchronized operation of the display, enabling the controller to manage all digits effectively.","title":"UART and Relay Wiring"},{"location":"assembly/uartandrelaywiring/#uart_wiring","text":"","title":"UART Wiring"},{"location":"assembly/uartandrelaywiring/#relay_wiring","text":"","title":"Relay Wiring"},{"location":"createandorder/3dprints/","text":"3D Print the Display Parts \u00b6 Below are few guidelines to keep in mind when printing and assembling the display: Print all the parts by color and filament type. First print all the white pieces, then black. The display face uses over 2/3rds of the 1 KG roll of filament. Therefore, be sure to use the same roll of filament when printing both halves of the display face, segments, and colons. Also, have two 1 KG rolls of white filament from the same batch to avoid inconsistencies in your print color. Do not use any glue as it is not necessary and may make a mess. Do not worry if your 3D printer and slicer cannot iron the top surfaces. Ironing the top surfaces is for fit and finish and will not affect the functionality of the display. Be sure you apply an adhesive to the printer plate bed otherwise the edges and corners of the display face may warp. I used all weather Aqua Net, super hold hair spray for my display faces which provided an even coating of adhesive across the entire surface of the bed plate and resulted in clean corners and edges. All 3D printed parts, see table below for details. # File Name Description Material Color Quantity Infill Infill Pattern Enable Support Ironing Per unit (g) Total (g) 1 motor-gear30.stl Pinion gear 5:1 ratio Nylon (PA) Black 30 100% Rectilinear No None 1.4 42 2 motor-rail-gear.stl Segment rack gear Nylon (PA) Black 30 100% Rectilinear No Top Surfaces 1.4 42 3 digit-backplate.stl Digit motor mount plate PLA Black 3 50% Grid No Top Surfaces 63 189 4 digit-colon-backplate.stl Colon/digit motor mount plate PLA Black 1 50% Grid No Top Surfaces 84 84 5 motor-gear10.stl Shaft gear on DC motor PLA Black 30 100% Rectilinear No None 0.6 18 6 face-digits0-1.stl Right side of display face PLA White 1 50% Grid Yes Top Surfaces 340 340 7 face-digits2-3.stl Left side of display face PLA White 1 50% Grid Yes Top Surfaces 315 315 8 motor-mount Micro 130 DC 3V -12V motor mount PLA White 30 50% Grid Yes Top Surfaces 9.7 291 9 rackgear-bumper.stl Rail gear stop PLA White 30 100% Rectilinear No Top Surfaces 0.27 8.1 10 seg-pin Connects rail gear to segment PLA White 30 100% Rectilinear No Top Surfaces 11 seg-a Segment a PLA White 4 100% Rectilinear No Top Surfaces 12 seg-b Segment b PLA White 4 100% Rectilinear No Top Surfaces 13 seg-c Segment c PLA White 4 100% Rectilinear No Top Surfaces 14 seg-d Segment d PLA White 4 100% Rectilinear No Top Surfaces 15 seg-e Segment e PLA White 4 100% Rectilinear No Top Surfaces 16 seg-f Segment f PLA White 4 100% Rectilinear No Top Surfaces 17 seg-g Segment g PLA White 4 100% Rectilinear No Top Surfaces 18 digit-colon-gasket.stl Colon/digit PCB gasket TPU Black 1 50% Grid No None 39 39 19 digit-gasket.stl Digit PCB gasket TPU Black 3 50% Grid No None 20 60 20 rackgear-gasket.stl Rail gear stop gasket TPU Black 30 100% Rectilinear No None 0.06 1.8 Congratulations for fabricating all your parts!","title":"Print Parts"},{"location":"createandorder/3dprints/#3d_print_the_display_parts","text":"Below are few guidelines to keep in mind when printing and assembling the display: Print all the parts by color and filament type. First print all the white pieces, then black. The display face uses over 2/3rds of the 1 KG roll of filament. Therefore, be sure to use the same roll of filament when printing both halves of the display face, segments, and colons. Also, have two 1 KG rolls of white filament from the same batch to avoid inconsistencies in your print color. Do not use any glue as it is not necessary and may make a mess. Do not worry if your 3D printer and slicer cannot iron the top surfaces. Ironing the top surfaces is for fit and finish and will not affect the functionality of the display. Be sure you apply an adhesive to the printer plate bed otherwise the edges and corners of the display face may warp. I used all weather Aqua Net, super hold hair spray for my display faces which provided an even coating of adhesive across the entire surface of the bed plate and resulted in clean corners and edges. All 3D printed parts, see table below for details. # File Name Description Material Color Quantity Infill Infill Pattern Enable Support Ironing Per unit (g) Total (g) 1 motor-gear30.stl Pinion gear 5:1 ratio Nylon (PA) Black 30 100% Rectilinear No None 1.4 42 2 motor-rail-gear.stl Segment rack gear Nylon (PA) Black 30 100% Rectilinear No Top Surfaces 1.4 42 3 digit-backplate.stl Digit motor mount plate PLA Black 3 50% Grid No Top Surfaces 63 189 4 digit-colon-backplate.stl Colon/digit motor mount plate PLA Black 1 50% Grid No Top Surfaces 84 84 5 motor-gear10.stl Shaft gear on DC motor PLA Black 30 100% Rectilinear No None 0.6 18 6 face-digits0-1.stl Right side of display face PLA White 1 50% Grid Yes Top Surfaces 340 340 7 face-digits2-3.stl Left side of display face PLA White 1 50% Grid Yes Top Surfaces 315 315 8 motor-mount Micro 130 DC 3V -12V motor mount PLA White 30 50% Grid Yes Top Surfaces 9.7 291 9 rackgear-bumper.stl Rail gear stop PLA White 30 100% Rectilinear No Top Surfaces 0.27 8.1 10 seg-pin Connects rail gear to segment PLA White 30 100% Rectilinear No Top Surfaces 11 seg-a Segment a PLA White 4 100% Rectilinear No Top Surfaces 12 seg-b Segment b PLA White 4 100% Rectilinear No Top Surfaces 13 seg-c Segment c PLA White 4 100% Rectilinear No Top Surfaces 14 seg-d Segment d PLA White 4 100% Rectilinear No Top Surfaces 15 seg-e Segment e PLA White 4 100% Rectilinear No Top Surfaces 16 seg-f Segment f PLA White 4 100% Rectilinear No Top Surfaces 17 seg-g Segment g PLA White 4 100% Rectilinear No Top Surfaces 18 digit-colon-gasket.stl Colon/digit PCB gasket TPU Black 1 50% Grid No None 39 39 19 digit-gasket.stl Digit PCB gasket TPU Black 3 50% Grid No None 20 60 20 rackgear-gasket.stl Rail gear stop gasket TPU Black 30 100% Rectilinear No None 0.06 1.8 Congratulations for fabricating all your parts!","title":"3D Print the Display Parts"},{"location":"createandorder/bom/","text":"Bill of Materials \u00b6 Item Quantity Single digit PCB for digits 0, 2, & 3 3 Controller PCB for digit 1 and the colons 1 Powerbank PCB 1 A4 Size Felt Sheets with Adhesive Backing 1 2 Inch Jumbo Paper Clips (Smooth Big Paperclips) 20 M1.7 x 5mm Stainless Steel Phillips Round Head Self Tapping Screws 200 M1.7 x 8mm Stainless Steel Phillips Round Head Self Tapping Screws 200 M2 X 15mm Stainless Steel Phillips Round Head Self Tapping Screws 50 Micro 130 DC Motor Strong Magnetic Brushed Electric DC 3V -12V 25000 RPM Cars Toys Electric Motor, High Speed Torque 30 Black 28 AWG Gauge Flexible Silicone Rubber Electric Wire 3M White 28 AWG Gauge Flexible Silicone Rubber Electric Wire 3M Male Breakout Pin Connector 2.54mm 100 2.54mm 0.1\" Pitch PCB Mount Screw Terminal Block Connector, 2P 3P 4P Terminals for 26-18AWG Cable 50 Dupont Jumper Wire Cable Female Pin Connector 2.54mm 100 2.54mm 1x2p Dupont Connector Housing Female for Dupont Cable and Jumper Wire 100 Digital Temperature and Humidity Sensor DHT22 Module, 3 pin 1 5mm 0.5 \u03a9 ohm Photoresistor Resistor 5516 GL5516 1 5mm Flat Top LED Diode Lights 1 (Clear Transparent Lens) Bright Lighting Bulb Lamps Electronics Components Indicator Light Emitting Diodes 112 3mm Flat Top LED Diode Lights 1 (Clear Transparent Lens) Bright Lighting Bulb Lamps Electronics Components Indicator Light Emitting Diodes 2 Vertical Slide Switches Micro High Knob 3 Pin 2 Position 1P2T SPDT Panel Mount AC 125V 2A 1 2.54mm 0.1\" Pitch PCB Mount Screw Terminal Block Connector, 2P 3P 4P Terminals 150V 6A for 26-18AWG Cable 1 LM2596 DC-DC Step Down Variable Volt Regulator Input 3.2V-40V Output 1.25V-35V Adjustable Buck Converter Electronic Voltage Stabilizer Power Supply Module 5 2.1mm Barrel Jack 5.5x2.1mm Female DC Power Jack 2.1 X 5.5mm DC Jack Connector 6V 9V 12V DC Jack Panel Mount 1 12V 5A Power Supply, Waysse Power Supply Adapter, AC DC Converter 100-220V to 12 Volt 5 Amp Transformer 5.5x2.1mm Plug 1 S8050D S8050 NPN Transistor TO-92 20V 700MA 1W 1 1N4001 Diode, standard, 1A, 50V, DO-41 1 (optional) 20pin x 10pcs Female Headers Pins Straight Single Row Gold Plated Pitch 2.54mm 0.1 inch for PCB Connector Machine Breadboard Electronic Circuit Board 10 SONGLE SRS-05VDC-SL 05VDC-SL 4100 Blue 5V 6PIN Power Relay 1 L293D 16-pin IC Stepper Motor Drivers Controller 17 0.1uF Ceramic Disc Capacitor - 50 Volts 5 1uF Electrolytic Capacitor 1UF-50V-5X11 5 S8550 TO-92 PNP Transistor 1 2N2222 TO-92 NPN Transistor 1 10K ohm 0805 Resistor 1/2w Metal Film Fixed Resistor 2 Vertical Slide Switch Micro High Knob 3 Pin 2 Position 1P2T SPDT Panel Mount AC 125V 2A 1 Raspberry pi 2040 Pico 4 Raspberry pi 2040 pico-W 1 Superglue (small tube) 1 White PLA Comgrow 1KG 2 Black PLA Comgrow 1 KG 1 Black Easy Nylon Overture, 1 KG 1 Black TPU Colorful (flexible), 1 KG 1 Tools \u00b6 3D printer Wire Stripper for 28 AWG stranded wire Small Philips head screwdriver Dupont connector tool Soldering station with solder/flux Needle nose pliers. Tweezers Clamping tweezers Zinc strip or thin metal strip (for melting PLA) Wire snipper Multimeter Breadboard and jumpers for testing electronics Label maker (optional) Computer with USB connector You can choose any color of LED that you would like for your display. White LEDs are the easiest to work with as they have no color variation within the same batch. Colored LEDs like blue or warm white may vary in the same batch. Therefore, you will need to order more than the quantity listed in the BOM to get enough LEDs of the same color. Be sure to test your LEDs by using your phones digital camera to see if there are any variations in color when the LEDs are lit. Below is a photo showing the color variation of blue 5mm LEDs within the same batch using a breadboards power rail with 2.63v. In this case I used the purple hued LEDs because there were 112 of the same color. \u21a9 \u21a9","title":"Bill of Materials"},{"location":"createandorder/bom/#bill_of_materials","text":"Item Quantity Single digit PCB for digits 0, 2, & 3 3 Controller PCB for digit 1 and the colons 1 Powerbank PCB 1 A4 Size Felt Sheets with Adhesive Backing 1 2 Inch Jumbo Paper Clips (Smooth Big Paperclips) 20 M1.7 x 5mm Stainless Steel Phillips Round Head Self Tapping Screws 200 M1.7 x 8mm Stainless Steel Phillips Round Head Self Tapping Screws 200 M2 X 15mm Stainless Steel Phillips Round Head Self Tapping Screws 50 Micro 130 DC Motor Strong Magnetic Brushed Electric DC 3V -12V 25000 RPM Cars Toys Electric Motor, High Speed Torque 30 Black 28 AWG Gauge Flexible Silicone Rubber Electric Wire 3M White 28 AWG Gauge Flexible Silicone Rubber Electric Wire 3M Male Breakout Pin Connector 2.54mm 100 2.54mm 0.1\" Pitch PCB Mount Screw Terminal Block Connector, 2P 3P 4P Terminals for 26-18AWG Cable 50 Dupont Jumper Wire Cable Female Pin Connector 2.54mm 100 2.54mm 1x2p Dupont Connector Housing Female for Dupont Cable and Jumper Wire 100 Digital Temperature and Humidity Sensor DHT22 Module, 3 pin 1 5mm 0.5 \u03a9 ohm Photoresistor Resistor 5516 GL5516 1 5mm Flat Top LED Diode Lights 1 (Clear Transparent Lens) Bright Lighting Bulb Lamps Electronics Components Indicator Light Emitting Diodes 112 3mm Flat Top LED Diode Lights 1 (Clear Transparent Lens) Bright Lighting Bulb Lamps Electronics Components Indicator Light Emitting Diodes 2 Vertical Slide Switches Micro High Knob 3 Pin 2 Position 1P2T SPDT Panel Mount AC 125V 2A 1 2.54mm 0.1\" Pitch PCB Mount Screw Terminal Block Connector, 2P 3P 4P Terminals 150V 6A for 26-18AWG Cable 1 LM2596 DC-DC Step Down Variable Volt Regulator Input 3.2V-40V Output 1.25V-35V Adjustable Buck Converter Electronic Voltage Stabilizer Power Supply Module 5 2.1mm Barrel Jack 5.5x2.1mm Female DC Power Jack 2.1 X 5.5mm DC Jack Connector 6V 9V 12V DC Jack Panel Mount 1 12V 5A Power Supply, Waysse Power Supply Adapter, AC DC Converter 100-220V to 12 Volt 5 Amp Transformer 5.5x2.1mm Plug 1 S8050D S8050 NPN Transistor TO-92 20V 700MA 1W 1 1N4001 Diode, standard, 1A, 50V, DO-41 1 (optional) 20pin x 10pcs Female Headers Pins Straight Single Row Gold Plated Pitch 2.54mm 0.1 inch for PCB Connector Machine Breadboard Electronic Circuit Board 10 SONGLE SRS-05VDC-SL 05VDC-SL 4100 Blue 5V 6PIN Power Relay 1 L293D 16-pin IC Stepper Motor Drivers Controller 17 0.1uF Ceramic Disc Capacitor - 50 Volts 5 1uF Electrolytic Capacitor 1UF-50V-5X11 5 S8550 TO-92 PNP Transistor 1 2N2222 TO-92 NPN Transistor 1 10K ohm 0805 Resistor 1/2w Metal Film Fixed Resistor 2 Vertical Slide Switch Micro High Knob 3 Pin 2 Position 1P2T SPDT Panel Mount AC 125V 2A 1 Raspberry pi 2040 Pico 4 Raspberry pi 2040 pico-W 1 Superglue (small tube) 1 White PLA Comgrow 1KG 2 Black PLA Comgrow 1 KG 1 Black Easy Nylon Overture, 1 KG 1 Black TPU Colorful (flexible), 1 KG 1","title":"Bill of Materials"},{"location":"createandorder/bom/#tools","text":"3D printer Wire Stripper for 28 AWG stranded wire Small Philips head screwdriver Dupont connector tool Soldering station with solder/flux Needle nose pliers. Tweezers Clamping tweezers Zinc strip or thin metal strip (for melting PLA) Wire snipper Multimeter Breadboard and jumpers for testing electronics Label maker (optional) Computer with USB connector You can choose any color of LED that you would like for your display. White LEDs are the easiest to work with as they have no color variation within the same batch. Colored LEDs like blue or warm white may vary in the same batch. Therefore, you will need to order more than the quantity listed in the BOM to get enough LEDs of the same color. Be sure to test your LEDs by using your phones digital camera to see if there are any variations in color when the LEDs are lit. Below is a photo showing the color variation of blue 5mm LEDs within the same batch using a breadboards power rail with 2.63v. In this case I used the purple hued LEDs because there were 112 of the same color. \u21a9 \u21a9","title":"Tools"},{"location":"createandorder/pcb/","text":"Fabricate the Printed Circuit Boards (PCBs) \u00b6 For this task you will order the fabrication of your PCBs. The PCB files are in your fork at kinetic-display\\pcb . See the instructions below to place a separate order for each of the 3 files that begin with the following names: Gerber_KineticDisplay-Controller Gerber_KineticDisplay-PowerSystem Gerber_KineticDisplay-SingleDigit You will need to order more PCBs than required for this project because the minimum order is five for most PCB fabrication facilities. Be sure to order the remaining components and materials from the bill of materials (BOM). From your browser open https://jlcpcb.com/ and create an account if you do not have one, then click the \u201cOrder now\u201d button. See the figure below. Open the Gerber file by clicking the \u201cAdd Gerber file\u201d button. Repeat this step through step 4 for each of the three Gerber files found under the kinetic-display\\pcb directory . See the figure below. Use all the default settings except change the PCB color to white to give the LEDs more luminosity. Click the \u201cSAVE TO CART\u201d and finish the order by completing the shipping and payment part of the wizard. Congratulations for getting all PCBs ordered!","title":"Order PCBs"},{"location":"createandorder/pcb/#fabricate_the_printed_circuit_boards_pcbs","text":"For this task you will order the fabrication of your PCBs. The PCB files are in your fork at kinetic-display\\pcb . See the instructions below to place a separate order for each of the 3 files that begin with the following names: Gerber_KineticDisplay-Controller Gerber_KineticDisplay-PowerSystem Gerber_KineticDisplay-SingleDigit You will need to order more PCBs than required for this project because the minimum order is five for most PCB fabrication facilities. Be sure to order the remaining components and materials from the bill of materials (BOM). From your browser open https://jlcpcb.com/ and create an account if you do not have one, then click the \u201cOrder now\u201d button. See the figure below. Open the Gerber file by clicking the \u201cAdd Gerber file\u201d button. Repeat this step through step 4 for each of the three Gerber files found under the kinetic-display\\pcb directory . See the figure below. Use all the default settings except change the PCB color to white to give the LEDs more luminosity. Click the \u201cSAVE TO CART\u201d and finish the order by completing the shipping and payment part of the wizard. Congratulations for getting all PCBs ordered!","title":"Fabricate the Printed Circuit Boards (PCBs)"}]}